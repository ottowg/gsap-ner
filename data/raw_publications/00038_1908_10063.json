{"text": "FinBERT: Financial Sentiment Analysis with Pre-trained Language Models\n\nAbstract:\nFinancial sentiment analysis is a challenging task due to the specialized language and lack of labeled data in that domain. Generalpurpose models are not effective enough because of specialized language used in financial context. We hypothesize that pre-trained language models can help with this problem because they require fewer labeled examples and they can be further trained on domainspecific corpora. We introduce FinBERT, a language model based on BERT, to tackle NLP tasks in financial domain. Our results show improvement in every measured metric on current state-of-theart results for two financial sentiment analysis datasets. We find that even with a smaller training set and fine-tuning only a part of the model, FinBERT outperforms state-of-the-art machine learning methods.\n\n\n1 INTRODUCTION\nPrices in an open market reflects all of the available information regarding assets exchanged in an economy [16]. When new information becomes available, all actors in the economy update their positions and prices adjust accordingly, which makes beating the markets consistently impossible. However, the definition of \"new information\" might change as new information retrieval technologies become available and early-adoption of such technologies might provide an advantage in the short-term.\nAnalysis of financial texts, be it news, analyst reports or official company announcements is a possible source of new information. With unprecedented amount of such text being created every day, manually analyzing these and deriving actionable insights from them is too big of a task for any single entity. Hence, automated sentiment or polarity analysis of texts produced by financial actors using natural language processing (NLP) methods has gained popularity during the last decade [4].\nThe principal research interest for this thesis is the polarity analysis, which is classifying text as positive, negative or neutral, in a specific domain. It requires to address two challenges: 1) The most sophisticated classification methods that make use of neural nets require vast amounts of labeled data and labeling financial text snippets requires costly expertise. 2) The sentiment analysis models trained on general corpora are not suited to the task, because financial texts have a specialized language with unique vocabulary and have a tendency to use vague expressions instead of easilyidentified negative/positive words.\nUsing carefully crafted financial sentiment lexicons such as Loughran and McDonald (2011) [11] may seem a solution because they incorporate existing financial knowledge into textual analysis. However, they are based on \"word counting\" methods, which come short in analyzing deeper semantic meaning of a given text.\nNLP transfer learning methods look like a promising solution to both of the challenges mentioned above, and are the focus of this thesis. The core idea behind these models is that by training language models on very large corpora and then initializing down-stream models with the weights learned from the language modeling task, a much better performance can be achieved. The initialized layers can range from the single word embedding layer [23] to the whole model [5]. This approach should, in theory, be an answer to the scarcity of labeled data problem. Language models don't require any labels, since the task is predicting the next word. They can learn how to represent the semantic information. That leaves the fine-tuning on labeled data only the task of learning how to use this semantic information to predict the labels.\nOne particular component of the transfer learning methods is the ability to further pre-train the language models on domain specific unlabeled corpus. Thus, the model can learn the semantic relations in the text of the target domain, which is likely to have a different distribution than a general corpus. This approach is especially promising for a niche domain like finance, since the language and vocabulary used is dramatically different than a general one.\nThe goal of this thesis is to test these hypothesized advantages of using and fine-tuning pre-trained language models for financial domain. For that, sentiment of a sentence from a financial news article towards the financial actor depicted in the sentence will be tried to be predicted, using the Financial PhraseBank created by Malo et al. (2014) [17] and FiQA Task 1 sentiment scoring dataset [15].\nThe main contributions of this thesis are the following:\n\u2022 We introduce FinBERT, which is a language model based on BERT for financial NLP tasks. We evaluate FinBERT on two financial sentiment analysis datasets. \u2022 We achieve the state-of-the-art on FiQA sentiment scoring and Financial PhraseBank. \u2022 We implement two other pre-trained language models, ULM-Fit and ELMo for financial sentiment analysis and compare these with FinBERT. The rest of the thesis is structured as follows: First, relevant literature in both financial polarity analysis and pre-trained language models are discussed (Section 2). Then, the evaluated models are described (Section 3). This is followed by the description of the experimental setup being used (Section 4). In Section 5, we present the experimental results on the financial sentiment datasets. Then we further analyze FinBERT from different perspectives in Section 6. Finally, we conclude with Section 7.\n\n2 RELATED LITERATURE\nThis section describes previous research conducted on sentiment analysis in finance (2.1) and text classification using pre-trained language models (2.2).\n\n2.1 Sentiment analysis in finance\nSentiment analysis is the task of extracting sentiments or opinions of people from written language [10]. We can divide the recent efforts into two groups: 1) Machine learning methods with features extracted from text with \"word counting\" [1, 19, 28, 30], 2) Deep learning methods, where text is represented by a sequence of embeddings [2, 25, 32]. The former suffers from inability to represent the semantic information that results from a particular sequence of words, while the latter is often deemed as too \"data-hungry\" as it learns a much higher number of parameters [18].\nFinancial sentiment analysis differs from general sentiment analysis not only in domain, but also the purpose. The purpose behind financial sentiment analysis is usually guessing how the markets will react with the information presented in the text [9].  Loughran and McDonald (2016) presents a thorough survey of recent works on financial text analysis utilizing machine learning with \"bag-ofwords\" approach or lexicon-based methods [12]. For example, in Loughran and McDonald (2011), they create a dictionary of financial terms with assigned values such as \"positive\" or \"uncertain\" and measure the tone of a documents by counting words with a specific dictionary value [11]. Another example is Pagolu et al. (2016), where n-grams from tweets with financial information are fed into supervised machine learning algorithms to detect the sentiment regarding the financial entity mentioned.\nOn of the first papers that used deep learning methods for textual financial polarity analysis was Kraus and Feuerriegel (2017) [7]. They apply an LSTM neural network to ad-hoc company announcements to predict stock-market movements and show that method to be more accurate than traditional machine learning approaches. They find pre-training their model on a larger corpus to improve the result, however their pre-training is done on a labeled dataset, which is a more limiting approach then ours, as we pre-train a language model as an unsupervised task.\nThere are several other works that employ various types of neural architectures for financial sentiment analysis.  Sohangir et al. (2018) [26] apply several generic neural network architectures to a StockTwits dataset, finding CNN as the best performing neural network architecture. Lutz et al. 2018 [13] take the approach of using doc2vec to generate sentence embeddings in a particular company ad-hoc announcement and utilize multi-instance learning to predict stock market outcomes.  Maia et al. (2018) [14] use a combination of text simplification and LSTM network to classify a set of sentences from financial news according to their sentiment and achieve stateof-the-art results for the Financial PhraseBank, which is used in thesis as well.\nDue to lack of large labeled financial datasets, it is difficult to utilize neural networks to their full potential for sentiment analysis.\nEven when their first (word embedding) layers are initialized with pre-trained values, the rest of the model still needs to learn complex relations with relatively small amount of labeled data. A more promising solution could be initializing almost the entire model with pre-trained values and fine-tuning those values with respect to the classification task.\n\n2.2 Text classification using pre-trained language models\nLanguage modeling is the task of predicting the next word in a given piece of text. One of the most important recent developments in natural language processing is the realization that a model trained for language modeling can be successfully fine-tuned for most down-stream NLP tasks with small modifications. These models are usually trained on very large corpora, and then with addition of suitable task-specific layers fine-tuned on the target dataset [6].\nText classification, which is the focus of this thesis, is one of the obvious use-cases for this approach. ELMo (Embeddings from Language Models) [23] was one of the first successful applications of this approach. With ELMo, a deep bidirectional language model is pre-trained on a large corpus. For each word, hidden states of this model is used to compute a contextualized representation. Using the pre-trained weights of ELMo, contextualized word embeddings can be calculated for any piece of text. Initializing embeddings for down-stream tasks with those were shown to improve performance on most tasks compared to static word embeddings such as word2vec or GloVe. For text classification tasks like SST-5, it achieved state-of-the-art performance when used together with a bi-attentive classification network [20].\nAlthough ELMo makes use of pre-trained language models for contextualizing representations, still the information extracted using a language model is present only in the first layer of any model using it. ULMFit (Universal Language Model Fine-tuning) [5] was the first paper to achieve true transfer learning for NLP, as using novel techniques such as discriminative fine-tuning, slanted triangular learning rates and gradual unfreezing. They were able to efficiently fine-tune a whole pre-trained language model for text classification. They also introduced further pre-training of the language model on a domain-specific corpus, assuming target task data comes from a different distribution than the general corpus the initial model was trained on.\nULMFit's main idea of efficiently fine-tuning a pre-trained a language model for down-stream tasks was brought to another level with Bidirectional Encoder Representations from Transformers (BERT) [3], which is also the main focus of this paper. BERT has two important differences from what came before: 1) It defines the task of language modeling as predicting randomly masked tokens in a sequence rather than the next token, in addition to a task of classifying two sentences as following each other or not. 2) It is a very big network trained on an unprecedentedly large corpus. These two factors enabled in to achieve state-of-the-art results in multiple NLP tasks such as, natural language inference or question answering.\nThe specifics of fine-tuning BERT for text classification has not been researched thoroughly. One such recent work is Sun et al.\n(2019) [27]. They conduct a series of experiments regarding different configurations of BERT for text classification. Some of their results will be referenced throughout the rest of the thesis, for the configuration of our model.\n\n3 METHOD\nIn this section, we will present our BERT implementation for financial domain named as FinBERT, after giving a brief background on relevant neural architectures.\n\n3.1 Preliminaries\n3.1.1 LSTM. Long short-term memory (LSTM) is a type of recurrent neural network that allows long-term dependencies in a sequence to persist in the network by using \"forget\" and \"update\" gates. It is one of the primary architectures for modeling any sequential data generation process, from stock prices to natural language. Since a text is a sequence of tokens, the first choice for any LSTM natural language processing model is determining how to initially represent a single token. Using pre-trained weights for initial token representation is the common practice. One such pre-training algorithm is GLoVe (Global Vectors for Word Representation) [22]. GLoVr is a model for calculating word representations with the unsupervised task of training a log-bilinear regression model on a word-word co-occurance matrix from a large corpus. It is an effective model for representing words in a vector space, however it doesn't contextualize these representations with respect to the sequence they are actually used in 1 .\n\n3.1.2 ELMo.\nELMo embeddings [23] are contextualized word representations in the sense that the surrounding words influence the representation of the word. In the center of ELMo, there is a bidirectional language model with multiple LSTM layers. The goal of a language model is to learn the probability distribution over sequences of tokens in a given vocabulary. ELMo models the probability of a token given the previous (and separately following) tokens in the sequence. Then the model also learns how to weight different representations from different LSTM layers in order to calculate one contextualized vector per token. Once the contextualized representations are extracted, these can be used to initialize any down-stream NLP task 2 .\n\n3.1.3 ULMFit.\nULMFit is a transfer learning model for down-stream NLP tasks, that make use of language model pre-training [5]. Unlike ELMo, with ULMFit, the whole language model is fine-tuned together with the task-specific layers. The underlying language model used in ULMFit is AWD-LSTM, which uses sophisticated dropout tuning strategies to better regularize its LSTM model [21]. For classification using ULMFit two linear layers are added to the pre-trained AWD-LSTM, first of which takes the pooled last hidden states as input.\nULMFit comes with novel training strategies for further pretraining the language model on domain-specific corpus and finetuning on the down-stream task. We implement these strategies with FinBERT as explained in section 3.2. 1 The pre-trained weights for GLoVE can be found here: https://nlp.stanford.edu/projects/glove/ 2 The pre-trained ELMo models can be found here: https://allennlp.org/elmo 3.1.4 Transformer. The Transformer is an attention-based architecture for modeling sequential information, that is an alternative to recurrent neural networks [29]. It was proposed as a sequence-tosequence model, therefore including encoder and decoder mechanisms. Here, we will focus only on the encoder part (though decoder is quite similar). The encoder consists of multiple identical Transformer layers. Each layer has a multi-headed self-attention layer and a fully connected feed-forward network. For one self-attention layer, three mappings from embeddings (key, query and value) are learned. Using each token's key and all tokens' query vectors, a similarity score is calculated with dot product. These scores are used to weight the value vectors to arrive at the new representation of the token. With the multi-headed self-attention, these layers are concatenated together, so that the sequence can be evaluated from varying \"perspectives\". Then the resulted vectors go through fully connected networks with shared parameters.\nAs it was argued by Vaswani 2017 [29], Transformer architecture has several advantages over the RNN-based approaches. Because of RNNs' sequential nature, they are much harder to parallelize on GPUs and too many steps between far away elements in a sequence make it hard for information to persist.\n3.1.5 BERT. BERT [3] is in essence a language model that consists of a set of Transformer encoders stacked on top of each other. However it defines the language modeling task differently from ELMo and AWD-LSTM. Instead of predicting the next word given previous ones, BERT \"masks\" a randomly selected 15% of all tokens. With a softmax layer over vocabulary on top of the last encoder layer the masked tokens are predicted. A second task BERT is trained on is \"next sentence prediction\". Given two sentences, the model predicts whether or not these two actually follow each other.\nThe input sequence is represented with token and position embeddings. Two tokens denoted by [CLS] and [SEP] are added to the beginning and end of the sequence respectively. For all classification tasks, including the next sentence prediction, [CLS] token is used.\nBERT has two versions: BERT-base, with 12 encoder layers, hidden size of 768, 12 multi-head attention heads and 110M parameters in total and BERT-large, with 24 encoder layers, hidden size of 1024, 16 multi-head attention heads and 340M parameters. Both of these models have been trained on BookCorpus [33] and English Wikipedia, which have in total more than 3,500M words 3.\n\n3.2 BERT for financial domain: FinBERT\nIn this subsection we will describe our implementation of BERT: 1) how further pre-training on domain corpus is done, 2-3) how we implemented BERT for classification and regression tasks, 4) training strategies we used during fine-tuning to prevent catastrophic forgetting.\n\n3.2.1\nFurther pre-training. Howard and Ruder (2018) [5] shows that futher pre-training a language model on a target domain corpus improves the eventual classification performance. For BERT, there is not decisive research showing that would be the case as well.\nRegardless, we implement further pre-training in order to observe if such adaptation is going to be beneficial for financial domain.\nFor further pre-training, we experiment with two approaches. The first is pre-training the model on a relatively large corpus from the target domain. For that, we further pre-train a BERT language model on a financial corpus (details of the corpus can be found on section 4.2.1). The second approach is pre-training the model only on the sentences from the training classification dataset. Although the second corpus is much smaller, using data from the direct target might provide better target domain adaptation.\n\n3.2.2\nFinBERT for text classification. Sentiment classification is conducted by adding a dense layer after the last hidden state of the [CLS] token. This is the recommended practice for using BERT for any classification task [3]. Then, the classifier network is trained on the labeled sentiment dataset. An overview of all the steps involved in the procedure is presented on figure 1.\n\n3.2.3 FinBERT for regression.\nWhile the focus of this paper is classification, we also implement regression with almost the same architecture on a different dataset with continuous targets. The only difference is that the loss function being used is mean squared error instead of the cross entropy loss.\n\n3.2.4\nTraining strategies to prevent catastrophic forgetting. As it was pointed out by Howard and Ruder (2018) [5], catastrophic forgetting is a significant danger with this fine-tuning approach. Because the fine-tuning procedure can quickly cause model to \"forget\" the information from language modeling task as it tries to adapt to the new task. In order to deal with this phenomenon, we apply three techniques as it was proposed by Howard and Ruder (2018): slanted triangular learning rates, discriminative fine-tuning and gradual unfreezing.\nSlanted triangular learning rate applies a learning rate schedule in the shape of a slanted triangular, that is, learning rate first linearly increases up to some point and after that point linearly decreases.\nDiscriminative fine-tuning is using lower learning rates for lower layers on the network. Assume our learning rate at layer l is \u03b1. Then for discrimination rate of \u03b8 we calculate the learning rate for layer l \u2212 1 as \u03b1 l \u22121 = \u03b8\u03b1 l . The assumption behind this method is that the lower layers represent the deep-level language information, while the upper ones include information for actual classification task. Therefore we fine-tune them differently.\nWith gradual freezing, we start training with all layers but the classifier layer as frozen. During training we gradually unfreeze all of the layers starting from the highest one, so that the lower level features become the least fine-tuned ones. Hence, during the initial stages of training it is prevented for model to \"forget\" low-level language information that it learned from pre-training.\n\n4 EXPERIMENTAL SETUP 4.1 Research Questions\nWe aim to answer the following research questions:\n(RQ1) What is the performance of FinBERT in short sentence classification compared with the other transfer learning methods like ELMo and ULMFit?  [17]. Financial Phrasebank consists of 4845 english sentences selected randomly from financial news found on LexisNexis database. These sentences then were annotated by 16 people with background in finance and business. The annotators were asked to give labels according to how they think the information in the sentence might affect the mentioned company stock price. The dataset also includes information regarding the agreement levels on sentences among annotators. The distribution of agreement levels and sentiment labels can be seen on table 1. We set aside 20% of all sentences as test and 20% of the remaining as validation set. In the end, our train set includes 3101 examples. For some of the experiments, we also make use of 10-fold cross validation.  [15] is a dataset that was created for WWW '18 conference financial opinion mining and question answering challenge 6 . We use the data for Task 1, which includes 1,174 financial news headlines and tweets with their corresponding sentiment score. Unlike Financial Phrasebank, the targets for this datasets are continuous ranging between [\u22121, 1] with 1 being the most positive. Each example also has information regarding which financial entity is targeted in the sentence. We do 10-fold cross validation for evaluation of the model for this dataset.\n\n4.3 Baseline Methods\nFor contrastive experiments, we consider baselines with three different methods: LSTM classifier with GLoVe embeddings, LSTM classifier with ELMo embeddings and ULMFit classifier. It should be noted that these baseline methods are not experimented with as thoroughly as we did with BERT. Therefore the results should not be interpreted as definitive conclusions of one method being better.\n\n4.3.1 LSTM classifiers.\nWe implement two classifiers using bidirectional LSTM models. In both of them, a hidden size of 128 is used, with the last hidden state size being 256 due to bidirectionality. A fully connected feed-forward layer maps the last hidden state to a vector of three, representing likelihood of three labels. The difference between two models is that one uses GLoVe embeddings, while the other uses ELMo embeddings. A dropout probability of 0.3 and a learning rate of 3e-5 is used in both models. We train them until there is no improvement in validation loss for 10 epochs.\n\n4.3.2 ULMFit.\nAs it was explained in section 3.1.3, classification with ULMFit consists of three steps. The first step of pre-training a language model is already done and the pre-trained weights are released by Howard and Ruder (2018). We first further pre-train AWD-LSTM language model on TRC2-financial corpus for 3 epochs. After that, we fine-tune the model for classification on Financial 6 Data can be found here: https://sites.google.com/view/fiqa/home PhraseBank dataset, by adding a fully-connected layer to the output of pre-trained language model.\n\n4.4 Evaluation Metrics\nFor evaluation of classification models, we use three metrics: Accuracy, cross entropy loss and macro F1 average. We weight cross entropy loss with square root of inverse frequency rate. For example if a label constitutes 25% of the all examples, we weight the loss attributed to that label by 2. Macro F1 average calculates F1 scores for each of the classes and then takes the average of them. Since our data, Financial PhraseBank suffers from label imbalance (almost 60% of all sentences are neutral), this gives another good measure of the classification performance. For evaluation of regression model, we report mean squared error and R 2 , as these are both standard and also reported by the state-of-the-art papers for FiQA dataset.\n\n4.5 Implementation Details\nFor our implementation BERT, we use a dropout probability of p = 0.1, warm-up proportion of 0.2, maximum sequence length of 64 tokens, a learning rate of 2e \u2212 5 and a mini-batch size of 64. We train the model for 6 epochs, evaluate on the validation set and choose the best one. For discriminative fine-tuning we set the discrimination rate as 0.85. We start training with only the classification layer unfrozen, after each third of a training epoch we unfreeze the next layer. An Amazon p2.xlarge EC2 instance with one NVIDIA K80 GPU, 4 vCPUs and 64 GiB of host memory is used to train the models.\n\n5 EXPERIMENTAL RESULTS (RQ1 & RQ2)\nThe results of FinBERT, the baseline methods and state-of-the-art on Financial PhraseBank dataset classification task can be seen on table 2. We present the result on both the whole dataset and subset with 100% annotator agreement. Bold face indicates best result in the corresponding metric. LPS [17], HSC [8] and FinSSLX [15] results are taken from their respective papers. For LPS and HSC, overall accuracy is not reported on the papers. We calculated them using recall scores reported for different classes.\nFor the models implemented by us, we report 10-fold cross validation results.\nFor all of the measured metrics, FinBERT performs clearly the best among both the methods we implemented ourselves (LSTM and ULMFit) and the models reported by other papers (LPS [17], HSC [8], FinSSLX [14]). LSTM classifier with no language model information performs the worst. In terms of accuracy, it is close to LPS and HSC, (even better than LPS for examples with full agreement), however it produces a low F1-score. That is due to it performing much better in neutral class. LSTM classifier with ELMo embeddings improves upon LSTM with static embeddings in all of the measured metrics. It still suffers from low average F1-score due to poor performance in less represented labels. But it's performance is comparable with LPS and HSC, besting them in accuracy. So contextualized word embeddings produce close performance to machine learning based methods for dataset of this size.\nULMFit significantly improves on all of the metrics and it doesn't suffer from model performing much better in some classes than the others. It also handily beats the machine learning based models LPS and HSC. This shows the effectiveness of language model pretraining. AWD-LSTM is a very large model and it would be expected to suffer from over-fitting with this small of a dataset. But due to language model pre-training and effective training strategies, it is able to overcome small data problem. ULMFit also outperforms FinSSLX, which has a text simplification step as well as pre-training of word embeddings on a large financial corpus with sentiment labels.\nFinBERT outperforms ULMFit, and consequently all of the other methods in all metrics. In order to measure the performance of the models on different sizes of labeled training datasets, we ran LSTM classifiers, ULMFit and FinBERT on 5 different configurations. The result can be seen on figure 2, where the cross entropy losses on test set for each model are drawn. 100 training examples is too low for all of the models. However, once the training size becomes 250, ULMFit and FinBERT starts to successfully differentiate between labels, with an accuracy as high as 80% for FinBERT. All of the methods consistently get better with more data, but ULMFit and FinBERT does better with 250 examples than LSTM classifiers do with the whole dataset. This shows the effectiveness of language model pre-training. The results for FiQA sentiment dataset, are presented on table 3. Our model outperforms state-of-the-art models for both MSE and R 2 . It should be noted that the test set these two papers [31] [24] use is the official FiQA Task 1 test set. Since we don't have access to that we report the results on 10-Fold cross validation. There is no indication on [15] that the train and test sets they publish come from different distributions and our model can be interpreted to be at disadvantage since we need to set aside a subset of training set as test set, while state-of-the-art papers can use the complete training set.\n\n6 EXPERIMENTAL ANALYSIS 6.1 Effects of further pre-training (RQ3)\nWe first measure the effect of further pre-training on the performance of the classifier. We compare three models: 1) No further pre-training (denoted by Vanilla BERT), 2) Further pre-training on classification training set (denoted by FinBERT-task), 3) Further pre-training on domain corpus, TRC2-financial (denoted by FinBERT-domain). Models are evaluated with loss, accuracy and [31] and Piao and Breslin (2018) [24] report results on the official test set. Since we don't have access to that set our MSE, and R 2 are calculated with 10-Fold cross validation. macro average F1 scores on the test dataset. The results can be seen on table 4. The classifier that were further pre-trained on financial domain corpus performs best among the three, though the difference is not very high. There might be four reasons behind this result: 1) The corpus might have a different distribution than the task set, 2) BERT classifiers might not improve significantly with further pre-training, 3) Short sentence classification might not benefit significantly from further pre-training, 4) Performance is already so good, that there is not much room for improvement. We think that the last explanation is the likeliest, because for the subset of Financial Phrasebank that all of the annotators agree on the result, accuracy of Vanilla BERT is already 0.96. The performance on the other agreement levels should be lower, as even the humans can't agree fully on them. More experiments with another financial labeled dataset is necessary to conclude that effect of further pre-training on domain corpus is not significant.\n\n6.2 Catastrophic forgetting (RQ4)\nFor measuring the performance of the techniques against catastrophic forgetting, we try four different settings: No adjustment (NA), only with slanted triangular learning rate (STL), slanted triangular learning rate and gradual unfreezing (STL+GU) and the techniques in the previous one, together with discriminative finetuning. We report the performance of these four settings with loss on test function and trajectory of validation loss over training epochs. The results can be seen on table 5 and figure 3.\nApplying all three of the strategies produce the best performance in terms of test loss and accuracy. Gradual unfreezing and discriminative fine-tuning have the same reasoning behind them: higher level features should be fine-tuned more than the lower level  ones, since information learned from language modeling are mostly present in the lower levels. We see from table 5 that using only discriminative fine-tuning with slanted triangular learning rates performs worse than using the slanted triangular learning rates alone. This shows that gradual unfreezing is the most important technique for our case.\nOne way that catastrophic forgetting can show itself is the sudden increase in validation loss after several epochs. As model is trained, it quickly starts to overfit when no measure is taken accordingly. As it can be seen on the figure 3, that is the case when none of the aforementioned techniques are applied. The model achieves the best performance on validation set after the first epoch and then starts to overfit. While with all three techniques applied, model is much more stable. The other combinations lie between these two cases.\n\n6.3 Choosing the best layer for classification (RQ5)\nBERT has 12 Transformer encoder layers. It is not necessarily a given that the last layer captures the most relevant information regarding classification task during language model training. For We also try taking the average of all layers.\nAs shown in table 6the last layer contributes the most to the model performance in terms of all the metrics measured. This might be indicative of two factors: 1) When the higher layers are used the model that is being trained is larger, hence possibly more powerful, 2) The lower layers capture deeper semantic information, hence they struggle to fine-tune that information for classification.\n\n6.4 Training only a subset of the layers (RQ6)\nBERT is a very large model. Even on small datasets, fine-tuning the whole model requires significant time and computing power. Therefore if a slightly lower performance can be achieved with fine-tuning only a subset of all parameters, it might be preferable in some contexts. Especially if training set is very large, this change might make BERT more convenient to use. Here we experiment with fine-tuning only the last k many encoder layers.\nThe results are presented on table 7. Fine-tuning only the classification layer does not achieve close performance to fine-tuning other layers. However fine-tuning only the last layer handily outperforms the state-of-the-art machine learning methods like HSC. After Layer-9, the performance becomes virtually the same, only to be outperformed by fine-tuning the whole model. This result shows that in order to utilize BERT, an expensive training of the whole model is not mandatory. A fair trade-off can be made for much less training time with a small decrease in model performance.\n\n6.5 Where does the model fail?\nWith 97% accuracy on the subset of Financial PhraseBank with 100% annotator agreement, we think it might be an interesting exercise to examine cases where the model failed to predict the true label. Therefore in this section we will present several examples where model makes the wrong prediction. Also in Malo et The situation of coated magazine printing paper will continue to be weak .\nTrue value: Negative Predicted: Neutral\nThe first example is actually the most common type of failure. The model fails to do the math in which figure is higher, and in the absence of words indicative of direction like \"increased\", might make the prediction of neutral. However, there are many similar cases where it does make the true prediction too. Examples 2 and 3 are different versions of the same type of failure. The model fails to distinguish a neutral statement about a given situation from a statement that indicated polarity about the company. In the third example, information about the company's business would probably help.\nThe confusion matrix is presented on figure 4. 73% of the failures happen between labels positive and negative, while same number is 5% for negative and positive. That is consistent with both the inter-annotator agreement numbers and common sense. It is easier\n\n7 CONCLUSION AND FUTURE WORK\nIn this paper, we implemented BERT for the financial domain by further pre-training it on a financial corpus and fine-tuning it for sentiment analysis (FinBERT). This work is the first application of BERT for finance to the best of our knowledge and one of the few that experimented with further pre-training on a domain-specific corpus. On both of the datasets we used, we achieved state-of-theart results by a significant margin. For the classification task, we increased the state-of-the art by 15% in accuracy.\nIn addition to BERT, we also implemented other pre-training language models like ELMo and ULMFit for comparison purposes. ULMFit, further pre-trained on a financial corpus, beat the previous state-of-the art for the classification task, only to a smaller degree than BERT. These results show the effectiveness of pre-trained language models for a down-stream task such as sentiment analysis especially with a small labeled dataset. The complete dataset included more than 3000 examples, but FinBERT was able to surpass the previous state-of-the art even with a training set as small as 500 examples. This is an important result, since deep learning techniques for NLP have been traditionally labeled as too \"data-hungry\", which is apparently no longer the case.\nWe conducted extensive experiments with BERT, investigating the effects of further pre-training and several training strategies. We couldn't conclude that further pre-training on a domain-specific corpus was significantly better than not doing so for our case. Our theory is that BERT already performs good enough with our dataset that there is not much room for improvement that further pretraining can provide. We also found that learning rate regimes that fine-tune the higher layers more aggressively than the lower ones perform better and are more effective in preventing catastrophic forgetting. Another conclusion from our experiments was that, comparable performance can be achieved with much less training time by fine-tuning only the last 2 layers of BERT.\nFinancial sentiment analysis is not a goal on its own, it is as useful as it can support financial decisions. One way that our work might be extended, could be using FinBERT directly with stock market return data (both in terms of directionality and volatility) on financial news. FinBERT is good enough for extracting explicit sentiments, but modeling implicit information that is not necessarily apparent even to those who are writing the text should be a challenging task. Another possible extension can be using FinBERT for other natural language processing tasks such as named entity recognition or question answering in financial domain.\n\nFootnotes:\n3: The pre-trained weights are made public by creators of BERT. The code and weights can be found here: https://github.com/google-research/bert\n4: The corpus can be obtained for research purposes by applying here: https://trec.nist.gov/data/reuters/reuters.html\n5: The dataset can be found here: https://www.researchgate.net/publication/251231364 _FinancialPhraseBank-v10\n\nReferences:\n\n- Basant Agarwal and Namita Mittal. 2016. Machine Learning Approach for Sentiment Analysis. Springer International Publishing, Cham, 21-45. https: //doi.org/10.1007/978-3-319-25343-5_3- Oscar Araque, Ignacio Corcuera-Platas, J. Fernando S\u00e1nchez-Rada, and Carlos A. Iglesias. 2017. Enhancing deep learning sentiment analysis with ensemble tech- niques in social applications. Expert Systems with Applications 77 (jul 2017), 236-246. https://doi.org/10.1016/j.eswa.2017.02.002\n\n- Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. 2018. BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding. (2018). https://doi.org/arXiv:1811.03600v2 arXiv:1810.04805\n\n- Li Guo, Feng Shi, and Jun Tu. 2016. Textual analysis and machine leaning: Crack unstructured data in finance and accounting. The Journal of Finance and Data Science 2, 3 (sep 2016), 153-170. https://doi.org/10.1016/J.JFDS.2017.02.001\n\n- Jeremy Howard and Sebastian Ruder. 2018. Universal Language Model Fine- tuning for Text Classification. (jan 2018). arXiv:1801.06146 http://arxiv.org/abs/ 1801.06146\n\n- Neel Kant, Raul Puri, Nikolai Yakovenko, and Bryan Catanzaro. 2018. Prac- tical Text Classification With Large Pre-Trained Language Models. (2018). arXiv:1812.01207 http://arxiv.org/abs/1812.01207\n\n- Mathias Kraus and Stefan Feuerriegel. 2017. Decision support from financial disclosures with deep neural networks and transfer learning. Decision Support Sys- tems 104 (2017), 38-48. https://doi.org/10.1016/j.dss.2017.10.001 arXiv:1710.03954\n\n- Srikumar Krishnamoorthy. 2018. Sentiment analysis of financial news articles using performance indicators. Knowledge and Information Systems 56, 2 (aug 2018), 373-394. https://doi.org/10.1007/s10115-017-1134-1\n\n- Xiaodong Li, Haoran Xie, Li Chen, Jianping Wang, and Xiaotie Deng. 2014. News impact on stock price return via sentiment analysis. Knowledge-Based Systems 69 (oct 2014), 14-23. https://doi.org/10.1016/j.knosys.2014.04.022\n\n- Bing Liu. 2012. Sentiment Analysis and Opinion Mining. Synthesis Lectures on Human Language Technologies 5, 1 (may 2012), 1-167. https://doi.org/10.2200/ s00416ed1v01y201204hlt016\n\n- Tim Loughran and Bill Mcdonald. 2011. When Is a Liability Not a Liability? Textual Analysis, Dictionaries, and 10-Ks. Journal of Finance 66, 1 (feb 2011), 35-65. https://doi.org/10.1111/j.1540-6261.2010.01625.x\n\n- Tim Loughran and Bill Mcdonald. 2016. Textual Analysis in Accounting and Finance: A Survey. Journal of Accounting Research 54, 4 (2016), 1187-1230. https://doi.org/10.1111/1475-679X.12123\n\n- Bernhard Lutz, Nicolas Pr\u00f6llochs, and Dirk Neumann. 2018. Sentence-Level Sentiment Analysis of Financial News Using Distributed Text Representations and Multi-Instance Learning. Technical Report. arXiv:1901.00400 http://arxiv.org/ abs/1901.00400\n\n- Macedo Maia, Andr\u00ef\u00a3\u00a1 Freitas, and Siegfried Handschuh. 2018. FinSSLx: A Senti- ment Analysis Model for the Financial Domain Using Text Simplification. In 2018 IEEE 12th International Conference on Semantic Computing (ICSC). IEEE, 318-319. https://doi.org/10.1109/ICSC.2018.00065\n\n- Macedo Maia, Siegfried Handschuh, Andr\u00e9 Freitas, Brian Davis, Ross Mcdermott, Manel Zarrouk, Alexandra Balahur, and Ross Mc-Dermott. 2018. Companion of the The Web Conference 2018 on The Web Conference 2018, {WWW} 2018, Lyon , France, April 23-27, 2018. ACM. https://doi.org/10.1145/3184558\n\n- Burton G Malkiel. 2003. The Efficient Market Hypothesis and Its Critics. Jour- nal of Economic Perspectives 17, 1 (feb 2003), 59-82. https://doi.org/10.1257/\n\n- Pekka Malo, Ankur Sinha, Pekka Korhonen, Jyrki Wallenius, and Pyry Takala. 2014. Good debt or bad debt: Detecting semantic orientations in economic texts. Journal of the Association for Information Science and Technology 65, 4 (2014), 782-796. https://doi.org/10.1002/asi.23062 arXiv:arXiv:1307.5336v2\n\n- G. Marcus. 2018. Deep Learning: A Critical Appraisal. arXiv e-prints (Jan. 2018). arXiv:cs.AI/1801.00631\n\n- Justin Martineau and Tim Finin. 2009. Delta TFIDF: An Improved Feature Space for Sentiment Analysis.. In ICWSM, Eytan Adar, Matthew Hurst, Tim Finin, Natalie S. Glance, Nicolas Nicolov, and Belle L. Tseng (Eds.). The AAAI Press. http://dblp.uni-trier.de/db/conf/icwsm/icwsm2009.html#MartineauF09\n\n- Bryan McCann, James Bradbury, Caiming Xiong, and Richard Socher. 2017. Learned in Translation: Contextualized Word Vectors. Nips (2017), 1-12. arXiv:1708.00107 http://arxiv.org/abs/1708.00107\n\n- Stephen Merity, Nitish Shirish Keskar, and Richard Socher. 2017. Regular- izing and Optimizing LSTM Language Models. CoRR abs/1708.02182 (2017). arXiv:1708.02182 http://arxiv.org/abs/1708.02182\n\n- Jeffrey Pennington, Richard Socher, and Christopher Manning. 2014. Glove: Global Vectors for Word Representation. In Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP). Association for Computational Linguistics, Doha, Qatar, 1532-1543. https://doi.org/10.3115/v1/ D14-1162\n\n- Matthew E Peters, Mark Neumann, Mohit Iyyer, Matt Gardner, Christopher Clark, Kenton Lee, and Luke Zettlemoyer. 2018. Deep contextualized word representations. (2018). https://doi.org/10.18653/v1/N18-1202 arXiv:1802.05365\n\n- Guangyuan Piao and John G Breslin. 2018. Financial Aspect and Sentiment Predictions with Deep Neural Networks. 1973-1977. https://doi.org/10.1145/ 3184558.3191829\n\n- Aliaksei Severyn and Alessandro Moschitti. 2015. Twitter Sentiment Analysis with Deep Convolutional Neural Networks. In Proceedings of the 38th International ACM SIGIR Conference on Research and Development in Information Retrieval - SIGIR '15. ACM Press. https://doi.org/10.1145/2766462.2767830\n\n- Sahar Sohangir, Dingding Wang, Anna Pomeranets, and Taghi M Khoshgoftaar. 2018. Big Data: Deep Learning for financial sentiment analysis. Journal of Big Data 5, 1 (2018). https://doi.org/10.1186/s40537-017-0111-6\n\n- Chi Sun, Xipeng Qiu, Yige Xu, and Xuanjing Huang. 2019. How to Fine-Tune BERT for Text Classification? (2019). arXiv:1905.05583 https://arxiv.org/pdf/ 1905.05583v1.pdfhttp://arxiv.org/abs/1905.05583\n\n- Abinash Tripathy, Ankit Agrawal, and Santanu Kumar Rath. 2016. Classification of sentiment reviews using n-gram machine learning approach. Expert Systems with Applications 57 (sep 2016), 117-126. https://doi.org/10.1016/j.eswa.2016.03. 028\n\n- Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N. Gomez, Lukasz Kaiser, and Illia Polosukhin. 2017. Attention Is All You Need. Nips (2017). arXiv:1706.03762 http://arxiv.org/abs/1706.03762\n\n- Casey Whitelaw, Navendu Garg, and Shlomo Argamon. 2005. Using appraisal groups for sentiment analysis. In Proceedings of the 14th ACM international conference on Information and knowledge management -CIKM '05. ACM Press. https://doi.org/10.1145/1099554.1099714\n\n- Steve Yang, Jason Rosenfeld, and Jacques Makutonin. 2018. Financial Aspect- Based Sentiment Analysis using Deep Representations. (2018). arXiv:1808.07931 https://arxiv.org/pdf/1808.07931v1.pdfhttp://arxiv.org/abs/1808.07931\n\n- Lei Zhang, Shuai Wang, and Bing Liu. 2018. Deep learning for sentiment analysis: A survey. Wiley Interdisciplinary Reviews: Data Mining and Knowledge Discovery 8, 4 (mar 2018), e1253. https://doi.org/10.1002/widm.1253\n\n- Yukun Zhu, Ryan Kiros, Richard Zemel, Ruslan Salakhutdinov, Raquel Urtasun, Antonio Torralba, and Sanja Fidler. 2015. Aligning Books and Movies: Towards Story-like Visual Explanations by Watching Movies and Reading Books. (jun 2015). arXiv:1506.06724 http://arxiv.org/abs/1506.06724\n\n", "annotations": {"Abstract": [{"begin": 72, "end": 871, "idx": 0}], "Head": [{"begin": 874, "end": 888, "n": "1", "idx": 0}, {"begin": 5465, "end": 5485, "n": "2", "idx": 1}, {"begin": 5642, "end": 5675, "n": "2.1", "idx": 2}, {"begin": 8951, "end": 9008, "n": "2.2", "idx": 3}, {"begin": 12127, "end": 12135, "n": "3", "idx": 4}, {"begin": 12299, "end": 12316, "n": "3.1", "idx": 5}, {"begin": 13335, "end": 13346, "n": "3.1.2", "idx": 6}, {"begin": 14077, "end": 14090, "n": "3.1.3", "idx": 7}, {"begin": 17561, "end": 17599, "n": "3.2", "idx": 8}, {"begin": 17875, "end": 17880, "idx": 9}, {"begin": 18785, "end": 18790, "idx": 10}, {"begin": 19171, "end": 19200, "n": "3.2.3", "idx": 11}, {"begin": 19476, "end": 19481, "idx": 12}, {"begin": 21081, "end": 21124, "n": "4", "idx": 13}, {"begin": 22637, "end": 22657, "n": "4.3", "idx": 14}, {"begin": 23049, "end": 23072, "n": "4.3.1", "idx": 15}, {"begin": 23643, "end": 23656, "n": "4.3.2", "idx": 16}, {"begin": 24203, "end": 24225, "n": "4.4", "idx": 17}, {"begin": 24967, "end": 24993, "n": "4.5", "idx": 18}, {"begin": 25594, "end": 25628, "n": "5", "idx": 19}, {"begin": 29195, "end": 29260, "n": "6", "idx": 20}, {"begin": 30870, "end": 30903, "n": "6.2", "idx": 21}, {"begin": 32564, "end": 32616, "n": "6.3", "idx": 22}, {"begin": 33253, "end": 33299, "n": "6.4", "idx": 23}, {"begin": 34328, "end": 34358, "n": "6.5", "idx": 24}, {"begin": 35649, "end": 35677, "n": "7", "idx": 25}], "ReferenceToBib": [{"begin": 997, "end": 1001, "target": "#b15", "idx": 0}, {"begin": 1870, "end": 1873, "target": "#b3", "idx": 1}, {"begin": 2571, "end": 2599, "target": "#b10", "idx": 2}, {"begin": 2600, "end": 2604, "target": "#b10", "idx": 3}, {"begin": 3267, "end": 3271, "target": "#b22", "idx": 4}, {"begin": 3291, "end": 3294, "target": "#b4", "idx": 5}, {"begin": 4449, "end": 4467, "target": "#b16", "idx": 6}, {"begin": 4468, "end": 4472, "target": "#b16", "idx": 7}, {"begin": 4515, "end": 4519, "target": "#b14", "idx": 8}, {"begin": 5776, "end": 5780, "target": "#b9", "idx": 9}, {"begin": 5915, "end": 5918, "target": "#b0", "idx": 10}, {"begin": 5919, "end": 5922, "target": "#b18", "idx": 11}, {"begin": 5923, "end": 5926, "target": "#b27", "idx": 12}, {"begin": 5927, "end": 5930, "target": "#b29", "idx": 13}, {"begin": 6012, "end": 6015, "target": "#b1", "idx": 14}, {"begin": 6016, "end": 6019, "target": "#b24", "idx": 15}, {"begin": 6020, "end": 6023, "target": "#b31", "idx": 16}, {"begin": 6249, "end": 6253, "target": "#b17", "idx": 17}, {"begin": 6504, "end": 6507, "target": "#b8", "idx": 18}, {"begin": 6510, "end": 6538, "target": "#b11", "idx": 19}, {"begin": 6689, "end": 6693, "target": "#b11", "idx": 20}, {"begin": 6711, "end": 6739, "target": "#b10", "idx": 21}, {"begin": 6927, "end": 6931, "target": "#b10", "idx": 22}, {"begin": 6966, "end": 6972, "idx": 23}, {"begin": 7244, "end": 7272, "target": "#b6", "idx": 24}, {"begin": 7273, "end": 7276, "target": "#b6", "idx": 25}, {"begin": 7817, "end": 7839, "target": "#b25", "idx": 26}, {"begin": 7840, "end": 7844, "target": "#b25", "idx": 27}, {"begin": 8002, "end": 8006, "target": "#b12", "idx": 28}, {"begin": 8189, "end": 8207, "idx": 29}, {"begin": 8208, "end": 8212, "target": "#b13", "idx": 30}, {"begin": 9465, "end": 9468, "target": "#b5", "idx": 31}, {"begin": 9616, "end": 9620, "target": "#b22", "idx": 32}, {"begin": 10283, "end": 10287, "target": "#b19", "idx": 33}, {"begin": 10540, "end": 10543, "target": "#b4", "idx": 34}, {"begin": 11236, "end": 11239, "target": "#b2", "idx": 35}, {"begin": 11903, "end": 11907, "target": "#b26", "idx": 36}, {"begin": 12966, "end": 12970, "target": "#b21", "idx": 37}, {"begin": 13363, "end": 13367, "target": "#b22", "idx": 38}, {"begin": 14199, "end": 14202, "target": "#b4", "idx": 39}, {"begin": 14454, "end": 14458, "target": "#b20", "idx": 40}, {"begin": 15165, "end": 15169, "target": "#b28", "idx": 41}, {"begin": 16075, "end": 16079, "target": "#b28", "idx": 42}, {"begin": 16357, "end": 16360, "target": "#b2", "idx": 43}, {"begin": 17486, "end": 17490, "target": "#b32", "idx": 44}, {"begin": 17927, "end": 17930, "target": "#b4", "idx": 45}, {"begin": 19010, "end": 19013, "target": "#b2", "idx": 46}, {"begin": 19587, "end": 19590, "target": "#b4", "idx": 47}, {"begin": 21323, "end": 21327, "target": "#b16", "idx": 48}, {"begin": 22086, "end": 22090, "target": "#b14", "idx": 49}, {"begin": 23855, "end": 23878, "target": "#b4", "idx": 50}, {"begin": 25926, "end": 25930, "target": "#b16", "idx": 51}, {"begin": 25936, "end": 25939, "target": "#b7", "idx": 52}, {"begin": 25952, "end": 25956, "target": "#b14", "idx": 53}, {"begin": 26397, "end": 26401, "target": "#b16", "idx": 54}, {"begin": 26407, "end": 26410, "target": "#b7", "idx": 55}, {"begin": 26420, "end": 26424, "target": "#b13", "idx": 56}, {"begin": 28764, "end": 28768, "target": "#b30", "idx": 57}, {"begin": 28928, "end": 28932, "target": "#b14", "idx": 58}, {"begin": 29643, "end": 29647, "target": "#b30", "idx": 59}, {"begin": 29676, "end": 29680, "target": "#b23", "idx": 60}], "ReferenceToFootnote": [{"begin": 17557, "end": 17558, "target": "#foot_0", "idx": 0}], "SectionFootnote": [{"begin": 38367, "end": 38749, "idx": 0}], "ReferenceString": [{"begin": 38766, "end": 38948, "id": "b0", "idx": 0}, {"begin": 38950, "end": 39238, "id": "b1", "idx": 1}, {"begin": 39242, "end": 39455, "id": "b2", "idx": 2}, {"begin": 39459, "end": 39692, "id": "b3", "idx": 3}, {"begin": 39696, "end": 39861, "id": "b4", "idx": 4}, {"begin": 39865, "end": 40061, "id": "b5", "idx": 5}, {"begin": 40065, "end": 40306, "id": "b6", "idx": 6}, {"begin": 40310, "end": 40519, "id": "b7", "idx": 7}, {"begin": 40523, "end": 40744, "id": "b8", "idx": 8}, {"begin": 40748, "end": 40927, "id": "b9", "idx": 9}, {"begin": 40931, "end": 41141, "id": "b10", "idx": 10}, {"begin": 41145, "end": 41332, "id": "b11", "idx": 11}, {"begin": 41336, "end": 41581, "id": "b12", "idx": 12}, {"begin": 41585, "end": 41863, "id": "b13", "idx": 13}, {"begin": 41867, "end": 42157, "id": "b14", "idx": 14}, {"begin": 42161, "end": 42318, "id": "b15", "idx": 15}, {"begin": 42322, "end": 42623, "id": "b16", "idx": 16}, {"begin": 42627, "end": 42731, "id": "b17", "idx": 17}, {"begin": 42735, "end": 43030, "id": "b18", "idx": 18}, {"begin": 43034, "end": 43225, "id": "b19", "idx": 19}, {"begin": 43229, "end": 43422, "id": "b20", "idx": 20}, {"begin": 43426, "end": 43742, "id": "b21", "idx": 21}, {"begin": 43746, "end": 43967, "id": "b22", "idx": 22}, {"begin": 43971, "end": 44133, "id": "b23", "idx": 23}, {"begin": 44137, "end": 44432, "id": "b24", "idx": 24}, {"begin": 44436, "end": 44648, "id": "b25", "idx": 25}, {"begin": 44652, "end": 44850, "id": "b26", "idx": 26}, {"begin": 44854, "end": 45093, "id": "b27", "idx": 27}, {"begin": 45097, "end": 45317, "id": "b28", "idx": 28}, {"begin": 45321, "end": 45581, "id": "b29", "idx": 29}, {"begin": 45585, "end": 45808, "id": "b30", "idx": 30}, {"begin": 45812, "end": 46029, "id": "b31", "idx": 31}, {"begin": 46033, "end": 46315, "id": "b32", "idx": 32}], "ReferenceToTable": [{"begin": 21871, "end": 21872, "target": "#tab_1", "idx": 0}, {"begin": 25768, "end": 25769, "target": "#tab_2", "idx": 1}, {"begin": 29902, "end": 29903, "target": "#tab_4", "idx": 2}, {"begin": 33778, "end": 33779, "target": "#tab_7", "idx": 3}], "Footnote": [{"begin": 38378, "end": 38521, "id": "foot_0", "n": "3", "idx": 0}, {"begin": 38522, "end": 38639, "id": "foot_1", "n": "4", "idx": 1}, {"begin": 38640, "end": 38749, "id": "foot_2", "n": "5", "idx": 2}], "Paragraph": [{"begin": 82, "end": 871, "idx": 0}, {"begin": 889, "end": 1382, "idx": 1}, {"begin": 1383, "end": 1874, "idx": 2}, {"begin": 1875, "end": 2509, "idx": 3}, {"begin": 2510, "end": 2824, "idx": 4}, {"begin": 2825, "end": 3656, "idx": 5}, {"begin": 3657, "end": 4118, "idx": 6}, {"begin": 4119, "end": 4520, "idx": 7}, {"begin": 4521, "end": 4577, "idx": 8}, {"begin": 4578, "end": 5463, "idx": 9}, {"begin": 5486, "end": 5640, "idx": 10}, {"begin": 5676, "end": 6254, "idx": 11}, {"begin": 6255, "end": 7144, "idx": 12}, {"begin": 7145, "end": 7701, "idx": 13}, {"begin": 7702, "end": 8449, "idx": 14}, {"begin": 8450, "end": 8589, "idx": 15}, {"begin": 8590, "end": 8949, "idx": 16}, {"begin": 9009, "end": 9469, "idx": 17}, {"begin": 9470, "end": 10288, "idx": 18}, {"begin": 10289, "end": 11039, "idx": 19}, {"begin": 11040, "end": 11766, "idx": 20}, {"begin": 11767, "end": 11895, "idx": 21}, {"begin": 11896, "end": 12125, "idx": 22}, {"begin": 12136, "end": 12297, "idx": 23}, {"begin": 12317, "end": 13333, "idx": 24}, {"begin": 13347, "end": 14075, "idx": 25}, {"begin": 14091, "end": 14609, "idx": 26}, {"begin": 14610, "end": 16041, "idx": 27}, {"begin": 16042, "end": 16339, "idx": 28}, {"begin": 16340, "end": 16919, "idx": 29}, {"begin": 16920, "end": 17183, "idx": 30}, {"begin": 17184, "end": 17559, "idx": 31}, {"begin": 17600, "end": 17873, "idx": 32}, {"begin": 17881, "end": 18135, "idx": 33}, {"begin": 18136, "end": 18268, "idx": 34}, {"begin": 18269, "end": 18783, "idx": 35}, {"begin": 18791, "end": 19169, "idx": 36}, {"begin": 19201, "end": 19474, "idx": 37}, {"begin": 19482, "end": 20021, "idx": 38}, {"begin": 20022, "end": 20231, "idx": 39}, {"begin": 20232, "end": 20683, "idx": 40}, {"begin": 20684, "end": 21079, "idx": 41}, {"begin": 21125, "end": 21175, "idx": 42}, {"begin": 21176, "end": 22635, "idx": 43}, {"begin": 22658, "end": 23047, "idx": 44}, {"begin": 23073, "end": 23641, "idx": 45}, {"begin": 23657, "end": 24201, "idx": 46}, {"begin": 24226, "end": 24965, "idx": 47}, {"begin": 24994, "end": 25592, "idx": 48}, {"begin": 25629, "end": 26140, "idx": 49}, {"begin": 26141, "end": 26218, "idx": 50}, {"begin": 26219, "end": 27104, "idx": 51}, {"begin": 27105, "end": 27769, "idx": 52}, {"begin": 27770, "end": 29193, "idx": 53}, {"begin": 29261, "end": 30868, "idx": 54}, {"begin": 30904, "end": 31413, "idx": 55}, {"begin": 31414, "end": 32021, "idx": 56}, {"begin": 32022, "end": 32562, "idx": 57}, {"begin": 32617, "end": 32857, "idx": 58}, {"begin": 32858, "end": 33251, "idx": 59}, {"begin": 33300, "end": 33742, "idx": 60}, {"begin": 33743, "end": 34326, "idx": 61}, {"begin": 34359, "end": 34747, "idx": 62}, {"begin": 34748, "end": 34787, "idx": 63}, {"begin": 34788, "end": 35386, "idx": 64}, {"begin": 35387, "end": 35647, "idx": 65}, {"begin": 35678, "end": 36192, "idx": 66}, {"begin": 36193, "end": 36954, "idx": 67}, {"begin": 36955, "end": 37721, "idx": 68}, {"begin": 37722, "end": 38365, "idx": 69}], "SectionHeader": [{"begin": 0, "end": 871, "idx": 0}], "SectionReference": [{"begin": 38751, "end": 46317, "idx": 0}], "Sentence": [{"begin": 82, "end": 205, "idx": 0}, {"begin": 206, "end": 311, "idx": 1}, {"begin": 312, "end": 489, "idx": 2}, {"begin": 490, "end": 584, "idx": 3}, {"begin": 585, "end": 720, "idx": 4}, {"begin": 721, "end": 871, "idx": 5}, {"begin": 889, "end": 1002, "idx": 6}, {"begin": 1003, "end": 1179, "idx": 7}, {"begin": 1180, "end": 1382, "idx": 8}, {"begin": 1383, "end": 1514, "idx": 9}, {"begin": 1515, "end": 1690, "idx": 10}, {"begin": 1691, "end": 1874, "idx": 11}, {"begin": 1875, "end": 2030, "idx": 12}, {"begin": 2031, "end": 2248, "idx": 13}, {"begin": 2249, "end": 2509, "idx": 14}, {"begin": 2510, "end": 2701, "idx": 15}, {"begin": 2702, "end": 2824, "idx": 16}, {"begin": 2825, "end": 2962, "idx": 17}, {"begin": 2963, "end": 3196, "idx": 18}, {"begin": 3197, "end": 3295, "idx": 19}, {"begin": 3296, "end": 3382, "idx": 20}, {"begin": 3383, "end": 3468, "idx": 21}, {"begin": 3469, "end": 3526, "idx": 22}, {"begin": 3527, "end": 3656, "idx": 23}, {"begin": 3657, "end": 3807, "idx": 24}, {"begin": 3808, "end": 3962, "idx": 25}, {"begin": 3963, "end": 4118, "idx": 26}, {"begin": 4119, "end": 4258, "idx": 27}, {"begin": 4259, "end": 4520, "idx": 28}, {"begin": 4521, "end": 4577, "idx": 29}, {"begin": 4578, "end": 4666, "idx": 30}, {"begin": 4667, "end": 4732, "idx": 31}, {"begin": 4733, "end": 4818, "idx": 32}, {"begin": 4819, "end": 4954, "idx": 33}, {"begin": 4955, "end": 5125, "idx": 34}, {"begin": 5126, "end": 5179, "idx": 35}, {"begin": 5180, "end": 5265, "idx": 36}, {"begin": 5266, "end": 5352, "idx": 37}, {"begin": 5353, "end": 5426, "idx": 38}, {"begin": 5427, "end": 5463, "idx": 39}, {"begin": 5486, "end": 5640, "idx": 40}, {"begin": 5676, "end": 5781, "idx": 41}, {"begin": 5782, "end": 6024, "idx": 42}, {"begin": 6025, "end": 6254, "idx": 43}, {"begin": 6255, "end": 6365, "idx": 44}, {"begin": 6366, "end": 6508, "idx": 45}, {"begin": 6509, "end": 6694, "idx": 46}, {"begin": 6695, "end": 6932, "idx": 47}, {"begin": 6933, "end": 7144, "idx": 48}, {"begin": 7145, "end": 7277, "idx": 49}, {"begin": 7278, "end": 7464, "idx": 50}, {"begin": 7465, "end": 7701, "idx": 51}, {"begin": 7702, "end": 7815, "idx": 52}, {"begin": 7816, "end": 7984, "idx": 53}, {"begin": 7985, "end": 8187, "idx": 54}, {"begin": 8188, "end": 8449, "idx": 55}, {"begin": 8450, "end": 8589, "idx": 56}, {"begin": 8590, "end": 8783, "idx": 57}, {"begin": 8784, "end": 8949, "idx": 58}, {"begin": 9009, "end": 9092, "idx": 59}, {"begin": 9093, "end": 9319, "idx": 60}, {"begin": 9320, "end": 9469, "idx": 61}, {"begin": 9470, "end": 9576, "idx": 62}, {"begin": 9577, "end": 9683, "idx": 63}, {"begin": 9684, "end": 9764, "idx": 64}, {"begin": 9765, "end": 9859, "idx": 65}, {"begin": 9860, "end": 9970, "idx": 66}, {"begin": 9971, "end": 10137, "idx": 67}, {"begin": 10138, "end": 10288, "idx": 68}, {"begin": 10289, "end": 10493, "idx": 69}, {"begin": 10494, "end": 10726, "idx": 70}, {"begin": 10727, "end": 10826, "idx": 71}, {"begin": 10827, "end": 11039, "idx": 72}, {"begin": 11040, "end": 11284, "idx": 73}, {"begin": 11285, "end": 11548, "idx": 74}, {"begin": 11549, "end": 11620, "idx": 75}, {"begin": 11621, "end": 11766, "idx": 76}, {"begin": 11767, "end": 11860, "idx": 77}, {"begin": 11861, "end": 11895, "idx": 78}, {"begin": 11896, "end": 11908, "idx": 79}, {"begin": 11909, "end": 12013, "idx": 80}, {"begin": 12014, "end": 12125, "idx": 81}, {"begin": 12136, "end": 12297, "idx": 82}, {"begin": 12317, "end": 12322, "idx": 83}, {"begin": 12323, "end": 12328, "idx": 84}, {"begin": 12329, "end": 12509, "idx": 85}, {"begin": 12510, "end": 12640, "idx": 86}, {"begin": 12641, "end": 12800, "idx": 87}, {"begin": 12801, "end": 12883, "idx": 88}, {"begin": 12884, "end": 12971, "idx": 89}, {"begin": 12972, "end": 13152, "idx": 90}, {"begin": 13153, "end": 13333, "idx": 91}, {"begin": 13347, "end": 13489, "idx": 92}, {"begin": 13490, "end": 13579, "idx": 93}, {"begin": 13580, "end": 13697, "idx": 94}, {"begin": 13698, "end": 13806, "idx": 95}, {"begin": 13807, "end": 13959, "idx": 96}, {"begin": 13960, "end": 14075, "idx": 97}, {"begin": 14091, "end": 14203, "idx": 98}, {"begin": 14204, "end": 14308, "idx": 99}, {"begin": 14309, "end": 14459, "idx": 100}, {"begin": 14460, "end": 14609, "idx": 101}, {"begin": 14610, "end": 14762, "idx": 102}, {"begin": 14763, "end": 15005, "idx": 103}, {"begin": 15006, "end": 15011, "idx": 104}, {"begin": 15012, "end": 15024, "idx": 105}, {"begin": 15025, "end": 15170, "idx": 106}, {"begin": 15171, "end": 15270, "idx": 107}, {"begin": 15271, "end": 15350, "idx": 108}, {"begin": 15351, "end": 15413, "idx": 109}, {"begin": 15414, "end": 15508, "idx": 110}, {"begin": 15509, "end": 15605, "idx": 111}, {"begin": 15606, "end": 15710, "idx": 112}, {"begin": 15711, "end": 15810, "idx": 113}, {"begin": 15811, "end": 15955, "idx": 114}, {"begin": 15956, "end": 16041, "idx": 115}, {"begin": 16042, "end": 16159, "idx": 116}, {"begin": 16160, "end": 16339, "idx": 117}, {"begin": 16340, "end": 16345, "idx": 118}, {"begin": 16346, "end": 16351, "idx": 119}, {"begin": 16352, "end": 16468, "idx": 120}, {"begin": 16469, "end": 16550, "idx": 121}, {"begin": 16551, "end": 16659, "idx": 122}, {"begin": 16660, "end": 16762, "idx": 123}, {"begin": 16763, "end": 16826, "idx": 124}, {"begin": 16827, "end": 16919, "idx": 125}, {"begin": 16920, "end": 16989, "idx": 126}, {"begin": 16990, "end": 17092, "idx": 127}, {"begin": 17093, "end": 17183, "idx": 128}, {"begin": 17184, "end": 17432, "idx": 129}, {"begin": 17433, "end": 17559, "idx": 130}, {"begin": 17600, "end": 17873, "idx": 131}, {"begin": 17881, "end": 17902, "idx": 132}, {"begin": 17903, "end": 18054, "idx": 133}, {"begin": 18055, "end": 18135, "idx": 134}, {"begin": 18136, "end": 18268, "idx": 135}, {"begin": 18269, "end": 18329, "idx": 136}, {"begin": 18330, "end": 18418, "idx": 137}, {"begin": 18419, "end": 18548, "idx": 138}, {"begin": 18549, "end": 18658, "idx": 139}, {"begin": 18659, "end": 18783, "idx": 140}, {"begin": 18791, "end": 18823, "idx": 141}, {"begin": 18824, "end": 18933, "idx": 142}, {"begin": 18934, "end": 19014, "idx": 143}, {"begin": 19015, "end": 19088, "idx": 144}, {"begin": 19089, "end": 19169, "idx": 145}, {"begin": 19201, "end": 19360, "idx": 146}, {"begin": 19361, "end": 19474, "idx": 147}, {"begin": 19482, "end": 19537, "idx": 148}, {"begin": 19538, "end": 19671, "idx": 149}, {"begin": 19672, "end": 19823, "idx": 150}, {"begin": 19824, "end": 20021, "idx": 151}, {"begin": 20022, "end": 20231, "idx": 152}, {"begin": 20232, "end": 20321, "idx": 153}, {"begin": 20322, "end": 20363, "idx": 154}, {"begin": 20364, "end": 20463, "idx": 155}, {"begin": 20464, "end": 20642, "idx": 156}, {"begin": 20643, "end": 20683, "idx": 157}, {"begin": 20684, "end": 20776, "idx": 158}, {"begin": 20777, "end": 20930, "idx": 159}, {"begin": 20931, "end": 21079, "idx": 160}, {"begin": 21125, "end": 21175, "idx": 161}, {"begin": 21176, "end": 21321, "idx": 162}, {"begin": 21322, "end": 21328, "idx": 163}, {"begin": 21329, "end": 21452, "idx": 164}, {"begin": 21453, "end": 21542, "idx": 165}, {"begin": 21543, "end": 21691, "idx": 166}, {"begin": 21692, "end": 21791, "idx": 167}, {"begin": 21792, "end": 21873, "idx": 168}, {"begin": 21874, "end": 21959, "idx": 169}, {"begin": 21960, "end": 22009, "idx": 170}, {"begin": 22010, "end": 22084, "idx": 171}, {"begin": 22085, "end": 22205, "idx": 172}, {"begin": 22206, "end": 22332, "idx": 173}, {"begin": 22333, "end": 22462, "idx": 174}, {"begin": 22463, "end": 22558, "idx": 175}, {"begin": 22559, "end": 22635, "idx": 176}, {"begin": 22658, "end": 22837, "idx": 177}, {"begin": 22838, "end": 22945, "idx": 178}, {"begin": 22946, "end": 23047, "idx": 179}, {"begin": 23073, "end": 23134, "idx": 180}, {"begin": 23135, "end": 23248, "idx": 181}, {"begin": 23249, "end": 23375, "idx": 182}, {"begin": 23376, "end": 23482, "idx": 183}, {"begin": 23483, "end": 23563, "idx": 184}, {"begin": 23564, "end": 23641, "idx": 185}, {"begin": 23657, "end": 23694, "idx": 186}, {"begin": 23695, "end": 23746, "idx": 187}, {"begin": 23747, "end": 23879, "idx": 188}, {"begin": 23880, "end": 23969, "idx": 189}, {"begin": 23970, "end": 24102, "idx": 190}, {"begin": 24103, "end": 24201, "idx": 191}, {"begin": 24226, "end": 24339, "idx": 192}, {"begin": 24340, "end": 24412, "idx": 193}, {"begin": 24413, "end": 24620, "idx": 194}, {"begin": 24621, "end": 24796, "idx": 195}, {"begin": 24797, "end": 24965, "idx": 196}, {"begin": 24994, "end": 25183, "idx": 197}, {"begin": 25184, "end": 25272, "idx": 198}, {"begin": 25273, "end": 25343, "idx": 199}, {"begin": 25344, "end": 25471, "idx": 200}, {"begin": 25472, "end": 25592, "idx": 201}, {"begin": 25629, "end": 25860, "idx": 202}, {"begin": 25861, "end": 25921, "idx": 203}, {"begin": 25922, "end": 26004, "idx": 204}, {"begin": 26005, "end": 26069, "idx": 205}, {"begin": 26070, "end": 26140, "idx": 206}, {"begin": 26141, "end": 26218, "idx": 207}, {"begin": 26219, "end": 26426, "idx": 208}, {"begin": 26427, "end": 26497, "idx": 209}, {"begin": 26498, "end": 26640, "idx": 210}, {"begin": 26641, "end": 26699, "idx": 211}, {"begin": 26700, "end": 26810, "idx": 212}, {"begin": 26811, "end": 26905, "idx": 213}, {"begin": 26906, "end": 26984, "idx": 214}, {"begin": 26985, "end": 27104, "idx": 215}, {"begin": 27105, "end": 27245, "idx": 216}, {"begin": 27246, "end": 27314, "idx": 217}, {"begin": 27315, "end": 27374, "idx": 218}, {"begin": 27375, "end": 27488, "idx": 219}, {"begin": 27489, "end": 27605, "idx": 220}, {"begin": 27606, "end": 27769, "idx": 221}, {"begin": 27770, "end": 27855, "idx": 222}, {"begin": 27856, "end": 28029, "idx": 223}, {"begin": 28030, "end": 28134, "idx": 224}, {"begin": 28135, "end": 28190, "idx": 225}, {"begin": 28191, "end": 28352, "idx": 226}, {"begin": 28353, "end": 28513, "idx": 227}, {"begin": 28514, "end": 28574, "idx": 228}, {"begin": 28575, "end": 28709, "idx": 229}, {"begin": 28710, "end": 28815, "idx": 230}, {"begin": 28816, "end": 28901, "idx": 231}, {"begin": 28902, "end": 29193, "idx": 232}, {"begin": 29261, "end": 29350, "idx": 233}, {"begin": 29351, "end": 29597, "idx": 234}, {"begin": 29598, "end": 29721, "idx": 235}, {"begin": 29722, "end": 29823, "idx": 236}, {"begin": 29824, "end": 29868, "idx": 237}, {"begin": 29869, "end": 30047, "idx": 238}, {"begin": 30048, "end": 30415, "idx": 239}, {"begin": 30416, "end": 30605, "idx": 240}, {"begin": 30606, "end": 30714, "idx": 241}, {"begin": 30715, "end": 30868, "idx": 242}, {"begin": 30904, "end": 31232, "idx": 243}, {"begin": 31233, "end": 31364, "idx": 244}, {"begin": 31365, "end": 31413, "idx": 245}, {"begin": 31414, "end": 31515, "idx": 246}, {"begin": 31516, "end": 31767, "idx": 247}, {"begin": 31768, "end": 31940, "idx": 248}, {"begin": 31941, "end": 32021, "idx": 249}, {"begin": 32022, "end": 32138, "idx": 250}, {"begin": 32139, "end": 32226, "idx": 251}, {"begin": 32227, "end": 32334, "idx": 252}, {"begin": 32335, "end": 32442, "idx": 253}, {"begin": 32443, "end": 32510, "idx": 254}, {"begin": 32511, "end": 32562, "idx": 255}, {"begin": 32617, "end": 32656, "idx": 256}, {"begin": 32657, "end": 32807, "idx": 257}, {"begin": 32808, "end": 32857, "idx": 258}, {"begin": 32858, "end": 32975, "idx": 259}, {"begin": 32976, "end": 33251, "idx": 260}, {"begin": 33300, "end": 33327, "idx": 261}, {"begin": 33328, "end": 33426, "idx": 262}, {"begin": 33427, "end": 33575, "idx": 263}, {"begin": 33576, "end": 33669, "idx": 264}, {"begin": 33670, "end": 33742, "idx": 265}, {"begin": 33743, "end": 33886, "idx": 266}, {"begin": 33887, "end": 34002, "idx": 267}, {"begin": 34003, "end": 34117, "idx": 268}, {"begin": 34118, "end": 34225, "idx": 269}, {"begin": 34226, "end": 34326, "idx": 270}, {"begin": 34359, "end": 34557, "idx": 271}, {"begin": 34558, "end": 34656, "idx": 272}, {"begin": 34657, "end": 34747, "idx": 273}, {"begin": 34748, "end": 34787, "idx": 274}, {"begin": 34788, "end": 34850, "idx": 275}, {"begin": 34851, "end": 35016, "idx": 276}, {"begin": 35017, "end": 35098, "idx": 277}, {"begin": 35099, "end": 35167, "idx": 278}, {"begin": 35168, "end": 35302, "idx": 279}, {"begin": 35303, "end": 35386, "idx": 280}, {"begin": 35387, "end": 35549, "idx": 281}, {"begin": 35550, "end": 35634, "idx": 282}, {"begin": 35635, "end": 35647, "idx": 283}, {"begin": 35678, "end": 35839, "idx": 284}, {"begin": 35840, "end": 36015, "idx": 285}, {"begin": 36016, "end": 36109, "idx": 286}, {"begin": 36110, "end": 36192, "idx": 287}, {"begin": 36193, "end": 36314, "idx": 288}, {"begin": 36315, "end": 36465, "idx": 289}, {"begin": 36466, "end": 36624, "idx": 290}, {"begin": 36625, "end": 36792, "idx": 291}, {"begin": 36793, "end": 36954, "idx": 292}, {"begin": 36955, "end": 37083, "idx": 293}, {"begin": 37084, "end": 37215, "idx": 294}, {"begin": 37216, "end": 37367, "idx": 295}, {"begin": 37368, "end": 37556, "idx": 296}, {"begin": 37557, "end": 37721, "idx": 297}, {"begin": 37722, "end": 37831, "idx": 298}, {"begin": 37832, "end": 38002, "idx": 299}, {"begin": 38003, "end": 38197, "idx": 300}, {"begin": 38198, "end": 38365, "idx": 301}], "ReferenceToFigure": [{"begin": 28063, "end": 28064, "target": "#fig_2", "idx": 0}, {"begin": 31411, "end": 31412, "target": "#fig_3", "idx": 1}, {"begin": 32259, "end": 32260, "target": "#fig_3", "idx": 2}], "Div": [{"begin": 82, "end": 871, "idx": 0}, {"begin": 874, "end": 5463, "idx": 1}, {"begin": 5465, "end": 5640, "idx": 2}, {"begin": 5642, "end": 8949, "idx": 3}, {"begin": 8951, "end": 12125, "idx": 4}, {"begin": 12127, "end": 12297, "idx": 5}, {"begin": 12299, "end": 13333, "idx": 6}, {"begin": 13335, "end": 14075, "idx": 7}, {"begin": 14077, "end": 17559, "idx": 8}, {"begin": 17561, "end": 17873, "idx": 9}, {"begin": 17875, "end": 18783, "idx": 10}, {"begin": 18785, "end": 19169, "idx": 11}, {"begin": 19171, "end": 19474, "idx": 12}, {"begin": 19476, "end": 21079, "idx": 13}, {"begin": 21081, "end": 22635, "idx": 14}, {"begin": 22637, "end": 23047, "idx": 15}, {"begin": 23049, "end": 23641, "idx": 16}, {"begin": 23643, "end": 24201, "idx": 17}, {"begin": 24203, "end": 24965, "idx": 18}, {"begin": 24967, "end": 25592, "idx": 19}, {"begin": 25594, "end": 29193, "idx": 20}, {"begin": 29195, "end": 30868, "idx": 21}, {"begin": 30870, "end": 32562, "idx": 22}, {"begin": 32564, "end": 33251, "idx": 23}, {"begin": 33253, "end": 34326, "idx": 24}, {"begin": 34328, "end": 35647, "idx": 25}, {"begin": 35649, "end": 38365, "idx": 26}], "SectionMain": [{"begin": 871, "end": 38365, "idx": 0}]}}