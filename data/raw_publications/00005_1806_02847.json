{"text": "A Simple Method for Commonsense Reasoning\n\nAbstract:\nCommonsense reasoning is a long-standing challenge for deep learning. For example, it is difficult to use neural networks to tackle the Winograd Schema dataset [1]. In this paper, we present a simple method for commonsense reasoning with neural networks, using unsupervised learning. Key to our method is the use of language models, trained on a massive amount of unlabled data, to score multiple choice questions posed by commonsense reasoning tests. On both Pronoun Disambiguation and Winograd Schema challenges, our models outperform previous state-of-the-art methods by a large margin, without using expensive annotated knowledge bases or hand-engineered features. We train an array of large RNN language models that operate at word or character level on LM-1-Billion, CommonCrawl, SQuAD, Gutenberg Books, and a customized corpus for this task and show that diversity of training data plays an important role in test performance. Further analysis also shows that our system successfully discovers important features of the context that decide the correct answer, indicating a good grasp of commonsense knowledge. * Work done as a member of the Google Brain Residency program (g.co/brainresidency.)\n\n\n1 Introduction\nAlthough deep neural networks have achieved remarkable successes (e.g., [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]), their dependence on supervised learning has been challenged as a significant weakness. This dependence prevents deep neural networks from being applied to problems where labeled data is scarce. An example of such problems is common sense reasoning, such as the Winograd Schema Challenge [1], where the labeled set is typically very small, on the order of hundreds of examples. Below is an example question from this dataset:\n\u2022 The trophy doesn't fit in the suitcase because it is too big. What is too big?\nAnswer 0: the trophy. Answer 1: the suitcase Although it is straightforward for us to choose the answer to be \"the trophy\" according to our common sense, answering this type of question is a great challenge for machines because there is no training data, or very little of it.\nIn this paper, we present a surprisingly simple method for common sense reasoning with Winograd schema multiple choice questions. Key to our method is th e use of language models (LMs), trained on a large amount of unlabeled data, to score multiple choice questions posed by the challenge and similar datasets. More concretely, in the above example, we will first substitute the pronoun (\"it\") with the candidates (\"the trophy\" and \"the suitcase\"), and then use LMs to compute the probability of the two resulting sentences (\"The trophy doesn't fit in the suitcase because the trophy is too big.\" and \"The trophy doesn't fit in the suitcase because the suitcase is too big.\"). The substitution that results in a more probable sentence will be the correct answer.\nOn both Pronoun Disambiguation and Winograd Schema challenges, our method outperforms previous state-of-the-art methods by a large margin, without using expensive annotated knowledge bases or hand-engineered features. On a Pronoun Disambiguation dataset, PDP-60, our method achieves 70.0% accuracy, which is better than the state-of-art accuracy of 66.7%. On a Winograd Schema dataset, WSC-273, our method achieves 63.7% accuracy, 11% above that of the current state-of-art result (52.8%) 2 A unique feature of Winograd Schema questions is the presence of a special word that decides the correct reference choice. In the above example, \"big\" is this special word. When \"big\" is replaced by \"small\", the correct answer switches to \"the suitcase\". Although detecting this feature is not part of the challenge, further analysis shows that our system successfully discovers this special word to make its decisions in many cases, indicating a good grasp of commonsense knowledge.\n\n2 Related Work\nUnsupervised learning has been used to discover simple commonsense relationships. For example, Mikolov et al. [16, 17] show that by learning to predict adjacent words in a sentence, word vectors can be used to answer analogy questions such as: Man:King::Woman:?. Our work uses a similar intuition that language modeling can naturally capture common sense knowledge. The difference is that Winograd Schema questions require more contextual information, hence our use of LMs instead of just word vectors.\nNeural LMs have also been applied successfully to improve downstream applications [18, 19, 20, 21].\nIn [18, 19, 20, 21], researchers have shown that pre-trained LMs can be used as feature representations for a sentence, or a paragraph to improve NLP applications such as document classification, machine translation, question answering, etc. The combined evidence suggests that LMs trained on a massive amount of unlabeled data can capture many aspects of natural language and the world's knowledge, especially commonsense information.\nPrevious attempts on solving the Winograd Schema Challenge usually involve heavy utilization of annotated knowledge bases, rule-based reasoning, or hand-crafted features [22, 23, 24]. In particular, Rahman and Ng [25] employ human annotators to build more supervised training data. Their model utilizes nearly 70K hand-crafted features, including querying data from Google Search API. Sharma et al. [26] rely on a semantic parser to understand the question, query texts through Google Search, and reason on the graph produced by the parser. Similarly, Sch\u00fcller [24] formalizes the knowledgegraph data structure and a reasoning process based on cognitive linguistics theories. Bailey et al. [23] introduces a framework for reasoning, using expensive annotated knowledge bases as axioms.\nThe current best approach makes use of the skip-gram model to learn word representations [27]. The model incorporates several knowledge bases to regularize its training process, resulting in Knowledge Enhanced Embeddings (KEE). A semantic similarity scorer and a deep neural network classifier are then combined on top of KEE to predict the answers. The final system, therefore, includes both supervised and unsupervised models, besides three different knowledge bases. In contrast, our unsupervised method is simpler while having significantly higher accuracy. Unsupervised training is done on text corpora which can be cheaply curated.\nUsing language models in reading comprehension tests also produced many great successes. Namely Chu et al. [28] used bi-directional RNNs to predict the last word of a passage in the LAMBADA challenge. Similarly, LMs are also used to produce features for a classifier in the Store Close Test 2017, giving best accuracy against other methods [29]. In a broader context, LMs are used to produce good word embeddings, significantly improved a wide variety of downstream tasks, including the general problem of question answering [20, 30].\n\n3 Methods\nWe first substitute the pronoun in the original sentence with each of the candidate choices. The problem of coreference resolution then reduces to identifying which substitution results in a more probable sentence. By reframing the problem this way, language modeling becomes a natural solution Figure 1 : Overview of our method and analysis. We consider the test \"The trophy doesn't fit in the suitcase because it is too big.\" Our method first substitutes two candidate references trophy and suitcase into the pronoun position. We then use an LM to score the resulting two substitutions. By looking at probability ratio at every word position, we are able to detect \"big\" as the main contributor to trophy being the chosen answer. When \"big\" is switched to \"small\", the answer changes to suitcase. This switching behaviour is an important feature characterizing the Winograd Schema Challenge.\nby its definition. Namely, LMs are trained on text corpora, which encodes human knowledge in the form of natural language. During inference, LMs are able to assign probability to any given text based on what they have learned from training data. An overview of our method is shown in Figure 1.\nSuppose the sentence S of n consecutive words has its pronoun to be resolved specified at the k th position: S = {w 1 , .., w k\u22121 , w k \u2261 p, w k+1 , .., w n }. We make use of a trained language model P \u03b8 (w t |w 1 , w 2 , .., w t\u22121 ), which defines the probability of word w t conditioned on the previous words w 1 , ..., w t\u22121 . The substitution of a candidate reference c in to the pronoun position k results in a new sentence S w k \u2190c (we use notation w k \u2190 c to mean that word w k is substituted by candidate c). We consider two different ways of scoring the substitution:\u2022 Score f ull (w k \u2190 c) = P \u03b8 (w 1 , w 2 , ..., w k\u22121 , c, w k+1 , ..., w n )\nwhich scores how probable the resulting full sentence is, and\u2022 Score partial (w k \u2190 c) = P \u03b8 (w k+1 , ..., w n |w 1 , ..., w k\u22121 , c)\nwhich scores how probable the part of the resulting sentence following c is, given its antecedent.\nIn other words, it only scores a part S w k \u2190c conditioned on the rest of the substituted sentence. An example of these two scores is shown in Table 1. In our experiments, we find that partial scoring strategy is generally better than the naive full scoring strategy.\nTable 1 : Example of full and partial scoring for the test \"The trophy doesn't fit in the suitcase because it is too big.\" with two reference choices \"the suitcase\" and \"the trophy\". c = the suitcase Score f ull (w k \u2190 \"the suitcase\") = P (The trophy doesn't fit in the suitcase because the suitcase is too big) Score partial (w k \u2190 \"the suitcase\") = P (is too big| The trophy doesn't fit in the suitcase because the suitcase) c = the trophy Score f ull (w k \u2190 \"the trophy\") = P (The trophy doesn't fit in the suitcase because the trophy is too big) Score partial (w k \u2190 \"the trophy\") = P (is too big| The trophy doesn't fit in suitcase because the trophy)\n\n4 Experimental settings\nIn this section we describe tests for commonsense reasoning and the LMs used to solve these tasks. We also detail training text corpora used in our experiments.\nEvaluation on Commonsense Reasoning Tests. We conduct experiments to evaluate our methods on two tasks: Pronoun Disambiguation Problems and Winograd Schema Challenge. These two tasks have been proposed as potential alternatives to the Turing Test, specifically targeting its potential weaknesses and inadequacy [1].\nOn the former task, we use the original set of 60 questions (PDP-60) as the main benchmark 3. Later analysis augments this test with 62 questions from the development set to avoid bias presented in the original smaller set. 4 The second task (WSC-273) is qualitatively much more difficult 5. Its recent best reported result is only 3% of accuracy above random guess [27]. This task consists of 273 questions and is designed to work against techniques such as traditional linguistic restrictions, common heuristics or simple statistical test over text corpora (\"Google-proof \") [1].\nRecurrent language models. We consider two types of recurrent LMs, one processes word inputs and the other processes character inputs. Their output layer, however, is constructed to only produce word outputs, allowing both types of input processing to join in ensembles. Namely, our LMs predict a distribution over a large vocabulary (800K words) at each time step, using a softmax layer. Following [31], we employ importance sampling at the softmax layer with 8,192 negative samples for each mini-batch to significantly speed up training. We use two layers of LSTM [32] with 8,192 hidden units and a projection layer to a smaller dimensionality at output gates for faster processing.\nFor models that process words, we use a big embedding look up matrix with vocabulary size 800K and embedding size 1,024. For character-level input, we use a vocabulary size of 256 characters and embedding size 16. Characters in the same word are concatenated and used as input at a single time step. The resulting character embedding is processed using eight convolutions before going into the LSTM layers. More details about our LMs can be found in Appendix A.\nTraining text corpora. We perform experiments on several different text copora to examine the effect of training data type on test accuracy. Namely, we consider LM-1-Billion, CommonCrawl 6, SQuAD and Gutenberg Books. For SQuAD, we collect context passages from the Stanford Question-Answering Dataset [33] to form its training and validation sets accordingly.\n\n5 Main results\nOur experiments start with testing LMs trained on all text corpora with PDP-60 and WSC-273. Next, we show that it is possible to customize training data to obtain even better results.\n\n5.1 The first challenge in 2016: PDP-60\nWe first examine unsupervised single-model resolvers on PDP-60 by training one character-level and one word-level LM on the Gutenberg corpus. In Table 2, these two resolvers outperform previous results by a large margin. For this task, we found full scoring gives better results than partial scoring. In Section 6.2, we provide evidences that this is an atypical case due to the very small size of PDP-60. Next, we allow systems to take in necessary components to maximize their test performance. This includes making use of supervised training data that maps commonsense reasoning questions to their correct answer. Here we simply train another three variants of LMs on LM-1-Billion, CommonCrawl, and SQuAD and ensemble all of them. As reported in Table 3, this ensemble of five unsupervised models outperform the best system in the 2016 competition (58.3%) by a large margin. Specifically, we achieve 70.0% accuracy, better than the more recent reported results from Quan Liu et al (66.7%) [27], who makes use of three knowledge bases and a supervised deep neural network.\n\n5.2 Winograd Schema Challenge\nOn the harder task WSC-273, our single-model resolvers also outperform the current state-of-the-art by a large margin, as shown in This task is more difficult than PDP-60. First, the overall performance of all competing systems are much lower than that of PDP-60. Second, incorporating supervised learning and expensive annotated knowledge bases to USSM provides insignificant gain this time (+3%), comparing to the large gain on PDP-60 (+19%). 7\n\n5.3 Customized training data for Winograd Schema Challenge\nAs previous systems collect relevant data from knowledge bases after observing questions during evaluation [25, 26], we also explore using this option. Namely, we build a customized text corpus based on questions in commonsense reasoning tasks. It is important to note that this does not include the answers and therefore does not provide supervision to our resolvers. In particular, we aggregate documents from the CommonCrawl dataset that has the most overlapping n-grams with the questions. The score for each document is a weighted sum of F 1 (n) scores when counting overlapping n-grams:Similarity_Score document = 4 n=1 nF 1 (n) 4 n=1 n\n7 Our results so far have been with recurrent language models. As a comparison, we also trained a subwordlevel Transformer [37] LM on Wikipedia texts and obtain competitive performance (58.3% on PDP-60 and 54.1% on WSC-273).\n\nNumber of documents\nOne day when John and I had been out on somebusiness of our master 's , and were returning gently on a , straight road , at some distance we saw a boy trying to leap a pony over a gate ; the pony would not take the leap ,and the boy cut him with the whip , but he only turned off on one side . He whipped him again , but the pony turned off on the other side . Then the boy got off and gave him a hard thrashing , and knocked him about the head ... Right: An excerpt from the document whose score is 0.083 (highest ranking). In comparison, a perfect score is of 1.0. Documents in this corpus contain long series of events with complex references from several pronouns. The top 0.1% of highest ranked documents is chosen as our new training corpus. Details of the ranking is shown in Figure 2. This procedure resulted in nearly 1,000,000 documents, with the highest ranking document having a score of 8 \u00d7 10 \u22122 , still relatively small to a perfect score of 1.0. We name this dataset STORIES since most of the constituent documents take the form of a story with long chain of coherent events.\nWe train four different LMs on STORIES and add them to the previous ensemble of 10 LMs, resulting in a gain of 2% accuracy in the final system as shown in Table 5. Remarkably, single models trained on this corpus are already extremely strong, with a word-level LM achieving 62.6% accuracy, even better than the ensemble of 10 models previously trained on 4 other text corpora (61.5%). We introduce a method to potentially detect keywords at which our proposed resolvers make decision between the two candidates c correct and c incorrect . Namely, we look at the following ratio:q t = P \u03b8 (w t |w 1 , w 2 , ..., w t\u22121 ; w k \u2190 c correct ) P \u03b8 (w t |w 1 , w 2 , ..., w t\u22121 ; w k \u2190 c incorrect )\nWhere 1 \u2264 t \u2264 n for full scoring, and k + 1 \u2264 t \u2264 n for partial scoring. It follows that the choice between c correct or c incorrect is made by the value of Q = t q t being bigger than 1.0 or not. By looking at the value of each individual q t , it is possible to retrieve words with the largest values of q t and hence most responsible for the final value of Q.\nWe visualize the probability ratios q t to have more insights into the decisions of our resolvers. Figure 3 displays a sample of incorrect decisions made by full scoring and is corrected by partial scoring. Interestingly, we found q t with large values coincides with the special keyword of each Winograd Schema in several cases. Intuitively, this means the LMs assigned very low probability for the keyword after observing the wrong substitution. It follows that we can predict the keyword in each the Winograd Schema question by selecting top word positions with the highest value of q t . Figure 3 : A sample of questions from WSC-273 predicted incorrectly by full scoring, but corrected by partial scoring. Here we mark the correct prediction by an asterisk and display the normalized probability ratio qt by coloring its corresponding word. It can be seen that the wrong predictions are made mainly due to q t at the pronoun position, where the LM has not observed the full sentence.\nPartial scoring shifts the attention to later words and places highest q values on the special keywords, marked by a squared bracket. These keywords characterizes the Winograd Schema Challenge, as they uniquely decide the correct answer. In the last question, since the special keyword appear before the pronoun, our resolver instead chose \"upset\", as a reasonable switch word could be \"annoying\". For questions with keyword appearing before the reference, we detect them by backward-scoring models. Namely, we ensemble 6 LMs, each trained on one text corpora with word order reversed. This ensemble also outperforms the previous best system on WSC-273 with a remarkable accuracy of 58.2%. Overall, we are able to discover a significant amount of special keywords (115 out of 178 correctly answered questions) as shown in Table 6. This strongly indicates a correct understanding of the context and a good grasp of commonsense knowledge in the resolver's decision process.\n6.2 Partial scoring is better than full scoring.\nIn this set of experiments, we look at wrong predictions from a word-level LM. With full scoring strategy, we observe that q t at the pronoun position is most responsible for a very large percentage of incorrect decisions as shown in Figfure 3 and Table 7. For example, with the test \"The trophy cannot fit in the suitcase because it is too big.\", the system might return c incorrect =\"suitcase\" simply because c correct = \"trophy\" is a very rare word in its training corpus and therefore, is assigned a very low probability, overpowering subsequent q t values. Following this reasoning, we apply a simple fix to full scoring by normalizing its score with the unigram count of c: Score f ull normalized = Score f ull /Count(c). Partial scoring, on the other hand, disregards c altogether. As shown in Figure 4, this normalization fixes full scoring in 9 out of 10 tested LMs on PDP-122. On WSC-273, the result is very decisive as partial scoring strongly outperforms the other two scoring in all cases. Since PDP-122 is a larger superset of PDP-60, we attribute the different behaviour observed on PDP-60 as an atypical case due to its very small size. Figure 5 -left and middle show that STORIES always yield the highest accuracy for both types of input processing. We next rank the text corpora based on ensemble performance for more reliable results. Namely, we compare the previous ensemble of 10 models against the same set of models trained on each single text corpus. This time, the original ensemble trained on a diverse set of text corpora outperforms all other single-corpus ensembles including STORIES. This highlights the important role of diversity in training data for commonsense reasoning accuracy of the final system.\n\n7 Conclusion\nWe introduce a simple unsupervised method for Commonsense Reasoning tasks. Key to our proposal are large language models, trained on a number of massive and diverse text corpora. The resulting systems outperform previous best systems on both Pronoun Disambiguation Problems and Winograd Schema Challenge. Remarkably on the later benchmark, we are able to achieve 63.7% accuracy, comparing to 52.8% accuracy of the previous state-of-the-art, who utilizes supervised learning and expensively annotated knowledge bases. We analyze our system's answers and observe that it discovers key features of the question that decides the correct answer, indicating good understanding of the context and commonsense knowledge. We also demonstrated that ensembles of models benefit the most when trained on a diverse set of text corpora.\nWe anticipate that this simple technique will be a strong building block for future systems that utilize reasoning ability on commonsense knowledge.\n\nB Data contamination in CommonCrawl\nUsing the similarity scoring technique in section 5.3, we observe a large amount of low quality training text on the lower end of the ranking. Namely, these are documents whose content are mostly unintelligible or unrecognized by our vocabulary. Training LMs for commonsense reasoning tasks on full CommonCrawl, therefore, might not be ideal. On the other hand, we detected and removed a portion of PDP-122 questions presented as an extremely high ranked document.\n\nFootnotes:\n2: Code to reproduce these results are available at https://github.com/tensorflow/models/tree/ master/research/lm_commonsense.\n3: https://cs.nyu.edu/faculty/davise/papers/WinogradSchemas/PDPChallenge2016.xml\n4: http://commonsensereasoning.org/disambiguation.html\n5: https://cs.nyu.edu/faculty/davise/papers/WinogradSchemas/WSCollection.xml\n6: We evaluate all models trained on CommonCrawl after approximately 10-billion words are consumed.\n\nReferences:\n\n- Hector J Levesque, Ernest Davis, and Leora Morgenstern. The winograd schema challenge. In AAAI spring symposium: Logical formalizations of commonsense reasoning, 2011.- Alex Krizhevsky, Ilya Sutskever, and Geoffrey E. Hinton. Imagenet classification with deep convolutional neural networks. In Advances in Neural Information Processing Systems, 2012.\n\n- Yaniv Taigman, Ming Yang, Marc'Aurelio Ranzato, and Lior Wolf. Deepface: Closing the gap to human- level performance in face verification. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 1701-1708, 2014.\n\n- Karen Simonyan and Andrew Zisserman. Very deep convolutional networks for large-scale image recogni- tion. Advances in Neural Information Processing Systems, 2015.\n\n- Christian Szegedy, Wei Liu, Yangqing Jia, Pierre Sermanet, Scott Reed, Dragomir Anguelov, Dumitru Erhan, Vincent Vanhoucke, Andrew Rabinovich, et al. Going deeper with convolutions. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2015.\n\n- Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Delving deep into rectifiers: Surpassing human-level performance on imagenet classification. In Proceedings of the IEEE international conference on computer vision, pages 1026-1034, 2015.\n\n- Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image recognition. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pages 770-778, 2016.\n\n- Geoffrey Hinton, Li Deng, Dong Yu, George E Dahl, Abdel-rahman Mohamed, Navdeep Jaitly, Andrew Senior, Vincent Vanhoucke, Patrick Nguyen, Tara N Sainath, et al. Deep neural networks for acoustic modeling in speech recognition: The shared views of four research groups. IEEE Signal Processing Magazine, 29(6):82-97, 2012.\n\n- Awni Hannun, Carl Case, Jared Casper, Bryan Catanzaro, Greg Diamos, Erich Elsen, Ryan Prenger, Sanjeev Satheesh, Shubho Sengupta, Adam Coates, et al. Deep speech: Scaling up end-to-end speech recognition. arXiv preprint arXiv:1412.5567, 2014.\n\n- Wayne Xiong, Jasha Droppo, Xuedong Huang, Frank Seide, Mike Seltzer, Andreas Stolcke, Dong Yu, and Geoffrey Zweig. Achieving human parity in conversational speech recognition. arXiv preprint arXiv:1610.05256, 2016.\n\n- Chung-Cheng Chiu, Tara N Sainath, Yonghui Wu, Rohit Prabhavalkar, Patrick Nguyen, Zhifeng Chen, Anjuli Kannan, Ron J Weiss, Kanishka Rao, Katya Gonina, et al. State-of-the-art speech recognition with sequence-to-sequence models. arXiv preprint arXiv:1712.01769, 2017.\n\n- Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Bengio. Neural machine translation by jointly learning to align and translate. In International Conference on Learning Representations, 2015.\n\n- Ilya Sutskever, Oriol Vinyals, and Quoc V Le. Sequence to sequence learning with neural networks. In Advances in Neural Information Processing Systems, pages 3104-3112, 2014.\n\n- Yonghui Wu, Mike Schuster, Zhifeng Chen, Quoc V Le, Mohammad Norouzi, Wolfgang Macherey, Maxim Krikun, Yuan Cao, Qin Gao, Klaus Macherey, et al. Google's neural machine translation system: Bridging the gap between human and machine translation. arXiv preprint arXiv:1609.08144, 2016.\n\n- Hany Hassan, Anthony Aue, Chang Chen, Vishal Chowdhary, Jonathan Clark, Christian Federmann, Xuedong Huang, Marcin Junczys-Dowmunt, William Lewis, Mu Li, et al. Achieving human parity on automatic chinese to english news translation. arXiv preprint arXiv:1803.05567, 2018.\n\n- Tomas Mikolov, Kai Chen, Greg Corrado, and Jeffrey Dean. Efficient estimation of word representations in vector space. arXiv preprint arXiv:1301.3781, 2013.\n\n- Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Corrado, and Jeff Dean. Distributed representations of words and phrases and their compositionality. In Advances in neural information processing systems, pages 3111-3119, 2013.\n\n- Andrew M Dai and Quoc V Le. Semi-supervised sequence learning. In Advances in Neural Information Processing Systems, pages 3079-3087, 2015.\n\n- Prajit Ramachandran, Peter J Liu, and Quoc V Le. Unsupervised pretraining for sequence to sequence learning. In Conference on Empirical Methods in Natural Language Processing, 2017.\n\n- Matthew E Peters, Mark Neumann, Mohit Iyyer, Matt Gardner, Christopher Clark, Kenton Lee, and Luke Zettlemoyer. Deep contextualized word representations. In Annual Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, 2018.\n\n- Jeremy Howard and Sebastian Ruder. Fine-tuned language models for text classification. arXiv preprint arXiv:1801.06146, 2018.\n\n- Haoruo Peng, Daniel Khashabi, and Dan Roth. Solving hard coreference problems. In Proceedings of the 2015 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, pages 809-819, 2015.\n\n- Dan Bailey, Amelia Harrison, Yuliya Lierler, Vladimir Lifschitz, and Julian Michael. The winograd schema challenge and reasoning about correlation. In In Working Notes of the Symposium on Logical Formalizations of Commonsense Reasoning, 2015.\n\n- Peter Sch\u00fcller. Tackling winograd schemas by formalizing relevance theory in knowledge graphs. In Fourteenth International Conference on the Principles of Knowledge Representation and Reasoning, 2014.\n\n- Altaf Rahman and Vincent Ng. Resolving complex cases of definite pronouns: the winograd schema challenge. In Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning, pages 777-789. Association for Computational Linguistics, 2012.\n\n- Arpit Sharma, Nguyen Ha Vo, Somak Aditya, and Chitta Baral. Towards addressing the winograd schema challenge-building and using a semantic parser and a knowledge hunting module. In IJCAI, pages 1319-1325, 2015.\n\n- Quan Liu, Hui Jiang, Zhen-Hua Ling, Xiaodan Zhu, Si Wei, and Yu Hu. Combing context and commonsense knowledge through neural networks for solving winograd schema problems. CoRR, abs/1611.04146, 2016.\n\n- Zewei Chu, Hai Wang, Kevin Gimpel, and David A. McAllester. Broad context language modeling as reading comprehension. CoRR, abs/1610.08431, 2016.\n\n- Nasrin Mostafazadeh, Michael Roth, Annie Louis, Nathanael Chambers, and James Allen. Lsdsem 2017 shared task: The story cloze test. In Proceedings of the 2nd Workshop on Linking Models of Lexical, Sentential and Discourse-level Semantics, pages 46-51, 2017.\n\n- Adams Wei Yu, David Dohan, Minh-Thang Luong, Rui Zhao, Kai Chen, Mohammad Norouzi, and Quoc V Le. Qanet: Combining local convolution with global self-attention for reading comprehension. arXiv preprint arXiv:1804.09541, 2018.\n\n- Rafal J\u00f3zefowicz, Oriol Vinyals, Mike Schuster, Noam Shazeer, and Yonghui Wu. Exploring the limits of language modeling. CoRR, abs/1602.02410, 2016.\n\n- Sepp Hochreiter and J\u00fcrgen Schmidhuber. Long short-term memory. Neural computation, 9(8):1735-1780, 1997.\n\n- Pranav Rajpurkar, Jian Zhang, Konstantin Lopyrev, and Percy Liang. Squad: 100,000+ questions for machine comprehension of text. arXiv preprint arXiv:1606.05250, 2016.\n\n- Quan Liu, Hui Jiang, Zhen-Hua Ling, Si Wei, and Yu Hu. Probabilistic reasoning via deep learning: Neural association models. CoRR, abs/1603.07704, 2016.\n\n- George A Miller. Wordnet: a lexical database for english. Communications of the ACM, 38(11):39-41, 1995.\n\n- Hugo Liu and Push Singh. Conceptnet-a practical commonsense reasoning tool-kit. BT technology journal, 22(4):211-226, 2004.\n\n- Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141ukasz Kaiser, and Illia Polosukhin. Attention is all you need. In Advances in Neural Information Processing Systems, pages 6000-6010, 2017.\n\n- John Duchi, Elad Hazan, and Yoram Singer. Adaptive subgradient methods for online learning and stochastic optimization. Journal of Machine Learning Research, 12(Jul):2121-2159, 2011. Experiment LM variant / training corpus Single models on PDP-60 Word-LM 1/Gutenberg and Char-LM 1/Gutenberg Ensemble on PDP-60 Two single models on PDP-60 + Word-LM 2/SQuAD + Char-LM 2/LM1B + Char-LM 3/CommonCrawl Ensemble of 10 models Ensemble on PDP-60 + on WSC-273 Word-LM 1/Gutenberg (different random seed) + Word-LM 1/LM1B + Char-LM 4/Gutenberg + Char-LM 4/SQuAD + Char-LM 4/CommonCrawl Ensemble of 14 models Ensemble of 10 models on WSC-273 + on WSC-273 Word-LM 1/STORIES + Char-LM 2/STORIES + Word-LM 3/STORIES + Word-LM 4/STORIES Ensemble of 6 Word-LM 1/Gutenberg + Word-LM 1/STORIES + backward-scoring models Char-LM 4/CommonCrawl + Char-LM 4/SQuAD + on WSC-273 Word-LM 4/LM1B + Char-LM 2/STORIES +\n\n", "annotations": {"Abstract": [{"begin": 43, "end": 1254, "idx": 0}], "Head": [{"begin": 1257, "end": 1271, "n": "1", "idx": 0}, {"begin": 3917, "end": 3931, "n": "2", "idx": 1}, {"begin": 6931, "end": 6940, "n": "3", "idx": 2}, {"begin": 9942, "end": 9965, "n": "4", "idx": 3}, {"begin": 12533, "end": 12547, "n": "5", "idx": 4}, {"begin": 12733, "end": 12772, "n": "5.1", "idx": 5}, {"begin": 13849, "end": 13878, "n": "5.2", "idx": 6}, {"begin": 14327, "end": 14385, "n": "5.3", "idx": 7}, {"begin": 15255, "end": 15274, "idx": 8}, {"begin": 21168, "end": 21180, "n": "7", "idx": 9}, {"begin": 22154, "end": 22189, "idx": 10}], "ReferenceToBib": [{"begin": 213, "end": 216, "target": "#b0", "idx": 0}, {"begin": 1344, "end": 1347, "target": "#b1", "idx": 1}, {"begin": 1348, "end": 1350, "target": "#b2", "idx": 2}, {"begin": 1351, "end": 1353, "target": "#b3", "idx": 3}, {"begin": 1354, "end": 1356, "target": "#b4", "idx": 4}, {"begin": 1357, "end": 1359, "target": "#b5", "idx": 5}, {"begin": 1360, "end": 1362, "target": "#b6", "idx": 6}, {"begin": 1363, "end": 1365, "target": "#b7", "idx": 7}, {"begin": 1366, "end": 1368, "target": "#b8", "idx": 8}, {"begin": 1369, "end": 1372, "target": "#b9", "idx": 9}, {"begin": 1373, "end": 1376, "target": "#b10", "idx": 10}, {"begin": 1377, "end": 1380, "target": "#b11", "idx": 11}, {"begin": 1381, "end": 1384, "target": "#b12", "idx": 12}, {"begin": 1385, "end": 1388, "target": "#b13", "idx": 13}, {"begin": 1389, "end": 1392, "target": "#b14", "idx": 14}, {"begin": 1682, "end": 1685, "target": "#b0", "idx": 15}, {"begin": 4042, "end": 4046, "target": "#b15", "idx": 16}, {"begin": 4047, "end": 4050, "target": "#b16", "idx": 17}, {"begin": 4517, "end": 4521, "target": "#b17", "idx": 18}, {"begin": 4522, "end": 4525, "target": "#b18", "idx": 19}, {"begin": 4526, "end": 4529, "target": "#b19", "idx": 20}, {"begin": 4530, "end": 4533, "target": "#b20", "idx": 21}, {"begin": 4538, "end": 4542, "target": "#b17", "idx": 22}, {"begin": 4543, "end": 4546, "target": "#b18", "idx": 23}, {"begin": 4547, "end": 4550, "target": "#b19", "idx": 24}, {"begin": 4551, "end": 4554, "target": "#b20", "idx": 25}, {"begin": 5141, "end": 5145, "target": "#b21", "idx": 26}, {"begin": 5146, "end": 5149, "target": "#b22", "idx": 27}, {"begin": 5150, "end": 5153, "target": "#b23", "idx": 28}, {"begin": 5184, "end": 5188, "target": "#b24", "idx": 29}, {"begin": 5370, "end": 5374, "target": "#b25", "idx": 30}, {"begin": 5532, "end": 5536, "target": "#b23", "idx": 31}, {"begin": 5661, "end": 5665, "target": "#b22", "idx": 32}, {"begin": 5846, "end": 5850, "target": "#b26", "idx": 33}, {"begin": 6502, "end": 6506, "target": "#b27", "idx": 34}, {"begin": 6735, "end": 6739, "target": "#b28", "idx": 35}, {"begin": 6920, "end": 6924, "target": "#b19", "idx": 36}, {"begin": 6925, "end": 6928, "target": "#b29", "idx": 37}, {"begin": 10438, "end": 10441, "target": "#b0", "idx": 38}, {"begin": 10809, "end": 10813, "target": "#b26", "idx": 39}, {"begin": 11020, "end": 11023, "target": "#b0", "idx": 40}, {"begin": 11424, "end": 11428, "target": "#b30", "idx": 41}, {"begin": 11591, "end": 11595, "target": "#b31", "idx": 42}, {"begin": 12473, "end": 12477, "target": "#b32", "idx": 43}, {"begin": 13765, "end": 13769, "target": "#b26", "idx": 44}, {"begin": 14493, "end": 14497, "target": "#b24", "idx": 45}, {"begin": 14498, "end": 14501, "target": "#b25", "idx": 46}, {"begin": 15152, "end": 15156, "target": "#b36", "idx": 47}], "ReferenceToFootnote": [{"begin": 3430, "end": 3431, "target": "#foot_0", "idx": 0}, {"begin": 10534, "end": 10535, "target": "#foot_1", "idx": 1}, {"begin": 10667, "end": 10668, "target": "#foot_2", "idx": 2}, {"begin": 10732, "end": 10733, "target": "#foot_3", "idx": 3}, {"begin": 12359, "end": 12360, "target": "#foot_4", "idx": 4}], "SectionFootnote": [{"begin": 22656, "end": 23106, "idx": 0}], "ReferenceString": [{"begin": 23123, "end": 23290, "id": "b0", "idx": 0}, {"begin": 23292, "end": 23473, "id": "b1", "idx": 1}, {"begin": 23477, "end": 23720, "id": "b2", "idx": 2}, {"begin": 23724, "end": 23887, "id": "b3", "idx": 3}, {"begin": 23891, "end": 24167, "id": "b4", "idx": 4}, {"begin": 24171, "end": 24413, "id": "b5", "idx": 5}, {"begin": 24417, "end": 24627, "id": "b6", "idx": 6}, {"begin": 24631, "end": 24951, "id": "b7", "idx": 7}, {"begin": 24955, "end": 25197, "id": "b8", "idx": 8}, {"begin": 25201, "end": 25415, "id": "b9", "idx": 9}, {"begin": 25419, "end": 25686, "id": "b10", "idx": 10}, {"begin": 25690, "end": 25875, "id": "b11", "idx": 11}, {"begin": 25879, "end": 26053, "id": "b12", "idx": 12}, {"begin": 26057, "end": 26340, "id": "b13", "idx": 13}, {"begin": 26344, "end": 26616, "id": "b14", "idx": 14}, {"begin": 26620, "end": 26776, "id": "b15", "idx": 15}, {"begin": 26780, "end": 27005, "id": "b16", "idx": 16}, {"begin": 27009, "end": 27148, "id": "b17", "idx": 17}, {"begin": 27152, "end": 27333, "id": "b18", "idx": 18}, {"begin": 27337, "end": 27626, "id": "b19", "idx": 19}, {"begin": 27630, "end": 27755, "id": "b20", "idx": 20}, {"begin": 27759, "end": 28005, "id": "b21", "idx": 21}, {"begin": 28009, "end": 28251, "id": "b22", "idx": 22}, {"begin": 28255, "end": 28455, "id": "b23", "idx": 23}, {"begin": 28459, "end": 28769, "id": "b24", "idx": 24}, {"begin": 28773, "end": 28983, "id": "b25", "idx": 25}, {"begin": 28987, "end": 29186, "id": "b26", "idx": 26}, {"begin": 29190, "end": 29335, "id": "b27", "idx": 27}, {"begin": 29339, "end": 29596, "id": "b28", "idx": 28}, {"begin": 29600, "end": 29825, "id": "b29", "idx": 29}, {"begin": 29829, "end": 29977, "id": "b30", "idx": 30}, {"begin": 29981, "end": 30086, "id": "b31", "idx": 31}, {"begin": 30090, "end": 30256, "id": "b32", "idx": 32}, {"begin": 30260, "end": 30412, "id": "b33", "idx": 33}, {"begin": 30416, "end": 30520, "id": "b34", "idx": 34}, {"begin": 30524, "end": 30647, "id": "b35", "idx": 35}, {"begin": 30651, "end": 30879, "id": "b36", "idx": 36}, {"begin": 30883, "end": 31774, "id": "b37", "idx": 37}], "ReferenceToTable": [{"begin": 9165, "end": 9166, "idx": 0}, {"begin": 9290, "end": 9291, "idx": 1}, {"begin": 12924, "end": 12925, "target": "#tab_0", "idx": 2}, {"begin": 13528, "end": 13529, "target": "#tab_1", "idx": 3}, {"begin": 16528, "end": 16529, "target": "#tab_4", "idx": 4}, {"begin": 19239, "end": 19240, "target": "#tab_5", "idx": 5}, {"begin": 19686, "end": 19687, "target": "#tab_6", "idx": 6}], "Footnote": [{"begin": 22667, "end": 22793, "id": "foot_0", "n": "2", "idx": 0}, {"begin": 22794, "end": 22874, "id": "foot_1", "n": "3", "idx": 1}, {"begin": 22875, "end": 22929, "id": "foot_2", "n": "4", "idx": 2}, {"begin": 22930, "end": 23006, "id": "foot_3", "n": "5", "idx": 3}, {"begin": 23007, "end": 23106, "id": "foot_4", "n": "6", "idx": 4}], "Paragraph": [{"begin": 53, "end": 1254, "idx": 0}, {"begin": 1272, "end": 1819, "idx": 1}, {"begin": 1820, "end": 1900, "idx": 2}, {"begin": 1901, "end": 2177, "idx": 3}, {"begin": 2178, "end": 2940, "idx": 4}, {"begin": 2941, "end": 3915, "idx": 5}, {"begin": 3932, "end": 4434, "idx": 6}, {"begin": 4435, "end": 4534, "idx": 7}, {"begin": 4535, "end": 4970, "idx": 8}, {"begin": 4971, "end": 5756, "idx": 9}, {"begin": 5757, "end": 6394, "idx": 10}, {"begin": 6395, "end": 6929, "idx": 11}, {"begin": 6941, "end": 7834, "idx": 12}, {"begin": 7835, "end": 8128, "idx": 13}, {"begin": 8129, "end": 8705, "idx": 14}, {"begin": 8783, "end": 8844, "idx": 15}, {"begin": 8917, "end": 9015, "idx": 16}, {"begin": 9016, "end": 9283, "idx": 17}, {"begin": 9284, "end": 9940, "idx": 18}, {"begin": 9966, "end": 10126, "idx": 19}, {"begin": 10127, "end": 10442, "idx": 20}, {"begin": 10443, "end": 11024, "idx": 21}, {"begin": 11025, "end": 11709, "idx": 22}, {"begin": 11710, "end": 12171, "idx": 23}, {"begin": 12172, "end": 12531, "idx": 24}, {"begin": 12548, "end": 12731, "idx": 25}, {"begin": 12773, "end": 13847, "idx": 26}, {"begin": 13879, "end": 14325, "idx": 27}, {"begin": 14386, "end": 14978, "idx": 28}, {"begin": 15029, "end": 15253, "idx": 29}, {"begin": 15275, "end": 16366, "idx": 30}, {"begin": 16367, "end": 16945, "idx": 31}, {"begin": 17059, "end": 17421, "idx": 32}, {"begin": 17422, "end": 18410, "idx": 33}, {"begin": 18411, "end": 19382, "idx": 34}, {"begin": 19383, "end": 19431, "idx": 35}, {"begin": 19432, "end": 21166, "idx": 36}, {"begin": 21181, "end": 22003, "idx": 37}, {"begin": 22004, "end": 22152, "idx": 38}, {"begin": 22190, "end": 22654, "idx": 39}], "SectionHeader": [{"begin": 0, "end": 1254, "idx": 0}], "SectionReference": [{"begin": 23108, "end": 31776, "idx": 0}], "Sentence": [{"begin": 53, "end": 122, "idx": 0}, {"begin": 123, "end": 217, "idx": 1}, {"begin": 218, "end": 336, "idx": 2}, {"begin": 337, "end": 504, "idx": 3}, {"begin": 505, "end": 721, "idx": 4}, {"begin": 722, "end": 986, "idx": 5}, {"begin": 987, "end": 1169, "idx": 6}, {"begin": 1170, "end": 1254, "idx": 7}, {"begin": 1272, "end": 1481, "idx": 8}, {"begin": 1482, "end": 1588, "idx": 9}, {"begin": 1589, "end": 1771, "idx": 10}, {"begin": 1772, "end": 1819, "idx": 11}, {"begin": 1820, "end": 1883, "idx": 12}, {"begin": 1884, "end": 1900, "idx": 13}, {"begin": 1901, "end": 1922, "idx": 14}, {"begin": 1923, "end": 2177, "idx": 15}, {"begin": 2178, "end": 2307, "idx": 16}, {"begin": 2308, "end": 2488, "idx": 17}, {"begin": 2489, "end": 2774, "idx": 18}, {"begin": 2775, "end": 2854, "idx": 19}, {"begin": 2855, "end": 2940, "idx": 20}, {"begin": 2941, "end": 3158, "idx": 21}, {"begin": 3159, "end": 3296, "idx": 22}, {"begin": 3297, "end": 3554, "idx": 23}, {"begin": 3555, "end": 3604, "idx": 24}, {"begin": 3605, "end": 3686, "idx": 25}, {"begin": 3687, "end": 3915, "idx": 26}, {"begin": 3932, "end": 4013, "idx": 27}, {"begin": 4014, "end": 4194, "idx": 28}, {"begin": 4195, "end": 4297, "idx": 29}, {"begin": 4298, "end": 4434, "idx": 30}, {"begin": 4435, "end": 4534, "idx": 31}, {"begin": 4535, "end": 4776, "idx": 32}, {"begin": 4777, "end": 4970, "idx": 33}, {"begin": 4971, "end": 5154, "idx": 34}, {"begin": 5155, "end": 5252, "idx": 35}, {"begin": 5253, "end": 5355, "idx": 36}, {"begin": 5356, "end": 5511, "idx": 37}, {"begin": 5512, "end": 5646, "idx": 38}, {"begin": 5647, "end": 5756, "idx": 39}, {"begin": 5757, "end": 5851, "idx": 40}, {"begin": 5852, "end": 5984, "idx": 41}, {"begin": 5985, "end": 6106, "idx": 42}, {"begin": 6107, "end": 6226, "idx": 43}, {"begin": 6227, "end": 6318, "idx": 44}, {"begin": 6319, "end": 6394, "idx": 45}, {"begin": 6395, "end": 6483, "idx": 46}, {"begin": 6484, "end": 6595, "idx": 47}, {"begin": 6596, "end": 6740, "idx": 48}, {"begin": 6741, "end": 6929, "idx": 49}, {"begin": 6941, "end": 7033, "idx": 50}, {"begin": 7034, "end": 7155, "idx": 51}, {"begin": 7156, "end": 7283, "idx": 52}, {"begin": 7284, "end": 7368, "idx": 53}, {"begin": 7369, "end": 7469, "idx": 54}, {"begin": 7470, "end": 7529, "idx": 55}, {"begin": 7530, "end": 7672, "idx": 56}, {"begin": 7673, "end": 7739, "idx": 57}, {"begin": 7740, "end": 7834, "idx": 58}, {"begin": 7835, "end": 7853, "idx": 59}, {"begin": 7854, "end": 7957, "idx": 60}, {"begin": 7958, "end": 8080, "idx": 61}, {"begin": 8081, "end": 8128, "idx": 62}, {"begin": 8129, "end": 8288, "idx": 63}, {"begin": 8289, "end": 8458, "idx": 64}, {"begin": 8459, "end": 8645, "idx": 65}, {"begin": 8646, "end": 8705, "idx": 66}, {"begin": 8783, "end": 8844, "idx": 67}, {"begin": 8917, "end": 9015, "idx": 68}, {"begin": 9016, "end": 9115, "idx": 69}, {"begin": 9116, "end": 9167, "idx": 70}, {"begin": 9168, "end": 9283, "idx": 71}, {"begin": 9284, "end": 9406, "idx": 72}, {"begin": 9407, "end": 9466, "idx": 73}, {"begin": 9467, "end": 9940, "idx": 74}, {"begin": 9966, "end": 10064, "idx": 75}, {"begin": 10065, "end": 10126, "idx": 76}, {"begin": 10127, "end": 10169, "idx": 77}, {"begin": 10170, "end": 10293, "idx": 78}, {"begin": 10294, "end": 10442, "idx": 79}, {"begin": 10443, "end": 10536, "idx": 80}, {"begin": 10537, "end": 10734, "idx": 81}, {"begin": 10735, "end": 10814, "idx": 82}, {"begin": 10815, "end": 11024, "idx": 83}, {"begin": 11025, "end": 11051, "idx": 84}, {"begin": 11052, "end": 11159, "idx": 85}, {"begin": 11160, "end": 11295, "idx": 86}, {"begin": 11296, "end": 11413, "idx": 87}, {"begin": 11414, "end": 11564, "idx": 88}, {"begin": 11565, "end": 11709, "idx": 89}, {"begin": 11710, "end": 11830, "idx": 90}, {"begin": 11831, "end": 11923, "idx": 91}, {"begin": 11924, "end": 12009, "idx": 92}, {"begin": 12010, "end": 12116, "idx": 93}, {"begin": 12117, "end": 12171, "idx": 94}, {"begin": 12172, "end": 12194, "idx": 95}, {"begin": 12195, "end": 12312, "idx": 96}, {"begin": 12313, "end": 12388, "idx": 97}, {"begin": 12389, "end": 12531, "idx": 98}, {"begin": 12548, "end": 12639, "idx": 99}, {"begin": 12640, "end": 12731, "idx": 100}, {"begin": 12773, "end": 12914, "idx": 101}, {"begin": 12915, "end": 12993, "idx": 102}, {"begin": 12994, "end": 13073, "idx": 103}, {"begin": 13074, "end": 13178, "idx": 104}, {"begin": 13179, "end": 13269, "idx": 105}, {"begin": 13270, "end": 13389, "idx": 106}, {"begin": 13390, "end": 13506, "idx": 107}, {"begin": 13507, "end": 13650, "idx": 108}, {"begin": 13651, "end": 13847, "idx": 109}, {"begin": 13879, "end": 14050, "idx": 110}, {"begin": 14051, "end": 14142, "idx": 111}, {"begin": 14143, "end": 14325, "idx": 112}, {"begin": 14386, "end": 14537, "idx": 113}, {"begin": 14538, "end": 14630, "idx": 114}, {"begin": 14631, "end": 14754, "idx": 115}, {"begin": 14755, "end": 14879, "idx": 116}, {"begin": 14880, "end": 14978, "idx": 117}, {"begin": 15029, "end": 15091, "idx": 118}, {"begin": 15092, "end": 15253, "idx": 119}, {"begin": 15275, "end": 15568, "idx": 120}, {"begin": 15569, "end": 15635, "idx": 121}, {"begin": 15636, "end": 15799, "idx": 122}, {"begin": 15800, "end": 15841, "idx": 123}, {"begin": 15842, "end": 15943, "idx": 124}, {"begin": 15944, "end": 16022, "idx": 125}, {"begin": 16023, "end": 16067, "idx": 126}, {"begin": 16068, "end": 16236, "idx": 127}, {"begin": 16237, "end": 16366, "idx": 128}, {"begin": 16367, "end": 16751, "idx": 129}, {"begin": 16752, "end": 16905, "idx": 130}, {"begin": 16906, "end": 16945, "idx": 131}, {"begin": 17059, "end": 17131, "idx": 132}, {"begin": 17132, "end": 17255, "idx": 133}, {"begin": 17256, "end": 17421, "idx": 134}, {"begin": 17422, "end": 17520, "idx": 135}, {"begin": 17521, "end": 17628, "idx": 136}, {"begin": 17629, "end": 17751, "idx": 137}, {"begin": 17752, "end": 17869, "idx": 138}, {"begin": 17870, "end": 18013, "idx": 139}, {"begin": 18014, "end": 18132, "idx": 140}, {"begin": 18133, "end": 18267, "idx": 141}, {"begin": 18268, "end": 18410, "idx": 142}, {"begin": 18411, "end": 18544, "idx": 143}, {"begin": 18545, "end": 18648, "idx": 144}, {"begin": 18649, "end": 18808, "idx": 145}, {"begin": 18809, "end": 18910, "idx": 146}, {"begin": 18911, "end": 18996, "idx": 147}, {"begin": 18997, "end": 19100, "idx": 148}, {"begin": 19101, "end": 19241, "idx": 149}, {"begin": 19242, "end": 19382, "idx": 150}, {"begin": 19383, "end": 19431, "idx": 151}, {"begin": 19432, "end": 19510, "idx": 152}, {"begin": 19511, "end": 19688, "idx": 153}, {"begin": 19689, "end": 19993, "idx": 154}, {"begin": 19994, "end": 20159, "idx": 155}, {"begin": 20160, "end": 20220, "idx": 156}, {"begin": 20221, "end": 20318, "idx": 157}, {"begin": 20319, "end": 20434, "idx": 158}, {"begin": 20435, "end": 20584, "idx": 159}, {"begin": 20585, "end": 20698, "idx": 160}, {"begin": 20699, "end": 20785, "idx": 161}, {"begin": 20786, "end": 20906, "idx": 162}, {"begin": 20907, "end": 21045, "idx": 163}, {"begin": 21046, "end": 21166, "idx": 164}, {"begin": 21181, "end": 21255, "idx": 165}, {"begin": 21256, "end": 21359, "idx": 166}, {"begin": 21360, "end": 21485, "idx": 167}, {"begin": 21486, "end": 21697, "idx": 168}, {"begin": 21698, "end": 21893, "idx": 169}, {"begin": 21894, "end": 22003, "idx": 170}, {"begin": 22004, "end": 22152, "idx": 171}, {"begin": 22190, "end": 22332, "idx": 172}, {"begin": 22333, "end": 22435, "idx": 173}, {"begin": 22436, "end": 22532, "idx": 174}, {"begin": 22533, "end": 22654, "idx": 175}], "ReferenceToFigure": [{"begin": 7243, "end": 7244, "idx": 0}, {"begin": 8126, "end": 8127, "idx": 1}, {"begin": 16065, "end": 16066, "target": "#fig_1", "idx": 2}, {"begin": 17528, "end": 17529, "idx": 3}, {"begin": 18021, "end": 18022, "idx": 4}, {"begin": 20240, "end": 20241, "target": "#fig_2", "idx": 5}, {"begin": 20592, "end": 20593, "target": "#fig_3", "idx": 6}], "Div": [{"begin": 53, "end": 1254, "idx": 0}, {"begin": 1257, "end": 3915, "idx": 1}, {"begin": 3917, "end": 6929, "idx": 2}, {"begin": 6931, "end": 9940, "idx": 3}, {"begin": 9942, "end": 12531, "idx": 4}, {"begin": 12533, "end": 12731, "idx": 5}, {"begin": 12733, "end": 13847, "idx": 6}, {"begin": 13849, "end": 14325, "idx": 7}, {"begin": 14327, "end": 15253, "idx": 8}, {"begin": 15255, "end": 21166, "idx": 9}, {"begin": 21168, "end": 22152, "idx": 10}, {"begin": 22154, "end": 22654, "idx": 11}], "SectionMain": [{"begin": 1254, "end": 22654, "idx": 0}]}}