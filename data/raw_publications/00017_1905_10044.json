{"text": "BoolQ: Exploring the Surprising Difficulty of Natural Yes/No Questions\n\nAbstract:\nIn this paper we study yes/no questions that are naturally occurring -meaning that they are generated in unprompted and unconstrained settings. We build a reading comprehension dataset, BoolQ, of such questions, and show that they are unexpectedly challenging. They often query for complex, non-factoid information, and require difficult entailment-like inference to solve. We also explore the effectiveness of a range of transfer learning baselines. We find that transferring from entailment data is more effective than transferring from paraphrase or extractive QA data, and that it, surprisingly, continues to be very beneficial even when starting from massive pre-trained language models such as BERT. Our best method trains BERT on MultiNLI and then re-trains it on our train set. It achieves 80.4% accuracy compared to 90% accuracy of human annotators (and 62% majority-baseline), leaving a significant gap for future work.\n\n\n1 Introduction\nUnderstanding what facts can be inferred to be true or false from text is an essential part of natural language understanding. In many cases, these inferences can go well beyond what is immediately stated in the text. For example, a simple sentence like \"Hanna Huyskova won the gold medal for Belarus in freestyle skiing.\" implies that (1) Belarus is a country, (2) Hanna Huyskova is an athlete, (3) Belarus won at least one Olympic event, (4) the USA did not win the freestyle skiing event, and so on.\nTo test a model's ability to make these kinds of inferences, previous work in natural language in-Q: Has the UK been hit by a hurricane? P:\nThe Great Storm of 1987 was a violent extratropical cyclone which caused casualties in England, France and the Channel Islands . . . A: Yes. [An example event is given.] Q: Does France have a Prime Minister and a President? P:\n. . . The extent to which those decisions lie with the Prime Minister or President depends upon . . . A: Yes. [Both are mentioned, so it can be inferred both exist.]\nQ: Have the San Jose Sharks won a Stanley Cup? P: . . . The Sharks have advanced to the Stanley Cup finals once, losing to the Pittsburgh Penguins in 2016 . . . A: No. [They were in the finals once, and lost.] Figure 1 : Example yes/no questions from the BoolQ dataset. Each example consists of a question (Q), an excerpt from a passage (P), and an answer (A) with an explanation added for clarity. ference (NLI) proposed the task of labeling candidate statements as being entailed or contradicted by a given passage. However, in practice, generating candidate statements that test for complex inferential abilities is challenging. For instance, evidence suggests (Gururangan et al., 2018; Jia and Liang, 2017; McCoy et al., 2019) that simply asking human annotators to write candidate statements will result in examples that typically only require surface-level reasoning.\nIn this paper we propose an alternative: we test models on their ability to answer naturally occurring yes/no questions. That is, questions that were authored by people who were not prompted to write particular kinds of questions, including even being required to write yes/no questions, and who did not know the answer to the question they were asking. Figure 1 contains some examples from our dataset. We find such questions often query for non-factoid information, and that human annotators need to apply a wide range of inferential abilities when answering them. As a result, they can be used to construct highly inferential reading comprehension datasets that have the added benefit of being directly related to the practical end-task of answering user yes/no questions.\nYes/No questions do appear as a subset of some existing datasets (Reddy et al., 2018; Choi et al., 2018; Yang et al., 2018). However, these datasets are primarily intended to test other aspects of question answering (QA), such as conversational QA or multi-step reasoning, and do not contain naturally occurring questions.\nWe follow the data collection method used by Natural Questions (NQ) (Kwiatkowski et al., 2019) to gather 16,000 naturally occurring yes/no questions into a dataset we call BoolQ (for Boolean Questions). Each question is paired with a paragraph from Wikipedia that an independent annotator has marked as containing the answer. The task is then to take a question and passage as input, and to return \"yes\" or \"no\" as output. Following recent work (Wang et al., 2018), we focus on using transfer learning to establish baselines for our dataset. Yes/No QA is closely related to many other NLP tasks, including other forms of question answering, entailment, and paraphrasing. Therefore, it is not clear what the best data sources to transfer from are, or if it will be sufficient to just transfer from powerful pretrained language models such as BERT (Devlin et al., 2018) or ELMo (Peters et al., 2018). We experiment with state-of-the-art unsupervised approaches, using existing entailment datasets, three methods of leveraging extractive QA data, and using a few other supervised datasets.\nWe found that transferring from MultiNLI, and the unsupervised pre-training in BERT, gave us the best results. Notably, we found these approaches are surprisingly complementary and can be combined to achieve a large gain in performance. Overall, our best model reaches 80.43% accuracy, compared to 62.31% for the majority baseline and 90% human accuracy. In light of the fact BERT on its own has achieved human-like performance on several NLP tasks, this demonstrates the high degree of difficulty of our dataset. We present our data and code at https://goo.gl/boolq.\n\n2 Related Work\nYes/No questions make up a subset of the reading comprehension datasets CoQA (Reddy et al., 2018), QuAC (Choi et al., 2018), and Hot-PotQA (Yang et al., 2018), and are present in the ShARC (Saeidi et al., 2018) dataset. These datasets were built to challenge models to understand conversational QA (for CoQA, ShARC and QuAC) or multi-step reasoning (for HotPotQA), which complicates our goal of using yes/no questions to test inferential abilities. Of the four, QuAC is the only one where the question authors were not allowed to view the text being used to answer their questions, making it the best candidate to contain naturally occurring questions. However, QuAC still heavily prompts users, including limiting their questions to be about pre-selected Wikipedia articles, and is highly class imbalanced with 80% \"yes\" answers.\nThe MS Marco dataset (Nguyen et al., 2016), which contains questions with free-form text answers, also includes some yes/no questions. We experiment with heuristically identifying them in Section 4, but this process can be noisy and the quality of the resulting annotations is unknown. We also found the resulting dataset is class imbalanced, with 80% \"yes\" answers.\nYes/No QA has been used in other contexts, such as the templated bAbI stories (Weston et al., 2015) or some Visual QA datasets (Antol et al., 2015; Wu et al., 2017). We focus on answering yes/no questions using natural language text.\nQuestion answering for reading comprehension in general has seen a great deal of recent work (Rajpurkar et al., 2016; Joshi et al., 2017), and there have been many recent attempts to construct QA datasets that require advanced reasoning abilities (Yang et al., 2018; Welbl et al., 2018; Mihaylov et al., 2018; Zellers et al., 2018; Zhang et al., 2018). However, these attempts typically involve engineering data to be more difficult by, for example, explicitly prompting users to write multi-step questions (Yang et al., 2018; Mihaylov et al., 2018), or filtering out easy questions (Zellers et al., 2018). This risks resulting in models that do not have obvious end-use applications since they are optimized to perform in an artificial setting. In this paper, we show that yes/no questions have the benefit of being very challenging even when they are gathered from natural sources.\nNatural language inference is also a well studied area of research, particularly on the MultiNLI (Williams et al., 2018) and SNLI (Bowman et al., 2015) datasets. Other sources of entailment data include the PASCAL RTE challenges (Bentivogli et al., 2009 (Bentivogli et al., , 2011) ) or Sci-Tail (Khot et al., 2018). We note that, although Sc-iTail, RTE-6 and RTE-7 did not use crowd workers to generate candidate statements, they still use sources (multiple choices questions or document summaries) that were written by humans with knowledge of the premise text. Using naturally occurring yes/no questions ensures even greater independence between the questions and premise text, and ties our dataset to a clear end-task. BoolQ also requires detecting entailment in paragraphs instead of sentence pairs. Transfer learning for entailment has been studied in GLUE (Wang et al., 2018) and SentEval (Conneau and Kiela, 2018). Unsupervised pre-training in general has recently shown excellent results on many datasets, including entailment data (Peters et al., 2018; Devlin et al., 2018; Radford et al., 2018).\nConverting short-answer or multiple choice questions into entailment examples, as we do when experimenting with transfer learning, has been proposed in several prior works (Demszky et al., 2018; Poliak et al., 2018; Khot et al., 2018). In this paper we found some evidence suggesting that these approaches are less effective than using crowd-sourced entailment examples when it comes to transferring to natural yes/no questions.\nContemporaneously with our work, Phang et al. (2018) showed that pre-training on supervised tasks could be beneficial even when using pretrained language models, especially for a textual entailment task. Our work confirms these results for yes/no question answering.\nThis work builds upon the Natural Questions (NQ) (Kwiatkowski et al., 2019), which contains some natural yes/no questions. However, there are too few (about 1% of the corpus) to make yes/no QA a very important aspect of that task. In this paper, we gather a large number of additional yes/no questions in order to construct a dedicated yes/no QA dataset.\n\n3 The BoolQ Dataset\nAn example in our dataset consists of a question, a paragraph from a Wikipedia article, the title of the article, and an answer, which is either \"yes\" or \"no\". We include the article title since it can potentially help resolve ambiguities (e.g., coreferent phrases) in the passage, although none of the models presented in this paper make use of them.\n\n3.1 Data Collection\nWe gather data using the pipeline from NQ (Kwiatkowski et al., 2019), but with an additional filtering step to focus on yes/no questions. We summarize the complete pipeline here, but refer to their paper for a more detailed description.\nQuestions are gathered from anonymized, aggregated queries to the Google search engine. Queries that are likely to be yes/no questions are heuristically identified: we found selecting queries where the first word is in a manually constructed set of indicator words 3 and are of sufficient length, to be effective.\nQuestions are only kept if a Wikipedia page is returned as one of the first five results, in which case the question and Wikipedia page are given to a human annotator for further processing.\nAnnotators label question/article pairs in a three-step process. First, they decide if the question is good, meaning it is comprehensible, unambiguous, and requesting factual information. This judgment is made before the annotator sees the Wikipedia page. Next, for good questions, annotators find a passage within the document that contains enough information to answer the question. Annotators can mark questions as \"not answerable\" if the Wikipedia article does not contain the requested information. Finally, annotators mark whether the question's answer is \"yes\" or \"no\". Annotating data in this manner is quite expensive since annotators need to search entire Wikipedia documents for relevant evidence and read the text carefully.\nNote that, unlike in NQ, we only use questions that were marked as having a yes/no answer, and pair each question with the selected passage instead of the entire document. This helps reduce ambiguity (ex., avoiding cases where the document supplies conflicting answers in different paragraphs), and keeps the input small enough so that existing entailment models can easily be applied to our dataset.\nWe combine 13k questions gathered from this pipeline with an additional 3k questions with yes/no answers from the NQ training set to reach a total of 16k questions. We split these questions into a 3.2k dev set, 3.2k test set, and 9.4k train set, ensuring questions from NQ are always in the train set. \"Yes\" answers are slightly more common (62.31% in the train set). The queries are typically short (average length 8.9 tokens) with longer passages (average length 108 tokens).\n\n3.2 Analysis\nIn the following section we analyze our dataset to better understand the nature of the questions, the annotation quality, and the kinds of reasoning abilities required to answer them.\n\n3.3 Annotation Quality\nFirst, in order to assess annotation quality, three of the authors labelled 110 randomly chosen examples. If there was a disagreement, the authors conferred and selected a single answer by mutual agreement. We call the resulting labels \"gold-standard\" labels. On the 110 selected examples, the answer annotations reached 90% accuracy compared to the gold-standard labels. Of the cases where the answer annotation differed from the gold-standard, six were ambiguous or debatable cases, and five were errors where the annotator misunderstood the passage. Since the agreement was sufficiently high, we elected to use singly-annotated examples in the training/dev/test sets in order to be able to gather a larger dataset.\n\n3.4 Question Types\nPart of the value of this dataset is that it contains questions that people genuinely want to answer.\nTo explore this further, we manually define a set of topics that questions can be about. An author categorized 200 questions into these topics. The results can be found in the upper half of Table 1.\nQuestions were often about entertainment media (including T.V., movies, and music), along with other popular topics like sports. However, there are still a good portion of questions asking for more general factual knowledge, including ones about historical events or the natural world.\nWe also broke the questions into categories based on what kind of information they were requesting, shown in the lower half of Table 1. Roughly one-sixth of the questions are about whether anything with a particular property exists (Existence), another sixth are about whether a particular event occurred (Event Occurrence), and another sixth ask whether an object is known by a particular name, or belongs to a particular category (Definitional). The questions that do not fall into these three categories were split between requesting facts about a specific entity, or requesting more general factual information.\nWe do find a correlation between the nature of the question and the likelihood of a \"yes\" answer. However, this correlation is too weak to help outperform the majority baseline because, even if the topic or type is known, it is never best to guess the minority class. We also found that question-only models perform very poorly on this task (see Section 5.3), which helps confirm that the questions Q: Is the sea snake the most venomous snake? The passage states a fact that can be used to infer whether the answer is true or false, and does not fall into any of the other categories. P: . . . the venom of the inland taipan, drop by drop, is the most toxic among all snakes A: No. [If inland taipan is the most venomous snake, the sea snake must not be.]\nTable 2 : Kinds of reasoning needed in the BoolQ dataset.\ndo not contain sufficient information to predict the answer on their own.\n\n3.5 Types of Inference\nFinally, we categorize the kinds of inference required to answer the questions in BoolQ 4. The definitions and results are shown in Table 2. Less than 40% of the examples can be solved by detecting paraphrases. Instead, many questions require making additional inferences (categories \"Factual Reasoning\", \"By Example\", and \"Other Inference\") to connect what is stated in the passage to the question. There is also a significant class of questions (categories \"Implicit\" and \"Missing Mention\") that require a subtler kind of inference based on how the passage is written.\n\n3.6 Discussion\nWhy do natural yes/no questions require inference so often? We hypothesize that there are several factors. First, we notice factoid questions that ask about simple properties of entities, such as \"Was Obama born in 1962?\", are rare. We suspect this is because people will almost always prefer to phrase such questions as short-answer questions (e.g., \"When was Obama born?\"). Thus, there is a natural filtering effect where people tend to use yes/no questions exactly when they want more complex kinds of information.\nSecond, both the passages and questions rarely include negation. As a result, detecting a \"no\" answer typically requires understanding that a positive assertion in the text excludes, or makes unlikely, a positive assertion in the question. This requires reasoning that goes beyond paraphrasing (see the \"Other-Inference\" or \"Implicit\" examples).\nWe also think it was important that annotators only had to answer questions, rather than generate them. For example, imagine trying to construct questions that fall into the categories of \"Missing Mention\" or \"Implicit\". While possible, it would require a great deal of thought and creativity. On the other hand, detecting when a yes/no question can be answered using these strategies seems much easier and more intuitive. Thus, having annotators answer pre-existing questions opens the door to building datasets that contain more inference and have higher quality labels.\nModels on this dataset need to predict an output class given two pieces of input text, which is a well studied paradigm (Wang et al., 2018). We find training models on our train set alone to be relatively ineffective. Our best model reaches 69.6% accuracy, only 8% better than the majority baseline. Therefore, we follow the recent trend in NLP of using transfer learning. In particular, we experiment with pre-training models on related tasks that have larger datasets, and then fine-tuning them on our training data. We list the sources we consider for pre-training below.\n\nEntailment:\nWe consider two entailment datasets, MultiNLI (Williams et al., 2018) and SNLI (Bowman et al., 2015). We choose these datasets since they are widely-used and large enough to use for pre-training. We also experiment with ablating classes from MultiNLI. During fine-tuning we use the probability the model assigns to the \"entailment\" class as the probability of predicting a \"yes\" answer.\nMultiple-Choice QA: We use a multiple choice reading comprehension dataset, RACE (Lai et al., 2017), which contains stories or short essays paired with questions built to test the reader's comprehension of the text. Following what was done in SciTail (Khot et al., 2018), we convert questions and answer-options to statements by either substituting the answer-option for the blanks in fill-in-the-blank questions, or appending a separator token and the answer-option to the question.\nDuring training, we have models independently assign a score to each statement, and then apply the softmax operator between all statements per each question to get statement probabilities. We use the negative log probability of the correct statement as a loss function. To fine-tune on BoolQ, we apply the sigmoid operator to the score of the question given its passage to get the probability of a \"yes\" answer.\nExtractive QA: We consider several methods of leveraging extractive QA datasets, where the model must answer questions by selecting text from a relevant passage. Preliminary experiments found that simply transferring the lower-level weights of extractive QA models was ineffective, so we instead consider three methods of con-structing entailment-like data from extractive QA data.\nFirst, we use the QNLI task from GLUE (Wang et al., 2018), where the model must determine if a sentence from SQuAD 1.1 (Rajpurkar et al., 2016) contains the answer to an input question or not. Following previous work (Hu et al., 2018), we also try building entailment-like training data from SQuAD 2.0 (Rajpurkar et al., 2018). We concatenate questions with either the correct answer, or with the incorrect \"distractor\" answer candidate provided by the dataset, and train the model to classify which is which given the question's supporting text.\nFinally, we also experiment with leveraging the long-answer portion of NQ, where models must select a paragraph containing the answer to a question from a document. Following our method for Multiple-Choice QA, we train a model to assign a score to (question, paragraph) pairs, apply the softmax operator on paragraphs from the same document to get a probability distribution over the paragraphs, and train the model on the negative log probability of selecting an answer-containing paragraph. We only train on questions that were marked as having an answer, and select an answer-containing paragraph and up to 15 randomly chosen non-answer-containing paragraphs for each question. On BoolQ, we compute the probability of a \"yes\" answer by applying the sigmoid operator to the score the model gives to the input question and passage.\nParaphrasing: We use the Quora Question Paraphrasing (QQP) dataset, which consists of pairs of questions labelled as being paraphrases or not. 5 Paraphrasing is related to entailment since we expect, at least in some cases, passages will contain a paraphrase of the question.\nHeuristic Yes/No: We attempt to heuristically construct a corpus of yes/no questions from the MS Marco corpus (Nguyen et al., 2016). MS Marco has free-form answers paired with snippets of related web documents. We search for answers starting with \"yes\" or \"no\", and then pair the corresponding questions with snippets marked as being related to the question. We call this task Y/N MS Marco; in total we gather 38k examples, 80% of which are \"yes\" answers.\nUnsupervised: It is well known that unsupervised pre-training using language-modeling objectives (Peters et al., 2018; Devlin et al., 2018; Radford et al., 2018), can improve performance on many tasks. We experiment with these methods by using the pre-trained models from ELMo, BERT, and OpenAI's Generative Pre-trained Transformer (OpenAI GPT) (see Section 5.2).\n\n5 Results\n\n\n5.1 Shallow Models\nFirst, we experiment with using a linear classifier on our task. In general, we found features such as word overlap or TF-IDF statistics were not sufficient to achieve better than the majorityclass baseline accuracy (62.17% on the dev set). We did find there was a correlation between the number of times question words occurred in the passage and the answer being \"yes\", but the correlation was not strong enough to build an effective classifier. \"Yes\" is the most common answer even among questions with zero shared words between the question and passage (with a 51% majority), and more common in other cases.\n\n5.2 Neural Models\nFor our experiments that do not use unsupervised pre-training (except the use of pre-trained word vectors), we use a standard recurrent model with attention. Our experiments using unsupervised pre-training use the models provided by the authors. In more detail:\nOur Recurrent model follows a standard recurrent plus attention architecture for text-pair classification (Wang et al., 2018). It embeds the premise/hypothesis text using fasttext word vectors (Mikolov et al., 2018) and learned character vectors, applies a shared bidirectional LSTM to both parts, applies co-attention (Parikh et al., 2016) to share information between the two parts, applies another bi-LSTM to both parts, pools the result, and uses the pooled representation to predict the final class. See Appendix A.2 for details.\nOur Recurrent +ELMo model uses the language model from Peters et al. ( 2018) to provide contextualized embeddings to the baseline model outlined above, as recommended by the authors.\nOur OpenAI GPT model fine-tunes the 12 layer 768 dimensional uni-directional transformer from Radford et al. (2018), which has been pretrained as a language model on the Books corpus (Zhu et al., 2015).\nOur BERT L model fine-tunes the 24 layer 1024 dimensional transformer from Devlin et al. (2018), which has been trained on next-sentence-selection and masked language modelling on the Book Corpus and Wikipedia.\nWe fine-tune the BERT L and the OpenAI GPT models using the optimizers recommended by the authors, but found it important to tune the optimization parameters to achieve the best results. We use a batch size of 24, learning rate of 1e-5, and 5 training epochs for BERT and a learning rate of 6.25e-5, batch size of 6, language model loss of 0.5, and 3 training epochs for OpenAI GPT.\n\n5.3 Question/Passage Only Results\nFollowing the recommendation of Gururangan et al. (2018), we first experiment with models that are only allowed to observe the question or the passage. The pre-trained BERT L model reached 64.48% dev set accuracy using just the question and 66.74% using just the passage. Given that the majority baseline is 62.17%, this suggests there is little signal in the question by itself, but that some language patterns in the passage correlate with the answer. Possibly, passages that present more straightforward factual information (like Wikipedia introduction paragraphs) correlate with \"yes\" answers.\n\n5.4 Transfer Learning Results\nThe results of our transfer learning methods are shown in Table 3. All results are averaged over five runs. For models pre-trained on supervised datasets, both the pre-training and the fine-tuning stages were repeated. For unsupervised pretraining, we use the pre-trained models provided by the authors, but continue to average over five runs of fine-tuning.\nQA Results: We were unable to transfer from RACE or SQuAD 2.0. For RACE, the problem might be domain mismatch. In RACE the passages are stories, and the questions often query for passage-specific information such as the author's intent or the state of a particular entity from the passage, instead of general knowledge.\nWe would expect SQuAD 2.0 to be a better match for BoolQ since it is also Wikipediabased, but its possible detecting the adversarially-  In all cases directly using the pre-trained model without fine-tuning did not achieve results better than the majority baseline, so we do not include them here.\nconstructed distractors used for negative examples does not relate well to yes/no QA.\nWe got better results using QNLI, and even better results using NQ. This shows the task of selecting text relevant to a question is partially transferable to yes/no QA, although we are only able to gain a few points over the baseline.\nEntailment Results: The MultiNLI dataset out-performed all other supervised methods by a large margin. Remarkably, this approach is only a few points behind BERT despite using orders of magnitude less training data and a much more light-weight model, showing high-quality pre-training data can help compensate for these deficiencies.\nOur ablation results show that removing the neutral class from MultiNLI hurt transfer slightly, and removing either of the other classes was very harmful, suggesting the neutral examples had limited value. SNLI transferred better than other datasets, but worse than MultiNLI. We suspect this is due to limitations of the photo-caption domain it was constructed from.\nOther Supervised Results: We obtained a small amount of transfer using QQP and Y/N MS Marco. Although Y/N MS Marco is a yes/no QA dataset, its small size and class imbalance likely contributed to its limited effectiveness. The web snippets it uses as passages also present a large domain shift from the Wikipedia passages in BoolQ.\nUnsupervised Results: Following results on other datasets (Wang et al., 2018), we found BERT L to be the most effective unsupervised method, surpassing all other methods of pretraining.\n\n5.5 Multi-Step Transfer Results\nOur best single-step transfer learning results were from using the pre-trained BERT L model and MultiNLI. We also experiment with combining these approaches using a two-step pre-training regime. In particular, we fine-tune the pre-trained BERT L on MultiNLI, and then fine-tune the resulting model again on the BoolQ train set. We found decreasing the number of training epochs to 3 resulted in a slight improvement when using the model pre-trained on MultiNLI. We show the test set results for this model, and some other pre-training variations, in Table 4. For these results we train five versions of each model using different training seeds, and show the model that had the best dev-set performance.\nGiven how extensively the BERT L model has been pre-trained, and how successful it has been across many NLP tasks, the additional gain of 3.5 points due to using MultiNLI is remarkable. This suggests MultiNLI contains signal orthogonal to what is found in BERT's unsupervised objectives.\n\n5.6 Sample Efficiency\nIn Figure 2\n\n5.7 Discussion\nA surprising result from our work is that the datasets that more closely resemble the format of BoolQ, meaning they contain questions and multisentence passages, such as SQuAD 2.0, RACE, or 1,000 2,000 3,000 4,000 5,000 6,000 7,000 8,000 9,000 Y/N MS Marco, were not very useful for transfer. The entailment datasets were stronger despite consisting of sentence pairs. This suggests that adapting from sentence-pair input to question/passage input was not a large obstacle to achieving transfer. Preliminary work found attempting to convert the yes/no questions in BoolQ into declarative statements did not improve transfer from MultiNLI, which supports this hypothesis.\nThe success of MultiNLI might also be surprising given recent concerns about the generalization abilities of models trained on it (Glockner et al., 2018), particularly related to \"annotation artifacts\" caused by using crowd workers to write the hypothesis statements (Gururangan et al., 2018). We have shown that, despite these weaknesses, it can still be an important starting point for models being used on natural data.\nWe hypothesize that a key advantage of MultiNLI is that it contains examples of contradictions. The other sources of transfer we consider, including the next-sentence-selection objective in BERT, are closer to providing examples of entailed text vs. neutral/unrelated text. Indeed, we found that our two step transfer procedure only reaches 78.43% dev set accuracy if we remove the contradiction class from MultiNLI, regressing its performance close to the level of BERT L when just using unsupervised pre-training.\nNote that it is possible to pre-train a model on several of the suggested datasets, either in succession or in a multi-task setup. We leave these experiments to future work. Our results also suggest pre-training on MultiNLI would be helpful for other corpora that contain yes/no questions.\n\n6 Conclusion\nWe have introduced BoolQ, a new reading comprehension dataset of naturally occurring yes/no questions. We have shown these questions are challenging and require a wide range of inference abilities to solve. We have also studied how transfer learning performs on this task, and found crowd-sourced entailment datasets can be leveraged to boost performance even on top of language model pre-training. Future work could include building a document-level version of this task, which would increase its difficulty and its correspondence to an end-user application.\n\nFootnotes:\n1: Work completed while interning at Google.\n2: Also affiliated with Columbia University, work done at Google.\n3: The full set is: {\"did\", \"do\", \"does\", \"is\", \"are\", \"was\", \"were\", \"have\", \"has\", \"can\", \"could\", \"will\", \"would\"}.\n4: Note the dataset has been updated since we carried out this analysis, so it might be slighly out-of-date.\n5: data.quora.com/First-Quora-Dataset-Release-Question-Pairs\n\nReferences:\n\n- Stanislaw Antol, Aishwarya Agrawal, Jiasen Lu, Mar- garet Mitchell, Dhruv Batra, C Lawrence Zitnick, and Devi Parikh. 2015. VQA: Visual Question An- swering. In Proceedings of the IEEE international conference on computer vision.- Luisa Bentivogli, Peter Clark, Ido Dagan, and Danilo Giampiccolo. 2009. The Sixth PASCAL Recogniz- ing Textual Entailment Challenge. In TAC.\n\n- Luisa Bentivogli, Peter Clark, Ido Dagan, and Danilo Giampiccolo. 2011. The Seventh PASCAL Recog- nizing Textual Entailment Challenge. In TAC.\n\n- Samuel R Bowman, Gabor Angeli, Christopher Potts, and Christopher D Manning. 2015. A Large Anno- tated Corpus for Learning Natural Language Infer- ence. In EMNLP.\n\n- Qian Chen, Xiaodan Zhu, Zhenhua Ling, Si Wei, Hui Jiang, and Diana Inkpen. 2017. Enhanced LSTM for Natural Language Inference. In ACL.\n\n- Eunsol Choi, He He, Mohit Iyyer, Mark Yatskar, Wen- tau Yih, Yejin Choi, Percy Liang, and Luke Zettle- moyer. 2018. QuaC: Question Answering in Con- text. In EMNLP.\n\n- Alexis Conneau and Douwe Kiela. 2018. Senteval: An Evaluation Toolkit for Universal Sentence Rep- resentations. In LREC.\n\n- Dorottya Demszky, Kelvin Guu, and Percy Liang. 2018. Transforming Question Answering Datasets Into Natural Language Inference Datasets. Comput- ing Research Repository, arXiv:1809.02922. Ver- sion 2.\n\n- Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. 2018. BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding. Computing Research Repository, arXiv:1810.04805. Version 1.\n\n- Max Glockner, Vered Shwartz, and Yoav Goldberg. 2018. Breaking NLI Systems with Sentences that Require Simple Lexical Inferences. In ACL.\n\n- Suchin Gururangan, Swabha Swayamdipta, Omer Levy, Roy Schwartz, Samuel R Bowman, and Noah A Smith. 2018. Annotation Artifacts in Natu- ral Language Inference Data. In NAACL.\n\n- Minghao Hu, Yuxing Peng, Zhen Huang, Nan Yang, Ming Zhou, et al. 2018. Read+ Verify: Machine Reading Comprehension with Unanswerable Ques- tions. In CoRR.\n\n- Robin Jia and Percy Liang. 2017. Adversarial Ex- amples for Evaluating Reading Comprehension Sys- tems. In EMNLP.\n\n- Mandar Joshi, Eunsol Choi, Daniel S Weld, and Luke Zettlemoyer. 2017. Triviaqa: A Large Scale Dis- tantly Supervised Challenge Dataset for Reading Comprehension. In ACL. Tushar Khot, Ashish Sabharwal, and Peter Clark. 2018. SciTail: A Textual Entailment Dataset from Science Question Answering. In AAAI.\n\n- Diederik P Kingma and Jimmy Ba. 2014. Adam: A Method for Stochastic Optimization. In ICLR.\n\n- Tom Kwiatkowski, Jennimaria Palomaki, Olivia Red- field, Michael Collins, Ankur Parikh, Chris Alberti, Danielle Epstein, Illia Polosukhin, Matthew Kelcey, Jacob Devlin, Kenton Lee, Kristina N. Toutanova, Llion Jones, Ming-Wei Chang, Andrew Dai, Jakob Uszkoreit, Quoc Le, and Slav Petrov. 2019. Natu- ral Questions: a Benchmark for Question Answering Research. In TACL.\n\n- Guokun Lai, Qizhe Xie, Hanxiao Liu, Yiming Yang, and Eduard Hovy. 2017. Race: Large-Scale Read- ing Comprehension Dataset from Examinations. In EMNLP.\n\n- R Thomas McCoy, Ellie Pavlick, and Tal Linzen. 2019. Right for the Wrong Reasons: Diagnosing Syntactic Heuristics in Natural Language Inference. Comput- ing Research Repository, arXiv:1902.01007. Ver- sion 1.\n\n- Todor Mihaylov, Peter Clark, Tushar Khot, and Ashish Sabharwal. 2018. Can a Suit of Armor Conduct Electricity? A New Dataset for Open Book Ques- tion Answering. In EMNLP.\n\n- Tomas Mikolov, Edouard Grave, Piotr Bojanowski, Christian Puhrsch, and Armand Joulin. 2018. Ad- vances in Pre-Training Distributed Word Represen- tations. In LREC.\n\n- Tri Nguyen, Mir Rosenberg, Xia Song, Jianfeng Gao, Saurabh Tiwary, Rangan Majumder, and Li Deng. 2016. MS MARCO: A Human Generated Machine Reading Comprehension Dataset. Computing Re- search Repository, arXiv:1611.09268. Version 3.\n\n- Ankur P Parikh, Oscar T\u00e4ckstr\u00f6m, Dipanjan Das, and Jakob Uszkoreit. 2016. A Decomposable Attention Model for Natural Language Inference. In EMNLP.\n\n- Matthew E Peters, Mark Neumann, Mohit Iyyer, Matt Gardner, Christopher Clark, Kenton Lee, and Luke Zettlemoyer. 2018. Deep Contextualized Word Representations. In NAACL.\n\n- Jason Phang, Thibault F\u00e9vry, and Samuel R Bowman. 2018. Sentence Encoders on STILTs: Supplemen- tary Training on Intermediate Labeled-data Tasks. Computing Research Repository, arXiv:1811.01088. Version 2.\n\n- Adam Poliak, Aparajita Haldar, Rachel Rudinger, J Ed- ward Hu, Ellie Pavlick, Aaron Steven White, and Benjamin Van Durme. 2018. Collecting Diverse Natural Language Inference Problems for Sentence Representation Evaluation. In EMNLP.\n\n- Alec Radford, Karthik Narasimhan, Tim Salimans, and Ilya Sutskever. 2018. Improving Language Under- standing by Generative Pre-training.\n\n- Pranav Rajpurkar, Robin Jia, and Percy Liang. 2018. Know What You Don't Know: Unanswerable Ques- tions for SQuAD. In ACL.\n\n- Pranav Rajpurkar, Jian Zhang, Konstantin Lopyrev, and Percy Liang. 2016. Squad: 100,000+ Questions for Machine Comprehension of Text. In EMNLP.\n\n- Siva Reddy, Danqi Chen, and Christopher D Manning. 2018. CoQA: A Conversational Question Answer- ing Challenge. In TACL.\n\n- Marzieh Saeidi, Max Bartolo, Patrick Lewis, Sameer Singh, Tim Rockt\u00e4schel, Mike Sheldon, Guillaume Bouchard, and Sebastian Riedel. 2018. Interpreta- tion of Natural Language Rules in Conversational Machine Reading. In EMNLP.\n\n- Minjoon Seo, Aniruddha Kembhavi, Ali Farhadi, and Hannaneh Hajishirzi. 2017. Bidirectional Attention Flow for Machine Comprehension. In ICLR.\n\n- Alex Wang, Amanpreet Singh, Julian Michael, Fe- lix Hill, Omer Levy, and Samuel Bowman. 2018. GLUE: A Multi-Task Benchmark and Analysis Plat- form for Natural Language Understanding. In EMNLP.\n\n- Johannes Welbl, Pontus Stenetorp, and Sebastian Riedel. 2018. Constructing Datasets for Multi-hop Reading Comprehension Across Documents. In ACL.\n\n- Jason Weston, Antoine Bordes, Sumit Chopra, Alexan- der M Rush, Bart van Merri\u00ebnboer, Armand Joulin, and Tomas Mikolov. 2015. Towards AI-Complete Question Answering: A Set of Prerequisite Toy Tasks. In ICLR.\n\n- Adina Williams, Nikita Nangia, and Samuel R Bow- man. 2018. A Broad-Coverage Challenge Corpus for Sentence Understanding through Inference. In NAACL.\n\n- Qi Wu, Damien Teney, Peng Wang, Chunhua Shen, Anthony Dick, and Anton van den Hengel. 2017. Visual Question Answering: A Survey of Methods and Datasets. In Computer Vision and Image Un- derstanding. Elsevier.\n\n- Zhilin Yang, Peng Qi, Saizheng Zhang, Yoshua Ben- gio, William W Cohen, Ruslan Salakhutdinov, and Christopher D Manning. 2018. Hotpotqa: A Dataset for Diverse, Explainable Multi-hop Question An- swering. In EMNLP.\n\n- Rowan Zellers, Yonatan Bisk, Roy Schwartz, and Yejin Choi. 2018. Swag: A Large-Scale Adversarial Dataset for Grounded Commonsense Inference. In EMNLP.\n\n- Sheng Zhang, Xiaodong Liu, Jingjing Liu, Jianfeng Gao, Kevin Duh, and Benjamin Van Durme. 2018. ReCoRD: Bridging the Gap between Human and Machine Commonsense Reading Comprehension. Computing Research Repository, arXiv:1810.12885. Version 1.\n\n- Yukun Zhu, Ryan Kiros, Rich Zemel, Ruslan Salakhut- dinov, Raquel Urtasun, Antonio Torralba, and Sanja Fidler. 2015. Aligning Books and Movies: To- wards Story-Like Visual Explanations by Watching Movies and Reading Books. In Proceedings of the IEEE international conference on computer vision, pages 19-27.\n\n", "annotations": {"Abstract": [{"begin": 72, "end": 1011, "idx": 0}], "Head": [{"begin": 1014, "end": 1028, "n": "1", "idx": 0}, {"begin": 5694, "end": 5708, "n": "2", "idx": 1}, {"begin": 10184, "end": 10203, "n": "3", "idx": 2}, {"begin": 10557, "end": 10576, "n": "3.1", "idx": 3}, {"begin": 12936, "end": 12948, "n": "3.2", "idx": 4}, {"begin": 13134, "end": 13156, "n": "3.3", "idx": 5}, {"begin": 13876, "end": 13894, "n": "3.4", "idx": 6}, {"begin": 15987, "end": 16009, "n": "3.5", "idx": 7}, {"begin": 16582, "end": 16596, "n": "3.6", "idx": 8}, {"begin": 18610, "end": 18621, "idx": 9}, {"begin": 22764, "end": 22773, "n": "5", "idx": 10}, {"begin": 22776, "end": 22794, "n": "5.1", "idx": 11}, {"begin": 23408, "end": 23425, "n": "5.2", "idx": 12}, {"begin": 25204, "end": 25237, "n": "5.3", "idx": 13}, {"begin": 25837, "end": 25866, "n": "5.4", "idx": 14}, {"begin": 28385, "end": 28416, "n": "5.5", "idx": 15}, {"begin": 29410, "end": 29431, "n": "5.6", "idx": 16}, {"begin": 29445, "end": 29459, "n": "5.7", "idx": 17}, {"begin": 31361, "end": 31373, "n": "6", "idx": 18}], "ReferenceToBib": [{"begin": 2402, "end": 2405, "idx": 0}, {"begin": 2729, "end": 2754, "target": "#b10", "idx": 1}, {"begin": 2755, "end": 2775, "target": "#b12", "idx": 2}, {"begin": 2776, "end": 2795, "target": "#b17", "idx": 3}, {"begin": 3780, "end": 3800, "target": "#b28", "idx": 4}, {"begin": 3801, "end": 3819, "target": "#b5", "idx": 5}, {"begin": 3820, "end": 3838, "target": "#b36", "idx": 6}, {"begin": 4106, "end": 4132, "target": "#b15", "idx": 7}, {"begin": 4483, "end": 4502, "target": "#b31", "idx": 8}, {"begin": 4884, "end": 4905, "target": "#b8", "idx": 9}, {"begin": 4914, "end": 4935, "target": "#b22", "idx": 10}, {"begin": 5786, "end": 5806, "target": "#b28", "idx": 11}, {"begin": 5813, "end": 5832, "target": "#b5", "idx": 12}, {"begin": 5848, "end": 5867, "target": "#b36", "idx": 13}, {"begin": 5898, "end": 5919, "target": "#b29", "idx": 14}, {"begin": 6561, "end": 6582, "target": "#b20", "idx": 15}, {"begin": 6985, "end": 7006, "target": "#b33", "idx": 16}, {"begin": 7034, "end": 7054, "target": "#b0", "idx": 17}, {"begin": 7055, "end": 7071, "target": "#b35", "idx": 18}, {"begin": 7234, "end": 7258, "target": "#b27", "idx": 19}, {"begin": 7259, "end": 7278, "target": "#b13", "idx": 20}, {"begin": 7388, "end": 7407, "target": "#b36", "idx": 21}, {"begin": 7408, "end": 7427, "target": "#b32", "idx": 22}, {"begin": 7428, "end": 7450, "target": "#b18", "idx": 23}, {"begin": 7451, "end": 7472, "target": "#b37", "idx": 24}, {"begin": 7473, "end": 7492, "target": "#b38", "idx": 25}, {"begin": 7648, "end": 7667, "target": "#b36", "idx": 26}, {"begin": 7668, "end": 7690, "target": "#b18", "idx": 27}, {"begin": 7724, "end": 7746, "target": "#b37", "idx": 28}, {"begin": 8122, "end": 8145, "target": "#b34", "idx": 29}, {"begin": 8155, "end": 8176, "target": "#b3", "idx": 30}, {"begin": 8254, "end": 8278, "target": "#b1", "idx": 31}, {"begin": 8279, "end": 8308, "target": "#b2", "idx": 32}, {"begin": 8312, "end": 8340, "idx": 33}, {"begin": 8888, "end": 8907, "target": "#b31", "idx": 34}, {"begin": 8921, "end": 8946, "target": "#b6", "idx": 35}, {"begin": 9066, "end": 9087, "target": "#b22", "idx": 36}, {"begin": 9088, "end": 9108, "target": "#b8", "idx": 37}, {"begin": 9109, "end": 9130, "target": "#b25", "idx": 38}, {"begin": 9304, "end": 9326, "target": "#b7", "idx": 39}, {"begin": 9327, "end": 9347, "target": "#b24", "idx": 40}, {"begin": 9348, "end": 9366, "idx": 41}, {"begin": 9594, "end": 9613, "target": "#b23", "idx": 42}, {"begin": 9877, "end": 9903, "target": "#b15", "idx": 43}, {"begin": 10619, "end": 10645, "target": "#b15", "idx": 44}, {"begin": 18154, "end": 18173, "target": "#b31", "idx": 45}, {"begin": 18668, "end": 18691, "target": "#b34", "idx": 46}, {"begin": 18696, "end": 18722, "idx": 47}, {"begin": 19090, "end": 19108, "target": "#b16", "idx": 48}, {"begin": 19260, "end": 19279, "idx": 49}, {"begin": 20325, "end": 20344, "target": "#b31", "idx": 50}, {"begin": 20406, "end": 20430, "target": "#b27", "idx": 51}, {"begin": 20504, "end": 20521, "target": "#b11", "idx": 52}, {"begin": 20589, "end": 20613, "target": "#b26", "idx": 53}, {"begin": 22053, "end": 22074, "target": "#b20", "idx": 54}, {"begin": 22496, "end": 22517, "target": "#b22", "idx": 55}, {"begin": 22518, "end": 22538, "target": "#b8", "idx": 56}, {"begin": 22539, "end": 22560, "target": "#b25", "idx": 57}, {"begin": 23794, "end": 23813, "target": "#b31", "idx": 58}, {"begin": 23881, "end": 23902, "target": "#b19", "idx": 59}, {"begin": 24007, "end": 24028, "target": "#b21", "idx": 60}, {"begin": 24500, "end": 24521, "target": "#b25", "idx": 61}, {"begin": 24589, "end": 24607, "target": "#b39", "idx": 62}, {"begin": 24684, "end": 24704, "target": "#b8", "idx": 63}, {"begin": 25270, "end": 25294, "target": "#b10", "idx": 64}, {"begin": 28256, "end": 28275, "target": "#b31", "idx": 65}, {"begin": 30261, "end": 30284, "target": "#b9", "idx": 66}, {"begin": 30398, "end": 30423, "target": "#b10", "idx": 67}], "ReferenceToFootnote": [{"begin": 11079, "end": 11080, "target": "#foot_2", "idx": 0}, {"begin": 16098, "end": 16099, "target": "#foot_3", "idx": 1}, {"begin": 21810, "end": 21811, "target": "#foot_4", "idx": 2}], "SectionFootnote": [{"begin": 31935, "end": 32345, "idx": 0}], "ReferenceString": [{"begin": 32362, "end": 32591, "id": "b0", "idx": 0}, {"begin": 32593, "end": 32733, "id": "b1", "idx": 1}, {"begin": 32737, "end": 32879, "id": "b2", "idx": 2}, {"begin": 32883, "end": 33045, "id": "b3", "idx": 3}, {"begin": 33049, "end": 33183, "id": "b4", "idx": 4}, {"begin": 33187, "end": 33351, "id": "b5", "idx": 5}, {"begin": 33355, "end": 33475, "id": "b6", "idx": 6}, {"begin": 33479, "end": 33678, "id": "b7", "idx": 7}, {"begin": 33682, "end": 33895, "id": "b8", "idx": 8}, {"begin": 33899, "end": 34036, "id": "b9", "idx": 9}, {"begin": 34040, "end": 34213, "id": "b10", "idx": 10}, {"begin": 34217, "end": 34371, "id": "b11", "idx": 11}, {"begin": 34375, "end": 34488, "id": "b12", "idx": 12}, {"begin": 34492, "end": 34795, "id": "b13", "idx": 13}, {"begin": 34799, "end": 34889, "id": "b14", "idx": 14}, {"begin": 34893, "end": 35261, "id": "b15", "idx": 15}, {"begin": 35265, "end": 35415, "id": "b16", "idx": 16}, {"begin": 35419, "end": 35627, "id": "b17", "idx": 17}, {"begin": 35631, "end": 35801, "id": "b18", "idx": 18}, {"begin": 35805, "end": 35968, "id": "b19", "idx": 19}, {"begin": 35972, "end": 36203, "id": "b20", "idx": 20}, {"begin": 36207, "end": 36353, "id": "b21", "idx": 21}, {"begin": 36357, "end": 36526, "id": "b22", "idx": 22}, {"begin": 36530, "end": 36735, "id": "b23", "idx": 23}, {"begin": 36739, "end": 36971, "id": "b24", "idx": 24}, {"begin": 36975, "end": 37111, "id": "b25", "idx": 25}, {"begin": 37115, "end": 37236, "id": "b26", "idx": 26}, {"begin": 37240, "end": 37383, "id": "b27", "idx": 27}, {"begin": 37387, "end": 37507, "id": "b28", "idx": 28}, {"begin": 37511, "end": 37735, "id": "b29", "idx": 29}, {"begin": 37739, "end": 37880, "id": "b30", "idx": 30}, {"begin": 37884, "end": 38076, "id": "b31", "idx": 31}, {"begin": 38080, "end": 38225, "id": "b32", "idx": 32}, {"begin": 38229, "end": 38436, "id": "b33", "idx": 33}, {"begin": 38440, "end": 38589, "id": "b34", "idx": 34}, {"begin": 38593, "end": 38801, "id": "b35", "idx": 35}, {"begin": 38805, "end": 39018, "id": "b36", "idx": 36}, {"begin": 39022, "end": 39172, "id": "b37", "idx": 37}, {"begin": 39176, "end": 39417, "id": "b38", "idx": 38}, {"begin": 39421, "end": 39728, "id": "b39", "idx": 39}], "ReferenceToTable": [{"begin": 14193, "end": 14194, "target": "#tab_0", "idx": 0}, {"begin": 14615, "end": 14616, "target": "#tab_0", "idx": 1}, {"begin": 15860, "end": 15861, "idx": 2}, {"begin": 16148, "end": 16149, "idx": 3}, {"begin": 25931, "end": 25932, "target": "#tab_3", "idx": 4}, {"begin": 28973, "end": 28974, "target": "#tab_4", "idx": 5}], "Footnote": [{"begin": 31946, "end": 31990, "id": "foot_0", "n": "1", "idx": 0}, {"begin": 31991, "end": 32056, "id": "foot_1", "n": "2", "idx": 1}, {"begin": 32057, "end": 32175, "id": "foot_2", "n": "3", "idx": 2}, {"begin": 32176, "end": 32284, "id": "foot_3", "n": "4", "idx": 3}, {"begin": 32285, "end": 32345, "id": "foot_4", "n": "5", "idx": 4}], "ReferenceToFormula": [{"begin": 24294, "end": 24298, "idx": 0}], "Paragraph": [{"begin": 82, "end": 1011, "idx": 0}, {"begin": 1029, "end": 1531, "idx": 1}, {"begin": 1532, "end": 1671, "idx": 2}, {"begin": 1672, "end": 1898, "idx": 3}, {"begin": 1899, "end": 2064, "idx": 4}, {"begin": 2065, "end": 2938, "idx": 5}, {"begin": 2939, "end": 3714, "idx": 6}, {"begin": 3715, "end": 4037, "idx": 7}, {"begin": 4038, "end": 5124, "idx": 8}, {"begin": 5125, "end": 5692, "idx": 9}, {"begin": 5709, "end": 6539, "idx": 10}, {"begin": 6540, "end": 6906, "idx": 11}, {"begin": 6907, "end": 7140, "idx": 12}, {"begin": 7141, "end": 8024, "idx": 13}, {"begin": 8025, "end": 9131, "idx": 14}, {"begin": 9132, "end": 9560, "idx": 15}, {"begin": 9561, "end": 9827, "idx": 16}, {"begin": 9828, "end": 10182, "idx": 17}, {"begin": 10204, "end": 10555, "idx": 18}, {"begin": 10577, "end": 10813, "idx": 19}, {"begin": 10814, "end": 11127, "idx": 20}, {"begin": 11128, "end": 11318, "idx": 21}, {"begin": 11319, "end": 12055, "idx": 22}, {"begin": 12056, "end": 12456, "idx": 23}, {"begin": 12457, "end": 12934, "idx": 24}, {"begin": 12949, "end": 13132, "idx": 25}, {"begin": 13157, "end": 13874, "idx": 26}, {"begin": 13895, "end": 13996, "idx": 27}, {"begin": 13997, "end": 14195, "idx": 28}, {"begin": 14196, "end": 14481, "idx": 29}, {"begin": 14482, "end": 15097, "idx": 30}, {"begin": 15098, "end": 15853, "idx": 31}, {"begin": 15854, "end": 15911, "idx": 32}, {"begin": 15912, "end": 15985, "idx": 33}, {"begin": 16010, "end": 16580, "idx": 34}, {"begin": 16597, "end": 17114, "idx": 35}, {"begin": 17115, "end": 17460, "idx": 36}, {"begin": 17461, "end": 18033, "idx": 37}, {"begin": 18034, "end": 18608, "idx": 38}, {"begin": 18622, "end": 19008, "idx": 39}, {"begin": 19009, "end": 19492, "idx": 40}, {"begin": 19493, "end": 19904, "idx": 41}, {"begin": 19905, "end": 20286, "idx": 42}, {"begin": 20287, "end": 20833, "idx": 43}, {"begin": 20834, "end": 21666, "idx": 44}, {"begin": 21667, "end": 21942, "idx": 45}, {"begin": 21943, "end": 22398, "idx": 46}, {"begin": 22399, "end": 22762, "idx": 47}, {"begin": 22795, "end": 23406, "idx": 48}, {"begin": 23426, "end": 23687, "idx": 49}, {"begin": 23688, "end": 24222, "idx": 50}, {"begin": 24223, "end": 24405, "idx": 51}, {"begin": 24406, "end": 24608, "idx": 52}, {"begin": 24609, "end": 24819, "idx": 53}, {"begin": 24820, "end": 25202, "idx": 54}, {"begin": 25238, "end": 25835, "idx": 55}, {"begin": 25867, "end": 26225, "idx": 56}, {"begin": 26226, "end": 26545, "idx": 57}, {"begin": 26546, "end": 26843, "idx": 58}, {"begin": 26844, "end": 26929, "idx": 59}, {"begin": 26930, "end": 27164, "idx": 60}, {"begin": 27165, "end": 27498, "idx": 61}, {"begin": 27499, "end": 27865, "idx": 62}, {"begin": 27866, "end": 28197, "idx": 63}, {"begin": 28198, "end": 28383, "idx": 64}, {"begin": 28417, "end": 29120, "idx": 65}, {"begin": 29121, "end": 29408, "idx": 66}, {"begin": 29432, "end": 29443, "idx": 67}, {"begin": 29460, "end": 30130, "idx": 68}, {"begin": 30131, "end": 30553, "idx": 69}, {"begin": 30554, "end": 31069, "idx": 70}, {"begin": 31070, "end": 31359, "idx": 71}, {"begin": 31374, "end": 31933, "idx": 72}], "SectionHeader": [{"begin": 0, "end": 1011, "idx": 0}], "SectionReference": [{"begin": 32347, "end": 39730, "idx": 0}], "Sentence": [{"begin": 82, "end": 225, "idx": 0}, {"begin": 226, "end": 342, "idx": 1}, {"begin": 343, "end": 455, "idx": 2}, {"begin": 456, "end": 532, "idx": 3}, {"begin": 533, "end": 787, "idx": 4}, {"begin": 788, "end": 867, "idx": 5}, {"begin": 868, "end": 1011, "idx": 6}, {"begin": 1029, "end": 1155, "idx": 7}, {"begin": 1156, "end": 1246, "idx": 8}, {"begin": 1247, "end": 1351, "idx": 9}, {"begin": 1352, "end": 1531, "idx": 10}, {"begin": 1532, "end": 1668, "idx": 11}, {"begin": 1669, "end": 1671, "idx": 12}, {"begin": 1672, "end": 1804, "idx": 13}, {"begin": 1805, "end": 1812, "idx": 14}, {"begin": 1813, "end": 1841, "idx": 15}, {"begin": 1842, "end": 1895, "idx": 16}, {"begin": 1896, "end": 1898, "idx": 17}, {"begin": 1899, "end": 1904, "idx": 18}, {"begin": 1905, "end": 2000, "idx": 19}, {"begin": 2001, "end": 2008, "idx": 20}, {"begin": 2009, "end": 2064, "idx": 21}, {"begin": 2065, "end": 2120, "idx": 22}, {"begin": 2121, "end": 2225, "idx": 23}, {"begin": 2226, "end": 2334, "idx": 24}, {"begin": 2335, "end": 2463, "idx": 25}, {"begin": 2464, "end": 2582, "idx": 26}, {"begin": 2583, "end": 2696, "idx": 27}, {"begin": 2697, "end": 2938, "idx": 28}, {"begin": 2939, "end": 3059, "idx": 29}, {"begin": 3060, "end": 3292, "idx": 30}, {"begin": 3293, "end": 3342, "idx": 31}, {"begin": 3343, "end": 3505, "idx": 32}, {"begin": 3506, "end": 3714, "idx": 33}, {"begin": 3715, "end": 3839, "idx": 34}, {"begin": 3840, "end": 4037, "idx": 35}, {"begin": 4038, "end": 4240, "idx": 36}, {"begin": 4241, "end": 4363, "idx": 37}, {"begin": 4364, "end": 4460, "idx": 38}, {"begin": 4461, "end": 4579, "idx": 39}, {"begin": 4580, "end": 4708, "idx": 40}, {"begin": 4709, "end": 4936, "idx": 41}, {"begin": 4937, "end": 5124, "idx": 42}, {"begin": 5125, "end": 5235, "idx": 43}, {"begin": 5236, "end": 5361, "idx": 44}, {"begin": 5362, "end": 5479, "idx": 45}, {"begin": 5480, "end": 5638, "idx": 46}, {"begin": 5639, "end": 5692, "idx": 47}, {"begin": 5709, "end": 5928, "idx": 48}, {"begin": 5929, "end": 6157, "idx": 49}, {"begin": 6158, "end": 6361, "idx": 50}, {"begin": 6362, "end": 6539, "idx": 51}, {"begin": 6540, "end": 6674, "idx": 52}, {"begin": 6675, "end": 6825, "idx": 53}, {"begin": 6826, "end": 6906, "idx": 54}, {"begin": 6907, "end": 7072, "idx": 55}, {"begin": 7073, "end": 7140, "idx": 56}, {"begin": 7141, "end": 7493, "idx": 57}, {"begin": 7494, "end": 7747, "idx": 58}, {"begin": 7748, "end": 7886, "idx": 59}, {"begin": 7887, "end": 8024, "idx": 60}, {"begin": 8025, "end": 8186, "idx": 61}, {"begin": 8187, "end": 8341, "idx": 62}, {"begin": 8342, "end": 8588, "idx": 63}, {"begin": 8589, "end": 8747, "idx": 64}, {"begin": 8748, "end": 8829, "idx": 65}, {"begin": 8830, "end": 8947, "idx": 66}, {"begin": 8948, "end": 9131, "idx": 67}, {"begin": 9132, "end": 9367, "idx": 68}, {"begin": 9368, "end": 9560, "idx": 69}, {"begin": 9561, "end": 9764, "idx": 70}, {"begin": 9765, "end": 9827, "idx": 71}, {"begin": 9828, "end": 9950, "idx": 72}, {"begin": 9951, "end": 10058, "idx": 73}, {"begin": 10059, "end": 10182, "idx": 74}, {"begin": 10204, "end": 10363, "idx": 75}, {"begin": 10364, "end": 10555, "idx": 76}, {"begin": 10577, "end": 10714, "idx": 77}, {"begin": 10715, "end": 10813, "idx": 78}, {"begin": 10814, "end": 10901, "idx": 79}, {"begin": 10902, "end": 11127, "idx": 80}, {"begin": 11128, "end": 11318, "idx": 81}, {"begin": 11319, "end": 11383, "idx": 82}, {"begin": 11384, "end": 11506, "idx": 83}, {"begin": 11507, "end": 11574, "idx": 84}, {"begin": 11575, "end": 11703, "idx": 85}, {"begin": 11704, "end": 11822, "idx": 86}, {"begin": 11823, "end": 11895, "idx": 87}, {"begin": 11896, "end": 12055, "idx": 88}, {"begin": 12056, "end": 12227, "idx": 89}, {"begin": 12228, "end": 12456, "idx": 90}, {"begin": 12457, "end": 12621, "idx": 91}, {"begin": 12622, "end": 12758, "idx": 92}, {"begin": 12759, "end": 12824, "idx": 93}, {"begin": 12825, "end": 12934, "idx": 94}, {"begin": 12949, "end": 13132, "idx": 95}, {"begin": 13157, "end": 13262, "idx": 96}, {"begin": 13263, "end": 13363, "idx": 97}, {"begin": 13364, "end": 13416, "idx": 98}, {"begin": 13417, "end": 13528, "idx": 99}, {"begin": 13529, "end": 13709, "idx": 100}, {"begin": 13710, "end": 13874, "idx": 101}, {"begin": 13895, "end": 13996, "idx": 102}, {"begin": 13997, "end": 14085, "idx": 103}, {"begin": 14086, "end": 14140, "idx": 104}, {"begin": 14141, "end": 14195, "idx": 105}, {"begin": 14196, "end": 14324, "idx": 106}, {"begin": 14325, "end": 14481, "idx": 107}, {"begin": 14482, "end": 14617, "idx": 108}, {"begin": 14618, "end": 14929, "idx": 109}, {"begin": 14930, "end": 15097, "idx": 110}, {"begin": 15098, "end": 15195, "idx": 111}, {"begin": 15196, "end": 15365, "idx": 112}, {"begin": 15366, "end": 15541, "idx": 113}, {"begin": 15542, "end": 15682, "idx": 114}, {"begin": 15683, "end": 15853, "idx": 115}, {"begin": 15854, "end": 15911, "idx": 116}, {"begin": 15912, "end": 15985, "idx": 117}, {"begin": 16010, "end": 16100, "idx": 118}, {"begin": 16101, "end": 16220, "idx": 119}, {"begin": 16221, "end": 16409, "idx": 120}, {"begin": 16410, "end": 16580, "idx": 121}, {"begin": 16597, "end": 16656, "idx": 122}, {"begin": 16657, "end": 16703, "idx": 123}, {"begin": 16704, "end": 16829, "idx": 124}, {"begin": 16830, "end": 16972, "idx": 125}, {"begin": 16973, "end": 17114, "idx": 126}, {"begin": 17115, "end": 17179, "idx": 127}, {"begin": 17180, "end": 17354, "idx": 128}, {"begin": 17355, "end": 17460, "idx": 129}, {"begin": 17461, "end": 17564, "idx": 130}, {"begin": 17565, "end": 17681, "idx": 131}, {"begin": 17682, "end": 17754, "idx": 132}, {"begin": 17755, "end": 17883, "idx": 133}, {"begin": 17884, "end": 18033, "idx": 134}, {"begin": 18034, "end": 18174, "idx": 135}, {"begin": 18175, "end": 18251, "idx": 136}, {"begin": 18252, "end": 18333, "idx": 137}, {"begin": 18334, "end": 18406, "idx": 138}, {"begin": 18407, "end": 18552, "idx": 139}, {"begin": 18553, "end": 18608, "idx": 140}, {"begin": 18622, "end": 18723, "idx": 141}, {"begin": 18724, "end": 18817, "idx": 142}, {"begin": 18818, "end": 18873, "idx": 143}, {"begin": 18874, "end": 19008, "idx": 144}, {"begin": 19009, "end": 19224, "idx": 145}, {"begin": 19225, "end": 19492, "idx": 146}, {"begin": 19493, "end": 19681, "idx": 147}, {"begin": 19682, "end": 19762, "idx": 148}, {"begin": 19763, "end": 19904, "idx": 149}, {"begin": 19905, "end": 20066, "idx": 150}, {"begin": 20067, "end": 20286, "idx": 151}, {"begin": 20287, "end": 20479, "idx": 152}, {"begin": 20480, "end": 20614, "idx": 153}, {"begin": 20615, "end": 20833, "idx": 154}, {"begin": 20834, "end": 20998, "idx": 155}, {"begin": 20999, "end": 21326, "idx": 156}, {"begin": 21327, "end": 21514, "idx": 157}, {"begin": 21515, "end": 21666, "idx": 158}, {"begin": 21667, "end": 21811, "idx": 159}, {"begin": 21812, "end": 21942, "idx": 160}, {"begin": 21943, "end": 22075, "idx": 161}, {"begin": 22076, "end": 22153, "idx": 162}, {"begin": 22154, "end": 22301, "idx": 163}, {"begin": 22302, "end": 22398, "idx": 164}, {"begin": 22399, "end": 22600, "idx": 165}, {"begin": 22601, "end": 22762, "idx": 166}, {"begin": 22795, "end": 22859, "idx": 167}, {"begin": 22860, "end": 23035, "idx": 168}, {"begin": 23036, "end": 23242, "idx": 169}, {"begin": 23243, "end": 23406, "idx": 170}, {"begin": 23426, "end": 23583, "idx": 171}, {"begin": 23584, "end": 23671, "idx": 172}, {"begin": 23672, "end": 23687, "idx": 173}, {"begin": 23688, "end": 23814, "idx": 174}, {"begin": 23815, "end": 24192, "idx": 175}, {"begin": 24193, "end": 24222, "idx": 176}, {"begin": 24223, "end": 24405, "idx": 177}, {"begin": 24406, "end": 24608, "idx": 178}, {"begin": 24609, "end": 24819, "idx": 179}, {"begin": 24820, "end": 25006, "idx": 180}, {"begin": 25007, "end": 25202, "idx": 181}, {"begin": 25238, "end": 25389, "idx": 182}, {"begin": 25390, "end": 25509, "idx": 183}, {"begin": 25510, "end": 25691, "idx": 184}, {"begin": 25692, "end": 25835, "idx": 185}, {"begin": 25867, "end": 25933, "idx": 186}, {"begin": 25934, "end": 25974, "idx": 187}, {"begin": 25975, "end": 26085, "idx": 188}, {"begin": 26086, "end": 26225, "idx": 189}, {"begin": 26226, "end": 26288, "idx": 190}, {"begin": 26289, "end": 26336, "idx": 191}, {"begin": 26337, "end": 26545, "idx": 192}, {"begin": 26546, "end": 26843, "idx": 193}, {"begin": 26844, "end": 26929, "idx": 194}, {"begin": 26930, "end": 26997, "idx": 195}, {"begin": 26998, "end": 27164, "idx": 196}, {"begin": 27165, "end": 27267, "idx": 197}, {"begin": 27268, "end": 27498, "idx": 198}, {"begin": 27499, "end": 27704, "idx": 199}, {"begin": 27705, "end": 27774, "idx": 200}, {"begin": 27775, "end": 27865, "idx": 201}, {"begin": 27866, "end": 27958, "idx": 202}, {"begin": 27959, "end": 28088, "idx": 203}, {"begin": 28089, "end": 28197, "idx": 204}, {"begin": 28198, "end": 28383, "idx": 205}, {"begin": 28417, "end": 28522, "idx": 206}, {"begin": 28523, "end": 28611, "idx": 207}, {"begin": 28612, "end": 28744, "idx": 208}, {"begin": 28745, "end": 28878, "idx": 209}, {"begin": 28879, "end": 28975, "idx": 210}, {"begin": 28976, "end": 29120, "idx": 211}, {"begin": 29121, "end": 29306, "idx": 212}, {"begin": 29307, "end": 29408, "idx": 213}, {"begin": 29432, "end": 29443, "idx": 214}, {"begin": 29460, "end": 29752, "idx": 215}, {"begin": 29753, "end": 29828, "idx": 216}, {"begin": 29829, "end": 29955, "idx": 217}, {"begin": 29956, "end": 30130, "idx": 218}, {"begin": 30131, "end": 30424, "idx": 219}, {"begin": 30425, "end": 30553, "idx": 220}, {"begin": 30554, "end": 30649, "idx": 221}, {"begin": 30650, "end": 30827, "idx": 222}, {"begin": 30828, "end": 31069, "idx": 223}, {"begin": 31070, "end": 31200, "idx": 224}, {"begin": 31201, "end": 31243, "idx": 225}, {"begin": 31244, "end": 31359, "idx": 226}, {"begin": 31374, "end": 31476, "idx": 227}, {"begin": 31477, "end": 31580, "idx": 228}, {"begin": 31581, "end": 31772, "idx": 229}, {"begin": 31773, "end": 31933, "idx": 230}], "ReferenceToFigure": [{"begin": 2282, "end": 2283, "idx": 0}, {"begin": 3300, "end": 3301, "idx": 1}, {"begin": 29442, "end": 29443, "target": "#fig_2", "idx": 2}], "Div": [{"begin": 82, "end": 1011, "idx": 0}, {"begin": 1014, "end": 5692, "idx": 1}, {"begin": 5694, "end": 10182, "idx": 2}, {"begin": 10184, "end": 10555, "idx": 3}, {"begin": 10557, "end": 12934, "idx": 4}, {"begin": 12936, "end": 13132, "idx": 5}, {"begin": 13134, "end": 13874, "idx": 6}, {"begin": 13876, "end": 15985, "idx": 7}, {"begin": 15987, "end": 16580, "idx": 8}, {"begin": 16582, "end": 18608, "idx": 9}, {"begin": 18610, "end": 22762, "idx": 10}, {"begin": 22764, "end": 22774, "idx": 11}, {"begin": 22776, "end": 23406, "idx": 12}, {"begin": 23408, "end": 25202, "idx": 13}, {"begin": 25204, "end": 25835, "idx": 14}, {"begin": 25837, "end": 28383, "idx": 15}, {"begin": 28385, "end": 29408, "idx": 16}, {"begin": 29410, "end": 29443, "idx": 17}, {"begin": 29445, "end": 31359, "idx": 18}, {"begin": 31361, "end": 31933, "idx": 19}], "SectionMain": [{"begin": 1011, "end": 31933, "idx": 0}]}}