{"text": "Online Knowledge Distillation via Multi-branch Diversity Enhancement\n\nAbstract:\nKnowledge distillation is an effective method to transfer the knowledge from the cumbersome teacher model to the lightweight student model. Online knowledge distillation uses the ensemble prediction results of multiple student models as soft targets to train each student model. However, the homogenization problem will lead to difficulty in further improving model performance. In this work, we propose a new distillation method to enhance the diversity among multiple student models. We introduce Feature Fusion Module (FFM), which improves the performance of the attention mechanism in the network by integrating rich semantic information contained in the last block of multiple student models. Furthermore, we use the Classifier Diversification(CD) loss function to strengthen the differences between the student models and deliver a better ensemble result. Extensive experiments proved that our method significantly enhances the diversity among student models and brings better distillation performance. We evaluate our method on three image classification datasets: CIFAR-10/100 and CINIC-10. The results show that our method achieves state-of-the-art performance on these datasets.\n\nMain:\n\n\n\n1 Introduction\nKnowledge distillation [1], as one of the key methods in model compression, the distillation process usually starts by training a high-capacity teacher model. A student model will actively learn the soft label or feature representation [11] generated by teacher model. The purpose of distillation is to train a more compact and accurate student model through the knowledge transferred from the teacher network. In recent years, the convolutional neural network has made very impressive achievements in many vision tasks [2] [3] [4] [5] [6]. But it requires high cost of computation and memory in inference, making the deployment of CNN difficult in resource-limited mobile devices. Knowledge distillation was proposed to solve these problems. In the meantime, other types of model compression techniques such as network pruning [7] [8] [9] and network quantization [10] [11] [12] have also been proposed.\nTraditional knowledge distillation [13] [14] [15] is a two-stage process. We should first train a teacher model, then get a student model by distilling the teacher model. Although this approach can obtain a higher quality student model by aligning the predictions of the teacher model, it is still a complex approach that requires more computational resources. Online knowledge distillation [16] successfully simplifies the training process by reducing the need for pretrained teacher model. Existing online knowledge distillation methods [17] [18] [19] learns not only from the ground truth labels but also from the ensemble results of multiple branches. We refer to each branch as a separate student model. This method can improve the performance of models with arbitrary capacity and obtain better generalization ability.\nAveraging the predictions of each branch is a very simple way to get the ensemble results. This approach tend to cause branches to quickly homogenize, hurting the distillation performance [20, 21]. However, [17, 19] found that the accuracy of the final result improves if different weights were applied to each peer. In OKDDip [19], this paper introduces the concept of two-level distillation method, builds diverse peers by applying a self-attention mechanism [22]. Self-attention in OKDDip needs two fully connected layers separately as transformation matrices to obtain importance scores, which increases the complexity of time and space. In ONE [17], the gate module uses features from the second block of its backbone network as input to generate the importance score of the corresponding branch. However, this feature contains little semantic information which leads to limited improvement in image classification tasks.\nIn this work, we propose a new distillation strategy to enhance the diversity among branches which can significantly improve the effectiveness of online knowledge distillation. By introducing Feature Fusion Module(FFM) to fuse the features of the last layer of multiple branches, we make full use of the diversity of semantic information contained in multiple branches to improve the attention performance [23]. Since a large diversity of branches can help ensemble-based online KD methods achieve better results, inspired by [24], we propose the CD loss to prevent homogeneity between branches by explicitly forcing their features to be learned orthogonally. This loss function serves as a regularization term to prevent group performance degradation caused by homogenization. Unlike other methods in which all branches converge into similar one. By using our method, each branch keeps their uniqueness. Based on [19], a two-level knowledge distillation framework is adopted. We build a network with m branches, including m-1 auxiliary branches and a group leader. The knowledge generated by these diverse peers will be distilled into the group leader, and the remaining peers will be discarded. In order to reduce the consumption of computing resources, we only keep the group leader as the final deployment model.\n\nOur contributions of this work can be summarized as follows:\n-We propose Feature Fusion Module(FFM) which can better fuse diverse semantic information from multiple branches and improves the performance of the attention mechanism. -We introduce the Classifier Diversification(CD) loss function. As a regularization term, it effectively reduces the homogenization among branches, improves the accuracy of ensemble results and leads to a better student model. -The extensive experiments and analysis verify that our proposed method can effectively enhance branch diversity and train better student models on different image classification datasets: CIFAR-10/100 [25] and CINIC-10 [26].\n2 Related Work\n\n2.1 Knowledge Distillation\nKnowledge distillation [1] has been widely used in many scenarios involving deep learning algorithms, such as virtual experiments in VR, autonomous driving and so on. It provides an useful method that allows the complex teacher model to be compressed to a more lightweight student model by aligning the student model with the teacher model. When training the target model, this method takes advantage of the extra supervisory signal provided by the soft output of the teacher model. there are also many works [13] [14] [15] 27] made explorations based on this idea. In FitNets [13], the student model attempts to mimic the intermediate representation directly from the teacher network. Attention Transfer [14] transfers an attention map of a teacher model into a student and [28] proposes a similar method using mean weights. In flow-based knowledge distillation [15], the student is encouraged to mimic the teacher's flow matrices, which are derived from the inner product between feature maps in two layers.  [29] saves the computation by using singular value decomposition to compress feature maps. There are also innovative works exploring alternatives to the usual studentteacher training paradigm. Generative Adversarial Learning [30] is proposed to generate realistic-looking images from random noise using neural networks. The ideas in the adversarial network are applied to knowledge distillation [31] [32] [33].\nIn MEAL [31], the generators were employed to synthesize student features and the discriminator was used to discriminate between teacher and student outputs for the same image. In [33], this work adopts adversarial method to discover adversarial samples supporting decision boundary. With the supervision of discriminator, student can better mimic the behavior of teacher model. In addtion, many works [34] [35] [36] [37] have also explored the relationship between the samples.  [34] propose that similar input pairs in the teacher network tends to produce similar activations in the student network. A few recent papers [37] [38] [39] have shown that models of the same architecture can also be distilled. Snapshot distillation [39] uses the cyclic learning rate policy, in which the last snapshot of each cycle is used as the teacher for all iterations in the next cycle, and the teacher is used to provide supervision signal.\n\n2.2 Online Knowledge Distillation\nTraditional knowledge distillation methods have two stages that require a pretrained teacher model to provide soft output for distillation. Different from above complex training methods, several works adopts collaboratively training strategy. Simultaneously training a group of student models based on each other's predictions is an effective single-stage distillation method, which can be a good substitute for pretrained teacher models. Some methods [16, 18] solve this problem. The online knowledge distillation was completed through mutual instruction between two peers [16]. However, the lack of a high-capacity teacher model will decrease the distillation efficiency. In [17, 40], each student model learns from the average of the predictions generated by a group of students and obtains a better teacher model effect. ONE found that simply averaging the results would reduce the diversity among students, affecting the training of branch-based models. ONE generates the importance score corresponding to each student through the gate module. By assigning different importance score to each branch, a high-capacity teacher model is constructed, which can leverage knowledge from training data more effectively. OKDDip [19] proposed the concept of two-level distillation. The ensemble results of auxiliary peer networks were distilled into the group leader. The diversified peer network plays a key role in improving distillation performance.\n\n3 Online Knowledge Distillation via Multi-branch Diversity Enhancement\nThe architecture of our proposed method is illustrated in Fig. 1. Our method is based on a two-level distillation procedure. The network has m \u2212 1 auxiliary branches and one group leader. In the first level distillation, each branch learns not only from the ground truth label but also from the weighted ensemble targets obtained through Feature Fusion Module. These results play the role of a teacher model to teach each branch. In the second level distillation, the knowledge learned by the group is further distilled into the group leader. To save computing resources, we use the group leader for the final deployment.\n\n3.1 Formulation\nIn knowledge distillation, the student uses the output of the teacher as an additional supervisory signal for network training. Given a dataset of N training samples D = {(x i , y i )} N i , where y i \u2208 {1, 2, ..., C}. Here, x i is the i th training sample, y i is the corresponding ground truth label and C is the total number of image classes. Take the training sample as the input of the teacher network, we will get the output logits t i = (t 1 i , ..., t c i ). The logits vector after softmax will get the i th probability value q j i ,q j i = exp(t i /T ) C j=1 exp(t j i /T )\nFig. 1. The overall framework of our proposed method. Each branch and shared lowlevel layers constitute an individual student model. This is a two-level distillation process. For the first-level distillation, each auxiliary branch learns from their ensemble targets. The second-level distillation transfers the knowledge learned by the group to the group leader. L cd denotes the proposed classifier diversification loss. L kl denotes the KL divergence loss. We omit the cross entropy loss Lce for simplicity. We will introduce these loss functions in detail in the third section. Best viewed in color.\nwhere T is the temperature parameter. An increase in the parameter T will make the probability distribution smoother. When training teachers, T is set to 1. When distilling knowledge from the teacher model to the student model, T is usually set to 3.\nIn order to train a multi-class image classification model, our goal is to minimize the cross entropy between the predicted class probabilities q i and the corresponding ground truth label distribution y i ,L ce = H(y i , q i ) (2)\nwhere H(p, q) = \u2212 i p i logq i . Knowledge transfer is achieved by aligning the probability distribution q generated by the student with the target distribution t. The temperature parameter T should be the same for teacher and student networks. Specifically, we use KL(Kullback-Leibler) Divergence as the loss function:L kl = KL(t, q) = i,j t ij log t ij q ij\nFig. 2. We take the case of three auxiliary branches as an example. Feature map si from each branch will be concatenated together, and then fed into the center convolution block. The center block is made of several convolutional layers, batch normalization and ReLU activation function. The last layer of this block is the fully connected layer. This block is designed to fuse the semantic representation from multiple branches.\nCompared with other methods, more semantic information can effectively improve the performance of the module. The final target is obtained by the weighted sum of logits ti of all auxiliary branches.\n\n3.2 Feature Fusion Module\nAn overview of the Feature Fusion Module is described in Fig. 2. Features from a single layer contain less information than features from multiple layers. Many approaches [41] [42] [43] [44] try to take advantage of more diversed features to get better model performance. We take the features of the last block from multiple branches as the input of the Feature Fusion Module. Since deeper layers in the network lead to richer semantic information, this approach can enrich features with highlevel semantic information. Our experiment proves that the weights generated from this method can achieve better results.t e = m\u22121 i=1 f i (s 1 , s 2 , ..., s m\u22121 ) \u2022 t i\nwhere f (\u2022) denotes the function of center block in the FFM. This function will output the corresponding importance score for each branch and also satisfy m\u22121 i=1 f i (s 1 , s 2 , ..., s m\u22121 ) = 1. s i denotes the feature map of the last block from the i th branch. t i denotes the logits from the i th branch. t e denotes the weighted ensemble target.\n\n3.3 Classifier Diversification Loss\nThe diversity has an important influence on the accuracy of the final ensemble results. For better results, we expect peer classifiers to classify samples based on different viewpoints. So we restrict the weight of classifiers, force them to be diversed. We use Compute the predictions of all branches {\u03b8 i } m i=1 with Eq. ( 1); 3:\nGet each auxiliary branch's weight through FFM; 4:\nCompute the target logits with Eq. ( 4); 5:\nCompute the CD loss L cd with Eq. ( 5); 6:\nCompute the distillation loss L kl1 and L kl2 with Eq. (3); 7:\nCompute the total loss function with Eq. ( 8L cd = m\u22121 i=1 m j=i+1 L i,j cd = m\u22121 i=1 m j=i+1 |W T i W j |\nwhere W i is the fully connected layers' weights of peer classifiers. If the weights of fully connected layers between peers get similar, it means there are more homogenization among them. This loss function acts as a regularization term to prevent homogenization. This will force each classifier to learn different features under this limit. Experiments show that this loss function improves the diversity of peer classifiers and improves the distillation efficiency. We will explain in detail in the ablation study.\n\n3.4 Loss function and algorithm\nTo get a better understanding of our method, we describe the process in Algorithm 1. Our distillation method is a two-level procedure. For the first level distillation, each auxiliary branch learns the knowledge distilled from the soft targets t e generated by FFM. The distillation loss of all auxiliary branches isL kl1 = m\u22121 i=1 KL(t e , q i )\nIn the second-level distillation, the knowledge learned by the group will be distilled to the group leader. Same as OKDDip, we average the predictions of all branches to get t avg . The distillation of the group leader isL kl2 = KL(t avg , q gl )\nTo sum up, the loss function of the whole neural network is:L = m i=1 L i ce + \u03b1T 2 L kl1 + \u03b2T 2 L kl2 + \u03b3L cd\nwhere \u03b1, \u03b2 and \u03b3 are the balance parameter to balance the loss term. The first term is the sum of all branches' cross entropy loss.\n\n4 Experiment\nIn this section, we evaluate our method on five popular neural networks (ResNet-50, ResNet-110 [4], ResNext-50(32x4d) [45], Xception [46], ShuffleNet V2-1.0 [47]) and three image classification benchmark dataset: CIFAR-10/100 [25] and CINIC-10 [26]. We also compare our method with closely related works, including ONE and OKDDip. In addition to the classification ability, we also conduct several ablation studies on the feature fusion module and classifier diversification loss, of which the result indicates that the proposed method has better generalization performance compared with other methods. All the reported results are averaged based on three runs.\n\n4.1 Datasets and Settings\nDatasets. There are three datasets in our experiments. CIFAR-10 and CIFAR-100 [25] both contains 50,000 training images and 10,000 test images, which come from 10/100 classes. CINIC-10 consists of images from both CIFAR and Ima-geNet [48]. It has 270,000 images and 10 classes. The size in CINIC-10 is the same as in CIFAR. It contains 90,000 training images and 90,000 test images, all at a resolution of 32 x 32. The top-1 classification error rate are reported. Settings. We implement all the networks and training procedures in Pytorch [49]. We conduct all experiments on an NVIDIA GeFore RTX 2080Ti GPU. For all datasets, we follow the experimental setting of [19]. For data augmentation, we apply standard random crop and horizontal flip to all images. We use SGD [50] as the optimizer with Nesterov momentum 0.9 and weight decay 5e \u2212 4 during training. We set mini-batch size to 128. We use the standard learning schedule. The learning rate starts from 0.1 and divided by 10 at 150 and 225 iterations, for a total of 300 iterations. We set m=4, means that there are three auxiliary branches and a group leader. We separate the last two blocks of each backbone network for CIFAR-10/100 and CINIC-10. We empirically set T =3 to generate soft predictions. We set \u03b1=1, \u03b2=2 and \u03b3=5e \u2212 8 to balance the loss term in Equation 6.\nWe compare our method with several online knowledge distillation methods. In OKDDip, it has two network settings: branch-based and network-based. The branch-based approach refers to student models sharing multiple convolutional layers, separated from each other after a specified layer. The networkbased method means that all student models do not share any convolutional layers, and each student is an independent model. The principles of these two approaches are close, so the branch-based method can well validate the effectiveness of our method. In all the experiments, we use branch-based setting for comparison. Baseline means the original model trained on the dataset without any modification.\n\n4.2 Results on CIFAR-10/100\nTable 1 and Table 2 compares the top-1 classification error rate on CIFAR-10 and CIFAR-100 based on five different backbone networks. The result generated by ONE is the averaged accuracy of all branches. The results of OKDDip and ours are the accuracy of the group leader. From these two tables, it clearly shows that our method achieves a lower error rate on the same backbone network. Specifically, our method improves the accuracy of various baseline network by 3% to 4% on CIFAR-100. The network with higher capacity generally benefits more from our method. Our methods improves the state-of-the-art methods by 0.61%, 0.49% and 0.35% with ResNet-32, ResNet-110 and ResNext-50, respectively. These results showing that our method is more effective than existing methods. When the baseline model has lower capacity, our method can also slightly improve the accuracy compared with other methods.\nIn Table 3, we compare our method with another two-level distillation method OKDDip on three backbone networks. The results of compared methods are the averaged ensemble results of three branches on three backbone networks in the second-level distillation. Since the ensemble results act as a teacher to teach the group leader, a more accurate result can train a better group leader. It is also seen that our method improves the OKDDip method by 0.59%, 0.57% and 0.34% Diversity Measurement. We use the interrater agreement in [21] as the metric to measure the branch diversity. This method is defined as:s = 1 \u2212 1 T m k=1 \u03c1(x k )(T \u2212 \u03c1(x k )) m(T \u2212 1)p(1 \u2212 p) ()\nwhere T is the total number of classifiers, \u03c1(x k ) is the number of classifiers that classify x correctly, p is the average accuracy of individual classifiers and m is the total number of test samples. OKDDip and our method obtained 0.633 and 0.549 respectively (CIFAR-100 & ResNet-32). The smaller the s measurement, the larger the diversity. From this results, we can see that our method actually increase the branch diversity.\n\n4.3 Results on CINIC-10\nCINIC-10 dataset is larger and more challenging than CIFAR-10 but not as difficult as ImageNet. We adopt the same data preprocessing as those of CIFAR-10/100 experiments.  4 compares the top-1 classification error rates based on three backbone networks trained by different methods. From this table, we observed that our method outperforms baseline by 1.68%, 2.13% and 1.63% on ResNet-32, ResNet-110 and ResNext-50 respectively. Our method also improves the state-of-theart method by 0.13%, 0.35% and 0.18% on three backbone networks. We can find that the improvement in generalization performance is very limited on this dataset. High-capacity networks tend to perform better. But the accuracy of ResNext-50 is slightly lower than ResNet-110 although its baseline performance is better.\nIn Table 5, we compare our method with OKDDip. We can find that our method outperforms OKDDip by 0.11%, 0.37% and 0.23% on ResNet-32, ResNet-110 and ResNext-50. While it can be observed that all the methods seem not to increase as much as that in CIFAR-100 experiments. We guess it is because the homogenization problem becomes serious when we conduct experiments on easier datasets. We still need to explore solutions to solve the homogenization problem in the future. In this section, we conduct various ablation studies to validate the effectiveness of our proposed FFM and CD loss. We use ResNet-32 on the CIFAR-100 dataset to show the benefit of our components. We also compare our FFM with other knowledge distillation methods, including gate module in ONE and selfattention(SA) mechanism in OKDDip.\n\n4.4 Ablation Study\nIn Table 6, we report the top-1 and top-5 error rates of different methods. The remaining experimental settings are consistent with previous experiment. We carefully conducted six experiments on the network components. We compared the performance of three attention modules in the same experimental settings. When FFM is used only, the performance of our method has slightly exceeded other methods. This shows that FFM makes the student network learns more knowledge during the distillation. Compared with gate module in ONE, our method improves the top-1 error rates by 0.36% and top-5 error rates by 0.2%. This result proves that our method effectively utilizes the rich semantic information of multiple branches. When we combine different attention mechanism with classifier diversification loss, our results clearly show that our method surpasses other methods. The combination of FFM and CD loss has more obvious improvement. Compared with the independent FFM, the combination improves the top-1 error rates by 0.56% and the top-5 error rates by 0.08%. Our method clearly enhances the diversity among branches and improves the generalization ability of the student model. From this table, we observe that CD loss really plays the most important role in the overall improvements.\nFig. 3 demonstrates how the performance of our method is affected by the choice of hyperparameter \u03b3 of the CD loss. We plot the top-1 accuracy on the CIFAR-100 for ResNet-32 group leader trained with \u03b3 ranging from 1e \u2212 10 to 1e\u22124. In this figure, the dash line indicates the mean accuracy of other methods. We can find that our method still has robust performance against varying \u03b3 values. The green dot indicates the parameter we are using. We should note that the choice of parameters will affect the optimization process. If the parameter is too large, this will lead to too much diversity among the branches, and eventually will not converge. If the parameter is too small, the CD loss function will be difficult to play the role of regularization. In that case, the value of this loss function will be very small, making the loss function ineffective. This figure shows that CD loss has a significant effect on distillation performance within a proper range.\n\n5 Conclusion\nIn online knowledge distillation, diversity is always an important and challenging issue. In this work, we proposed the Feature Fusion Module and Classifier Diversification loss, which effectively enhances the diversity among multiple branches. By increasing branch diversity and using more diversed semantic information, we have significantly improved the performance of online knowledge distillation. Experiments show that our method achieves the state-of-the-art performance among several popular datasets without additional training and inference costs.\n\nFootnotes:\n\nReferences:\n\n- Hinton, G., Vinyals, O., Dean, J.: Distilling the knowledge in a neural network. arXiv preprint arXiv:1503.02531 (2015)- Krizhevsky, A., Sutskever, I., Hinton, G.E.: Imagenet classification with deep convolutional neural networks. In: Advances in Neural Information Processing Systems. (2012) 1097-1105\n\n- Simonyan, K., Zisserman, A.: Very deep convolutional networks for large-scale image recognition. arXiv preprint arXiv:1409.1556 (2014)\n\n- He, K., Zhang, X., Ren, S., Sun, J.: Deep residual learning for image recognition. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2016) 770-778\n\n- Long, J., Shelhamer, E., Darrell, T.: Fully convolutional networks for semantic segmentation. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2015) 3431-3440\n\n- Redmon, J., Divvala, S., Girshick, R., Farhadi, A.: You only look once: Unified, real-time object detection. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2016) 779-788\n\n- Han, S., Mao, H., Dally, W.J.: Deep compression: Compressing deep neural net- works with pruning, trained quantization and huffman coding. arXiv preprint arXiv:1510.00149 (2015)\n\n- Lebedev, V., Lempitsky, V.: Fast convnets using group-wise brain damage. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2016) 2554-2564\n\n- Molchanov, P., Tyree, S., Karras, T., Aila, T., Kautz, J.: Pruning convolutional neural networks for resource efficient inference. arXiv preprint arXiv:1611.06440 (2016)\n\n- Rastegari, M., Ordonez, V., Redmon, J., Farhadi, A.: Xnor-net: Imagenet classi- fication using binary convolutional neural networks. In: European conference on computer vision, Springer (2016) 525-542\n\n- Wu, J., Leng, C., Wang, Y., Hu, Q., Cheng, J.: Quantized convolutional neural networks for mobile devices. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2016) 4820-4828\n\n- Wang, K., Liu, Z., Lin, Y., Lin, J., Han, S.: Haq: Hardware-aware automated quantization with mixed precision. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2019) 8612-8620\n\n- Romero, A., Ballas, N., Kahou, S.E., Chassang, A., Gatta, C., Bengio, Y.: Fitnets: Hints for thin deep nets. arXiv preprint arXiv:1412.6550 (2014)\n\n- Zagoruyko, S., Komodakis, N.: Paying more attention to attention: Improving the performance of convolutional neural networks via attention transfer. arXiv preprint arXiv:1612.03928 (2016)\n\n- Yim, J., Joo, D., Bae, J., Kim, J.: A gift from knowledge distillation: Fast opti- mization, network minimization and transfer learning. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2017) 4133-4141\n\n- Zhang, Y., Xiang, T., Hospedales, T.M., Lu, H.: Deep mutual learning. In: Pro- ceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2018) 4320-4328\n\n- Zhu, X., Gong, S., et al.: Knowledge distillation by on-the-fly native ensemble. In: Advances in Neural Information Processing Systems. (2018) 7517-7527\n\n- Anil, R., Pereyra, G., Passos, A., Ormandi, R., Dahl, G.E., Hinton, G.E.: Large scale distributed neural network training through online distillation. arXiv preprint arXiv:1804.03235 (2018)\n\n- Chen, D., Mei, J.P., Wang, C., Feng, Y., Chen, C.: Online knowledge distillation with diverse peers. In: Proceedings of the AAAI Conference on Artificial Intelli- gence. (2020) 3430-3437\n\n- Kuncheva, L.I., Whitaker, C.J.: Measures of diversity in classifier ensembles and their relationship with the ensemble accuracy. Machine learning 51 (2003) 181-207\n\n- Zhou, Z.H.: Ensemble methods: foundations and algorithms. CRC press (2012)\n\n- Zhang, H., Goodfellow, I., Metaxas, D., Odena, A.: Self-attention generative adver- sarial networks. In: International Conference on Machine Learning. (2019) 7354- 7363\n\n- Vaswani, A., Shazeer, N., Parmar, N., Uszkoreit, J., Jones, L., Gomez, A.N., Kaiser, L., Polosukhin, I.: Attention is all you need. In: Advances in Neural Information Processing Systems. (2017) 5998-6008\n\n- Saito, K., Ushiku, Y., Harada, T.: Asymmetric tri-training for unsupervised do- main adaptation. In: International Conference on Machine Learning. Volume 70. (2017) 2988-2997\n\n- Krizhevsky, A., Hinton, G.: Learning multiple layers of features from tiny images. Technical Report (2009)\n\n- Darlow, L.N., Crowley, E.J., Antoniou, A., Storkey, A.J.: Cinic-10 is not imagenet or cifar-10. arXiv preprint arXiv:1810.03505 (2018)\n\n- Ba, J., Caruana, R.: Do deep nets really need to be deep? In: Advances in Neural Information Processing Systems. (2014) 2654-2662\n\n- Yun, S., Park, J., Lee, K., Shin, J.: Regularizing class-wise predictions via self- knowledge distillation. In: Proceedings of the IEEE Conference on Computer Vi- sion and Pattern Recognition. (2020) 13876-13885\n\n- Lee, S.H., Kim, D.H., Song, B.C.: Self-supervised knowledge distillation using sin- gular value decomposition. In: European Conference on Computer Vision, Springer (2018) 339-354\n\n- Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., Courville, A., Bengio, Y.: Generative adversarial nets. In: Advances in Neural Information Processing Systems. (2014) 2672-2680\n\n- Shen, Z., He, Z., Xue, X.: Meal: Multi-model ensemble via adversarial learning. In: Proceedings of the AAAI Conference on Artificial Intelligence. Volume 33. (2019) 4886-4893\n\n- Xu, Z., Hsu, Y.C., Huang, J.: Training shallow and thin networks for acceleration via knowledge distillation with conditional adversarial networks. arXiv preprint arXiv:1709.00513 (2017)\n\n- Heo, B., Lee, M., Yun, S., Choi, J.Y.: Knowledge distillation with adversarial samples supporting decision boundary. In: Proceedings of the AAAI Conference on Artificial Intelligence. Volume 33. (2019) 3771-3778\n\n- Park, W., Kim, D., Lu, Y., Cho, M.: Relational knowledge distillation. In: Pro- ceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2019) 3967-3976\n\n- Peng, B., Jin, X., Liu, J., Li, D., Wu, Y., Liu, Y., Zhou, S., Zhang, Z.: Correlation congruence for knowledge distillation. In: Proceedings of the IEEE International Conference on Computer Vision. (2019) 5007-5016\n\n- Tarvainen, A., Valpola, H.: Mean teachers are better role models: Weight-averaged consistency targets improve semi-supervised deep learning results. In: Advances in Neural Information Processing Systems. (2017) 1195-1204\n\n- Xie, Q., Luong, M.T., Hovy, E., Le, Q.V.: Self-training with noisy student improves imagenet classification. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2020) 10687-10698\n\n- Furlanello, T., Lipton, Z.C., Tschannen, M., Itti, L., Anandkumar, A.: Born again neural networks. arXiv preprint arXiv:1805.04770 (2018)\n\n- Yang, C., Xie, L., Su, C., Yuille, A.L.: Snapshot distillation: Teacher-student opti- mization in one generation. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2019) 2859-2868\n\n- Song, G., Chai, W.: Collaborative learning for deep neural networks. In: Advances in Neural Information Processing Systems. (2018) 1832-1841\n\n- Huang, G., Liu, Z., Van Der Maaten, L., Weinberger, K.Q.: Densely connected convolutional networks. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2017) 4700-4708\n\n- Ronneberger, O., Fischer, P., Brox, T.: U-net: Convolutional networks for biomedi- cal image segmentation. In: International Conference on Medical image computing and computer-assisted intervention, Springer (2015) 234-241\n\n- Li, H., Xiong, P., Fan, H., Sun, J.: Dfanet: Deep feature aggregation for real-time semantic segmentation. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2019) 9522-9531\n\n- Sun, D., Yao, A., Zhou, A., Zhao, H.: Deeply-supervised knowledge synergy. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2019) 6997-7006\n\n- Xie, S., Girshick, R., Doll\u00e1r, P., Tu, Z., He, K.: Aggregated residual transformations for deep neural networks. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2017) 1492-1500\n\n- Chollet, F.: Xception: Deep learning with depthwise separable convolutions. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2017) 1251-1258\n\n- Ma, N., Zhang, X., Zheng, H.T., Sun, J.: Shufflenet v2: Practical guidelines for efficient cnn architecture design. In: European Conference on Computer Vision. (2018) 116-131\n\n- Deng, J., Dong, W., Socher, R., Li, L.J., Li, K., Fei-Fei, L.: Imagenet: A large-scale hierarchical image database. In: Proceeding of the IEEE Conference on Computer Vision and Pattern Recognition, Ieee (2009) 248-255\n\n- Paszke, A., Gross, S., Massa, F., Lerer, A., Bradbury, J., Chanan, G., Killeen, T., Lin, Z., Gimelshein, N., Antiga, L., et al.: Pytorch: An imperative style, high- performance deep learning library. In: Advances in Neural Information Processing Systems. (2019) 8026-8037\n\n- Ruder, S.: An overview of gradient descent optimization algorithms. arXiv preprint arXiv:1609.04747 (2016)\n\n", "annotations": {"ReferenceToTable": [{"begin": 19077, "end": 19078, "target": "#tab_1", "idx": 0}, {"begin": 19089, "end": 19090, "target": "#tab_2", "idx": 1}, {"begin": 19977, "end": 19978, "target": "#tab_3", "idx": 2}, {"begin": 21260, "end": 21261, "target": "#tab_4", "idx": 3}, {"begin": 21885, "end": 21886, "target": "#tab_5", "idx": 4}, {"begin": 22711, "end": 22712, "target": "#tab_6", "idx": 5}], "SectionMain": [{"begin": 1276, "end": 25522, "idx": 0}], "ReferenceToFormula": [{"begin": 14606, "end": 14607, "target": "#formula_0", "idx": 0}, {"begin": 14701, "end": 14702, "target": "#formula_3", "idx": 1}, {"begin": 14744, "end": 14745, "target": "#formula_4", "idx": 2}, {"begin": 14857, "end": 14858, "target": "#formula_7", "idx": 3}, {"begin": 18338, "end": 18339, "target": "#formula_5", "idx": 4}], "SectionReference": [{"begin": 25536, "end": 34744, "idx": 0}], "SectionHeader": [{"begin": 0, "end": 1276, "idx": 0}], "Div": [{"begin": 80, "end": 1268, "idx": 0}, {"begin": 1279, "end": 5267, "idx": 1}, {"begin": 5269, "end": 5967, "idx": 2}, {"begin": 5969, "end": 8347, "idx": 3}, {"begin": 8349, "end": 9830, "idx": 4}, {"begin": 9832, "end": 10524, "idx": 5}, {"begin": 10526, "end": 13199, "idx": 6}, {"begin": 13201, "end": 14242, "idx": 7}, {"begin": 14244, "end": 15438, "idx": 8}, {"begin": 15440, "end": 16308, "idx": 9}, {"begin": 16310, "end": 16984, "idx": 10}, {"begin": 16986, "end": 19041, "idx": 11}, {"begin": 19043, "end": 21062, "idx": 12}, {"begin": 21064, "end": 22681, "idx": 13}, {"begin": 22683, "end": 24950, "idx": 14}, {"begin": 24952, "end": 25522, "idx": 15}], "Head": [{"begin": 1279, "end": 1293, "n": "1", "idx": 0}, {"begin": 5269, "end": 5329, "idx": 1}, {"begin": 5969, "end": 5995, "n": "2.1", "idx": 2}, {"begin": 8349, "end": 8382, "n": "2.2", "idx": 3}, {"begin": 9832, "end": 9902, "n": "3", "idx": 4}, {"begin": 10526, "end": 10541, "n": "3.1", "idx": 5}, {"begin": 13201, "end": 13226, "n": "3.2", "idx": 6}, {"begin": 14244, "end": 14279, "n": "3.3", "idx": 7}, {"begin": 15440, "end": 15471, "n": "3.4", "idx": 8}, {"begin": 16310, "end": 16322, "n": "4", "idx": 9}, {"begin": 16986, "end": 17011, "n": "4.1", "idx": 10}, {"begin": 19043, "end": 19070, "n": "4.2", "idx": 11}, {"begin": 21064, "end": 21087, "n": "4.3", "idx": 12}, {"begin": 22683, "end": 22701, "n": "4.4", "idx": 13}, {"begin": 24952, "end": 24964, "n": "5", "idx": 14}], "Paragraph": [{"begin": 80, "end": 1268, "idx": 0}, {"begin": 1294, "end": 2198, "idx": 1}, {"begin": 2199, "end": 3023, "idx": 2}, {"begin": 3024, "end": 3950, "idx": 3}, {"begin": 3951, "end": 5267, "idx": 4}, {"begin": 5330, "end": 5952, "idx": 5}, {"begin": 5953, "end": 5967, "idx": 6}, {"begin": 5996, "end": 7417, "idx": 7}, {"begin": 7418, "end": 8347, "idx": 8}, {"begin": 8383, "end": 9830, "idx": 9}, {"begin": 9903, "end": 10524, "idx": 10}, {"begin": 10542, "end": 11084, "idx": 11}, {"begin": 11126, "end": 11728, "idx": 12}, {"begin": 11729, "end": 11979, "idx": 13}, {"begin": 11980, "end": 12187, "idx": 14}, {"begin": 12212, "end": 12531, "idx": 15}, {"begin": 12572, "end": 13000, "idx": 16}, {"begin": 13001, "end": 13199, "idx": 17}, {"begin": 13227, "end": 13840, "idx": 18}, {"begin": 13890, "end": 14242, "idx": 19}, {"begin": 14280, "end": 14612, "idx": 20}, {"begin": 14613, "end": 14663, "idx": 21}, {"begin": 14664, "end": 14707, "idx": 22}, {"begin": 14708, "end": 14750, "idx": 23}, {"begin": 14751, "end": 14813, "idx": 24}, {"begin": 14814, "end": 14858, "idx": 25}, {"begin": 14921, "end": 15438, "idx": 26}, {"begin": 15472, "end": 15788, "idx": 27}, {"begin": 15819, "end": 16040, "idx": 28}, {"begin": 16066, "end": 16126, "idx": 29}, {"begin": 16177, "end": 16308, "idx": 30}, {"begin": 16323, "end": 16984, "idx": 31}, {"begin": 17012, "end": 18340, "idx": 32}, {"begin": 18341, "end": 19041, "idx": 33}, {"begin": 19071, "end": 19967, "idx": 34}, {"begin": 19968, "end": 20573, "idx": 35}, {"begin": 20632, "end": 21062, "idx": 36}, {"begin": 21088, "end": 21875, "idx": 37}, {"begin": 21876, "end": 22681, "idx": 38}, {"begin": 22702, "end": 23985, "idx": 39}, {"begin": 23986, "end": 24950, "idx": 40}, {"begin": 24965, "end": 25522, "idx": 41}], "ReferenceToBib": [{"begin": 1317, "end": 1320, "target": "#b0", "idx": 0}, {"begin": 1530, "end": 1534, "target": "#b10", "idx": 1}, {"begin": 1814, "end": 1817, "target": "#b1", "idx": 2}, {"begin": 1818, "end": 1821, "target": "#b2", "idx": 3}, {"begin": 1822, "end": 1825, "target": "#b3", "idx": 4}, {"begin": 1826, "end": 1829, "target": "#b4", "idx": 5}, {"begin": 1830, "end": 1833, "target": "#b5", "idx": 6}, {"begin": 2122, "end": 2125, "target": "#b6", "idx": 7}, {"begin": 2126, "end": 2129, "target": "#b7", "idx": 8}, {"begin": 2130, "end": 2133, "target": "#b8", "idx": 9}, {"begin": 2159, "end": 2163, "target": "#b9", "idx": 10}, {"begin": 2164, "end": 2168, "target": "#b10", "idx": 11}, {"begin": 2169, "end": 2173, "target": "#b11", "idx": 12}, {"begin": 2234, "end": 2238, "target": "#b12", "idx": 13}, {"begin": 2239, "end": 2243, "target": "#b13", "idx": 14}, {"begin": 2244, "end": 2248, "target": "#b14", "idx": 15}, {"begin": 2590, "end": 2594, "target": "#b15", "idx": 16}, {"begin": 2738, "end": 2742, "target": "#b16", "idx": 17}, {"begin": 2743, "end": 2747, "target": "#b17", "idx": 18}, {"begin": 2748, "end": 2752, "target": "#b18", "idx": 19}, {"begin": 3212, "end": 3216, "target": "#b19", "idx": 20}, {"begin": 3217, "end": 3220, "target": "#b20", "idx": 21}, {"begin": 3231, "end": 3235, "target": "#b16", "idx": 22}, {"begin": 3236, "end": 3239, "target": "#b18", "idx": 23}, {"begin": 3351, "end": 3355, "target": "#b18", "idx": 24}, {"begin": 3485, "end": 3489, "target": "#b21", "idx": 25}, {"begin": 3673, "end": 3677, "target": "#b16", "idx": 26}, {"begin": 4357, "end": 4361, "target": "#b22", "idx": 27}, {"begin": 4477, "end": 4481, "target": "#b23", "idx": 28}, {"begin": 4865, "end": 4869, "target": "#b18", "idx": 29}, {"begin": 5929, "end": 5933, "target": "#b24", "idx": 30}, {"begin": 5947, "end": 5951, "target": "#b25", "idx": 31}, {"begin": 6019, "end": 6022, "target": "#b0", "idx": 32}, {"begin": 6505, "end": 6509, "target": "#b12", "idx": 33}, {"begin": 6510, "end": 6514, "target": "#b13", "idx": 34}, {"begin": 6515, "end": 6519, "target": "#b14", "idx": 35}, {"begin": 6520, "end": 6523, "target": "#b26", "idx": 36}, {"begin": 6573, "end": 6577, "target": "#b12", "idx": 37}, {"begin": 6701, "end": 6705, "target": "#b13", "idx": 38}, {"begin": 6771, "end": 6775, "target": "#b27", "idx": 39}, {"begin": 6859, "end": 6863, "target": "#b14", "idx": 40}, {"begin": 7007, "end": 7011, "target": "#b28", "idx": 41}, {"begin": 7232, "end": 7236, "target": "#b29", "idx": 42}, {"begin": 7402, "end": 7406, "target": "#b30", "idx": 43}, {"begin": 7407, "end": 7411, "target": "#b31", "idx": 44}, {"begin": 7412, "end": 7416, "target": "#b32", "idx": 45}, {"begin": 7426, "end": 7430, "target": "#b30", "idx": 46}, {"begin": 7598, "end": 7602, "target": "#b32", "idx": 47}, {"begin": 7820, "end": 7824, "target": "#b33", "idx": 48}, {"begin": 7825, "end": 7829, "target": "#b34", "idx": 49}, {"begin": 7830, "end": 7834, "target": "#b35", "idx": 50}, {"begin": 7835, "end": 7839, "target": "#b36", "idx": 51}, {"begin": 7898, "end": 7902, "target": "#b33", "idx": 52}, {"begin": 8040, "end": 8044, "target": "#b36", "idx": 53}, {"begin": 8045, "end": 8049, "target": "#b37", "idx": 54}, {"begin": 8050, "end": 8054, "target": "#b38", "idx": 55}, {"begin": 8148, "end": 8152, "target": "#b38", "idx": 56}, {"begin": 8835, "end": 8839, "target": "#b15", "idx": 57}, {"begin": 8840, "end": 8843, "target": "#b17", "idx": 58}, {"begin": 8957, "end": 8961, "target": "#b15", "idx": 59}, {"begin": 9060, "end": 9064, "target": "#b16", "idx": 60}, {"begin": 9065, "end": 9068, "target": "#b39", "idx": 61}, {"begin": 9607, "end": 9611, "target": "#b18", "idx": 62}, {"begin": 13398, "end": 13402, "target": "#b40", "idx": 63}, {"begin": 13403, "end": 13407, "target": "#b41", "idx": 64}, {"begin": 13408, "end": 13412, "target": "#b42", "idx": 65}, {"begin": 13413, "end": 13417, "target": "#b43", "idx": 66}, {"begin": 16418, "end": 16421, "target": "#b3", "idx": 67}, {"begin": 16441, "end": 16445, "target": "#b44", "idx": 68}, {"begin": 16456, "end": 16460, "target": "#b45", "idx": 69}, {"begin": 16480, "end": 16484, "target": "#b46", "idx": 70}, {"begin": 16549, "end": 16553, "target": "#b24", "idx": 71}, {"begin": 16567, "end": 16571, "target": "#b25", "idx": 72}, {"begin": 17090, "end": 17094, "target": "#b24", "idx": 73}, {"begin": 17246, "end": 17250, "target": "#b47", "idx": 74}, {"begin": 17552, "end": 17556, "target": "#b48", "idx": 75}, {"begin": 17677, "end": 17681, "target": "#b18", "idx": 76}, {"begin": 17782, "end": 17786, "target": "#b49", "idx": 77}, {"begin": 20495, "end": 20499, "target": "#b20", "idx": 78}], "Sentence": [{"begin": 80, "end": 219, "idx": 0}, {"begin": 220, "end": 358, "idx": 1}, {"begin": 359, "end": 458, "idx": 2}, {"begin": 459, "end": 565, "idx": 3}, {"begin": 566, "end": 777, "idx": 4}, {"begin": 778, "end": 941, "idx": 5}, {"begin": 942, "end": 1088, "idx": 6}, {"begin": 1089, "end": 1178, "idx": 7}, {"begin": 1179, "end": 1268, "idx": 8}, {"begin": 1294, "end": 1452, "idx": 9}, {"begin": 1453, "end": 1562, "idx": 10}, {"begin": 1563, "end": 1704, "idx": 11}, {"begin": 1705, "end": 1834, "idx": 12}, {"begin": 1835, "end": 1975, "idx": 13}, {"begin": 1976, "end": 2036, "idx": 14}, {"begin": 2037, "end": 2198, "idx": 15}, {"begin": 2199, "end": 2272, "idx": 16}, {"begin": 2273, "end": 2369, "idx": 17}, {"begin": 2370, "end": 2559, "idx": 18}, {"begin": 2560, "end": 2690, "idx": 19}, {"begin": 2691, "end": 2854, "idx": 20}, {"begin": 2855, "end": 2907, "idx": 21}, {"begin": 2908, "end": 3023, "idx": 22}, {"begin": 3024, "end": 3114, "idx": 23}, {"begin": 3115, "end": 3221, "idx": 24}, {"begin": 3222, "end": 3340, "idx": 25}, {"begin": 3341, "end": 3490, "idx": 26}, {"begin": 3491, "end": 3665, "idx": 27}, {"begin": 3666, "end": 3825, "idx": 28}, {"begin": 3826, "end": 3950, "idx": 29}, {"begin": 3951, "end": 4127, "idx": 30}, {"begin": 4128, "end": 4362, "idx": 31}, {"begin": 4363, "end": 4610, "idx": 32}, {"begin": 4611, "end": 4728, "idx": 33}, {"begin": 4729, "end": 4798, "idx": 34}, {"begin": 4799, "end": 4855, "idx": 35}, {"begin": 4856, "end": 4927, "idx": 36}, {"begin": 4928, "end": 5016, "idx": 37}, {"begin": 5017, "end": 5147, "idx": 38}, {"begin": 5148, "end": 5267, "idx": 39}, {"begin": 5330, "end": 5499, "idx": 40}, {"begin": 5500, "end": 5563, "idx": 41}, {"begin": 5564, "end": 5726, "idx": 42}, {"begin": 5727, "end": 5952, "idx": 43}, {"begin": 5953, "end": 5967, "idx": 44}, {"begin": 5996, "end": 6162, "idx": 45}, {"begin": 6163, "end": 6336, "idx": 46}, {"begin": 6337, "end": 6478, "idx": 47}, {"begin": 6479, "end": 6561, "idx": 48}, {"begin": 6562, "end": 6681, "idx": 49}, {"begin": 6682, "end": 6821, "idx": 50}, {"begin": 6822, "end": 7005, "idx": 51}, {"begin": 7006, "end": 7097, "idx": 52}, {"begin": 7098, "end": 7199, "idx": 53}, {"begin": 7200, "end": 7326, "idx": 54}, {"begin": 7327, "end": 7417, "idx": 55}, {"begin": 7418, "end": 7594, "idx": 56}, {"begin": 7595, "end": 7701, "idx": 57}, {"begin": 7702, "end": 7796, "idx": 58}, {"begin": 7797, "end": 7896, "idx": 59}, {"begin": 7897, "end": 8019, "idx": 60}, {"begin": 8020, "end": 8125, "idx": 61}, {"begin": 8126, "end": 8347, "idx": 62}, {"begin": 8383, "end": 8522, "idx": 63}, {"begin": 8523, "end": 8625, "idx": 64}, {"begin": 8626, "end": 8821, "idx": 65}, {"begin": 8822, "end": 8863, "idx": 66}, {"begin": 8864, "end": 8962, "idx": 67}, {"begin": 8963, "end": 9056, "idx": 68}, {"begin": 9057, "end": 9207, "idx": 69}, {"begin": 9208, "end": 9341, "idx": 70}, {"begin": 9342, "end": 9431, "idx": 71}, {"begin": 9432, "end": 9599, "idx": 72}, {"begin": 9600, "end": 9659, "idx": 73}, {"begin": 9660, "end": 9745, "idx": 74}, {"begin": 9746, "end": 9830, "idx": 75}, {"begin": 9903, "end": 9968, "idx": 76}, {"begin": 9969, "end": 10027, "idx": 77}, {"begin": 10028, "end": 10090, "idx": 78}, {"begin": 10091, "end": 10263, "idx": 79}, {"begin": 10264, "end": 10332, "idx": 80}, {"begin": 10333, "end": 10445, "idx": 81}, {"begin": 10446, "end": 10524, "idx": 82}, {"begin": 10542, "end": 10669, "idx": 83}, {"begin": 10670, "end": 10760, "idx": 84}, {"begin": 10761, "end": 10887, "idx": 85}, {"begin": 10888, "end": 11008, "idx": 86}, {"begin": 11009, "end": 11084, "idx": 87}, {"begin": 11126, "end": 11133, "idx": 88}, {"begin": 11134, "end": 11179, "idx": 89}, {"begin": 11180, "end": 11258, "idx": 90}, {"begin": 11259, "end": 11300, "idx": 91}, {"begin": 11301, "end": 11392, "idx": 92}, {"begin": 11393, "end": 11488, "idx": 93}, {"begin": 11489, "end": 11547, "idx": 94}, {"begin": 11548, "end": 11584, "idx": 95}, {"begin": 11585, "end": 11635, "idx": 96}, {"begin": 11636, "end": 11706, "idx": 97}, {"begin": 11707, "end": 11728, "idx": 98}, {"begin": 11729, "end": 11766, "idx": 99}, {"begin": 11767, "end": 11846, "idx": 100}, {"begin": 11847, "end": 11885, "idx": 101}, {"begin": 11886, "end": 11979, "idx": 102}, {"begin": 11980, "end": 12187, "idx": 103}, {"begin": 12212, "end": 12244, "idx": 104}, {"begin": 12245, "end": 12375, "idx": 105}, {"begin": 12376, "end": 12456, "idx": 106}, {"begin": 12457, "end": 12531, "idx": 107}, {"begin": 12572, "end": 12639, "idx": 108}, {"begin": 12640, "end": 12750, "idx": 109}, {"begin": 12751, "end": 12858, "idx": 110}, {"begin": 12859, "end": 12917, "idx": 111}, {"begin": 12918, "end": 13000, "idx": 112}, {"begin": 13001, "end": 13110, "idx": 113}, {"begin": 13111, "end": 13199, "idx": 114}, {"begin": 13227, "end": 13381, "idx": 115}, {"begin": 13382, "end": 13498, "idx": 116}, {"begin": 13499, "end": 13603, "idx": 117}, {"begin": 13604, "end": 13746, "idx": 118}, {"begin": 13747, "end": 13840, "idx": 119}, {"begin": 13890, "end": 13950, "idx": 120}, {"begin": 13951, "end": 14087, "idx": 121}, {"begin": 14088, "end": 14155, "idx": 122}, {"begin": 14156, "end": 14200, "idx": 123}, {"begin": 14201, "end": 14242, "idx": 124}, {"begin": 14280, "end": 14367, "idx": 125}, {"begin": 14368, "end": 14465, "idx": 126}, {"begin": 14466, "end": 14534, "idx": 127}, {"begin": 14535, "end": 14612, "idx": 128}, {"begin": 14613, "end": 14663, "idx": 129}, {"begin": 14664, "end": 14707, "idx": 130}, {"begin": 14708, "end": 14750, "idx": 131}, {"begin": 14751, "end": 14813, "idx": 132}, {"begin": 14814, "end": 14858, "idx": 133}, {"begin": 14921, "end": 14990, "idx": 134}, {"begin": 14991, "end": 15109, "idx": 135}, {"begin": 15110, "end": 15185, "idx": 136}, {"begin": 15186, "end": 15263, "idx": 137}, {"begin": 15264, "end": 15389, "idx": 138}, {"begin": 15390, "end": 15438, "idx": 139}, {"begin": 15472, "end": 15556, "idx": 140}, {"begin": 15557, "end": 15606, "idx": 141}, {"begin": 15607, "end": 15737, "idx": 142}, {"begin": 15738, "end": 15788, "idx": 143}, {"begin": 15819, "end": 15926, "idx": 144}, {"begin": 15927, "end": 16000, "idx": 145}, {"begin": 16001, "end": 16040, "idx": 146}, {"begin": 16066, "end": 16126, "idx": 147}, {"begin": 16177, "end": 16245, "idx": 148}, {"begin": 16246, "end": 16308, "idx": 149}, {"begin": 16323, "end": 16572, "idx": 150}, {"begin": 16573, "end": 16653, "idx": 151}, {"begin": 16654, "end": 16925, "idx": 152}, {"begin": 16926, "end": 16984, "idx": 153}, {"begin": 17012, "end": 17021, "idx": 154}, {"begin": 17022, "end": 17066, "idx": 155}, {"begin": 17067, "end": 17187, "idx": 156}, {"begin": 17188, "end": 17251, "idx": 157}, {"begin": 17252, "end": 17289, "idx": 158}, {"begin": 17290, "end": 17335, "idx": 159}, {"begin": 17336, "end": 17426, "idx": 160}, {"begin": 17427, "end": 17476, "idx": 161}, {"begin": 17477, "end": 17486, "idx": 162}, {"begin": 17487, "end": 17557, "idx": 163}, {"begin": 17558, "end": 17620, "idx": 164}, {"begin": 17621, "end": 17682, "idx": 165}, {"begin": 17683, "end": 17770, "idx": 166}, {"begin": 17771, "end": 17871, "idx": 167}, {"begin": 17872, "end": 17902, "idx": 168}, {"begin": 17903, "end": 17941, "idx": 169}, {"begin": 17942, "end": 18051, "idx": 170}, {"begin": 18052, "end": 18129, "idx": 171}, {"begin": 18130, "end": 18217, "idx": 172}, {"begin": 18218, "end": 18271, "idx": 173}, {"begin": 18272, "end": 18340, "idx": 174}, {"begin": 18341, "end": 18414, "idx": 175}, {"begin": 18415, "end": 18486, "idx": 176}, {"begin": 18487, "end": 18627, "idx": 177}, {"begin": 18628, "end": 18762, "idx": 178}, {"begin": 18763, "end": 18890, "idx": 179}, {"begin": 18891, "end": 18958, "idx": 180}, {"begin": 18959, "end": 19041, "idx": 181}, {"begin": 19071, "end": 19204, "idx": 182}, {"begin": 19205, "end": 19274, "idx": 183}, {"begin": 19275, "end": 19343, "idx": 184}, {"begin": 19344, "end": 19457, "idx": 185}, {"begin": 19458, "end": 19558, "idx": 186}, {"begin": 19559, "end": 19632, "idx": 187}, {"begin": 19633, "end": 19765, "idx": 188}, {"begin": 19766, "end": 19844, "idx": 189}, {"begin": 19845, "end": 19967, "idx": 190}, {"begin": 19968, "end": 20079, "idx": 191}, {"begin": 20080, "end": 20224, "idx": 192}, {"begin": 20225, "end": 20351, "idx": 193}, {"begin": 20352, "end": 20459, "idx": 194}, {"begin": 20460, "end": 20546, "idx": 195}, {"begin": 20547, "end": 20573, "idx": 196}, {"begin": 20632, "end": 20834, "idx": 197}, {"begin": 20835, "end": 20919, "idx": 198}, {"begin": 20920, "end": 20976, "idx": 199}, {"begin": 20977, "end": 21062, "idx": 200}, {"begin": 21088, "end": 21183, "idx": 201}, {"begin": 21184, "end": 21258, "idx": 202}, {"begin": 21259, "end": 21370, "idx": 203}, {"begin": 21371, "end": 21516, "idx": 204}, {"begin": 21517, "end": 21622, "idx": 205}, {"begin": 21623, "end": 21718, "idx": 206}, {"begin": 21719, "end": 21765, "idx": 207}, {"begin": 21766, "end": 21875, "idx": 208}, {"begin": 21876, "end": 21922, "idx": 209}, {"begin": 21923, "end": 22036, "idx": 210}, {"begin": 22037, "end": 22145, "idx": 211}, {"begin": 22146, "end": 22259, "idx": 212}, {"begin": 22260, "end": 22345, "idx": 213}, {"begin": 22346, "end": 22461, "idx": 214}, {"begin": 22462, "end": 22542, "idx": 215}, {"begin": 22543, "end": 22681, "idx": 216}, {"begin": 22702, "end": 22777, "idx": 217}, {"begin": 22778, "end": 22854, "idx": 218}, {"begin": 22855, "end": 22920, "idx": 219}, {"begin": 22921, "end": 23010, "idx": 220}, {"begin": 23011, "end": 23100, "idx": 221}, {"begin": 23101, "end": 23193, "idx": 222}, {"begin": 23194, "end": 23309, "idx": 223}, {"begin": 23310, "end": 23417, "idx": 224}, {"begin": 23418, "end": 23567, "idx": 225}, {"begin": 23568, "end": 23632, "idx": 226}, {"begin": 23633, "end": 23759, "idx": 227}, {"begin": 23760, "end": 23878, "idx": 228}, {"begin": 23879, "end": 23985, "idx": 229}, {"begin": 23986, "end": 24101, "idx": 230}, {"begin": 24102, "end": 24217, "idx": 231}, {"begin": 24218, "end": 24293, "idx": 232}, {"begin": 24294, "end": 24376, "idx": 233}, {"begin": 24377, "end": 24428, "idx": 234}, {"begin": 24429, "end": 24511, "idx": 235}, {"begin": 24512, "end": 24633, "idx": 236}, {"begin": 24634, "end": 24739, "idx": 237}, {"begin": 24740, "end": 24843, "idx": 238}, {"begin": 24844, "end": 24950, "idx": 239}, {"begin": 24965, "end": 25054, "idx": 240}, {"begin": 25055, "end": 25209, "idx": 241}, {"begin": 25210, "end": 25367, "idx": 242}, {"begin": 25368, "end": 25522, "idx": 243}], "ReferenceToFigure": [{"begin": 9966, "end": 9967, "idx": 0}, {"begin": 11131, "end": 11132, "idx": 1}, {"begin": 12577, "end": 12578, "idx": 2}, {"begin": 13289, "end": 13290, "idx": 3}, {"begin": 23991, "end": 23992, "target": "#fig_1", "idx": 4}], "Abstract": [{"begin": 70, "end": 1268, "idx": 0}], "SectionFootnote": [{"begin": 25524, "end": 25534, "idx": 0}], "ReferenceString": [{"begin": 25551, "end": 25670, "id": "b0", "idx": 0}, {"begin": 25672, "end": 25853, "id": "b1", "idx": 1}, {"begin": 25857, "end": 25991, "id": "b2", "idx": 2}, {"begin": 25995, "end": 26175, "id": "b3", "idx": 3}, {"begin": 26179, "end": 26372, "id": "b4", "idx": 4}, {"begin": 26376, "end": 26582, "id": "b5", "idx": 5}, {"begin": 26586, "end": 26763, "id": "b6", "idx": 6}, {"begin": 26767, "end": 26939, "id": "b7", "idx": 7}, {"begin": 26943, "end": 27112, "id": "b8", "idx": 8}, {"begin": 27116, "end": 27316, "id": "b9", "idx": 9}, {"begin": 27320, "end": 27526, "id": "b10", "idx": 10}, {"begin": 27530, "end": 27740, "id": "b11", "idx": 11}, {"begin": 27744, "end": 27890, "id": "b12", "idx": 12}, {"begin": 27894, "end": 28081, "id": "b13", "idx": 13}, {"begin": 28085, "end": 28321, "id": "b14", "idx": 14}, {"begin": 28325, "end": 28496, "id": "b15", "idx": 15}, {"begin": 28500, "end": 28652, "id": "b16", "idx": 16}, {"begin": 28656, "end": 28845, "id": "b17", "idx": 17}, {"begin": 28849, "end": 29035, "id": "b18", "idx": 18}, {"begin": 29039, "end": 29202, "id": "b19", "idx": 19}, {"begin": 29206, "end": 29280, "id": "b20", "idx": 20}, {"begin": 29284, "end": 29452, "id": "b21", "idx": 21}, {"begin": 29456, "end": 29659, "id": "b22", "idx": 22}, {"begin": 29663, "end": 29837, "id": "b23", "idx": 23}, {"begin": 29841, "end": 29947, "id": "b24", "idx": 24}, {"begin": 29951, "end": 30085, "id": "b25", "idx": 25}, {"begin": 30089, "end": 30218, "id": "b26", "idx": 26}, {"begin": 30222, "end": 30433, "id": "b27", "idx": 27}, {"begin": 30437, "end": 30615, "id": "b28", "idx": 28}, {"begin": 30619, "end": 30829, "id": "b29", "idx": 29}, {"begin": 30833, "end": 31007, "id": "b30", "idx": 30}, {"begin": 31011, "end": 31197, "id": "b31", "idx": 31}, {"begin": 31201, "end": 31412, "id": "b32", "idx": 32}, {"begin": 31416, "end": 31588, "id": "b33", "idx": 33}, {"begin": 31592, "end": 31806, "id": "b34", "idx": 34}, {"begin": 31810, "end": 32030, "id": "b35", "idx": 35}, {"begin": 32034, "end": 32244, "id": "b36", "idx": 36}, {"begin": 32248, "end": 32385, "id": "b37", "idx": 37}, {"begin": 32389, "end": 32602, "id": "b38", "idx": 38}, {"begin": 32606, "end": 32746, "id": "b39", "idx": 39}, {"begin": 32750, "end": 32949, "id": "b40", "idx": 40}, {"begin": 32953, "end": 33175, "id": "b41", "idx": 41}, {"begin": 33179, "end": 33385, "id": "b42", "idx": 42}, {"begin": 33389, "end": 33563, "id": "b43", "idx": 43}, {"begin": 33567, "end": 33779, "id": "b44", "idx": 44}, {"begin": 33783, "end": 33958, "id": "b45", "idx": 45}, {"begin": 33962, "end": 34136, "id": "b46", "idx": 46}, {"begin": 34140, "end": 34357, "id": "b47", "idx": 47}, {"begin": 34361, "end": 34632, "id": "b48", "idx": 48}, {"begin": 34636, "end": 34742, "id": "b49", "idx": 49}]}}