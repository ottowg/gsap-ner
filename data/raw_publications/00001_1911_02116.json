{"text": "Unsupervised Cross-lingual Representation Learning at Scale\n\nAbstract:\nThis paper shows that pretraining multilingual language models at scale leads to significant performance gains for a wide range of crosslingual transfer tasks. We train a Transformerbased masked language model on one hundred languages, using more than two terabytes of filtered CommonCrawl data. Our model, dubbed XLM-R, significantly outperforms multilingual BERT (mBERT) on a variety of cross-lingual benchmarks, including +14.6% average accuracy on XNLI, +13% average F1 score on MLQA, and +2.4% F1 score on NER. XLM-R performs particularly well on low-resource languages, improving 15.7% in XNLI accuracy for Swahili and 11.4% for Urdu over previous XLM models. We also present a detailed empirical analysis of the key factors that are required to achieve these gains, including the trade-offs between (1) positive transfer and capacity dilution and (2) the performance of high and low resource languages at scale. Finally, we show, for the first time, the possibility of multilingual modeling without sacrificing perlanguage performance; XLM-R is very competitive with strong monolingual models on the GLUE and XNLI benchmarks. We will make our code, data and models publicly available. 1 * Equal contribution.\n\n\n1 Introduction\nThe goal of this paper is to improve cross-lingual language understanding (XLU), by carefully studying the effects of training unsupervised crosslingual representations at a very large scale. We present XLM-R a transformer-based multilingual masked language model pre-trained on text in 100 languages, which obtains state-of-the-art performance on cross-lingual classification, sequence labeling and question answering.\nMultilingual masked language models (MLM) like mBERT (Devlin et al., 2018) and XLM (Lample and Conneau, 2019) have pushed the stateof-the-art on cross-lingual understanding tasks by jointly pretraining large Transformer models (Vaswani et al., 2017) on many languages. These models allow for effective cross-lingual transfer, as seen in a number of benchmarks including cross-lingual natural language inference (Bowman et al., 2015; Williams et al., 2017; Conneau et al., 2018), question answering (Rajpurkar et al., 2016; Lewis et al., 2019), and named entity recognition (Pires et al., 2019; Wu and Dredze, 2019). However, all of these studies pre-train on Wikipedia, which provides a relatively limited scale especially for lower resource languages.\nIn this paper, we first present a comprehensive analysis of the trade-offs and limitations of multilingual language models at scale, inspired by recent monolingual scaling efforts (Liu et al., 2019). We measure the trade-off between high-resource and low-resource languages and the impact of language sampling and vocabulary size. The experiments expose a trade-off as we scale the number of languages for a fixed model capacity: more languages leads to better cross-lingual performance on low-resource languages up until a point, after which the overall performance on monolingual and cross-lingual benchmarks degrades. We refer to this tradeoff as the curse of multilinguality, and show that it can be alleviated by simply increasing model capacity. We argue, however, that this remains an important limitation for future XLU systems which may aim to improve performance with more modest computational budgets.\nOur best model XLM-RoBERTa (XLM-R) outperforms mBERT on cross-lingual classification by up to 23% accuracy on low-resource languages. It outperforms the previous state of the art by 5.1% average accuracy on XNLI, 2.42% average F1-score on Named Entity Recognition, and 9.1% average F1-score on cross-lingual Question Answering. We also evaluate monolingual fine tuning on the GLUE and XNLI benchmarks, where XLM-R obtains results competitive with state-of-the-art monolingual models, including RoBERTa (Liu et al., 2019). These results demonstrate, for the first time, that it is possible to have a single large model for all languages, without sacrificing per-language performance. We will make our code, models and data publicly available, with the hope that this will help research in multilingual NLP and low-resource language understanding.\n\n2 Related Work\nFrom pretrained word embeddings (Mikolov et al., 2013b; Pennington et al., 2014) to pretrained contextualized representations (Peters et al., 2018; Schuster et al., 2019) and transformer based language models (Radford et al., 2018; Devlin et al., 2018), unsupervised representation learning has significantly improved the state of the art in natural language understanding. Parallel work on cross-lingual understanding (Mikolov et al., 2013a; Schuster et al., 2019; Lample and Conneau, 2019) extends these systems to more languages and to the cross-lingual setting in which a model is learned in one language and applied in other languages.\nMost recently, Devlin et al. (2018) and Lample and Conneau (2019) introduced mBERT and XLM -masked language models trained on multiple languages, without any cross-lingual supervision.  Lample and Conneau (2019) propose translation language modeling (TLM) as a way to leverage parallel data and obtain a new state of the art on the cross-lingual natural language inference (XNLI) benchmark (Conneau et al., 2018). They further show strong improvements on unsupervised machine translation and pretraining for sequence generation.  Wu et al. (2019) shows that monolingual BERT representations are similar across languages, explaining in part the natural emergence of multilinguality in bottleneck architectures. Separately, Pires et al. (2019) demonstrated the effectiveness of multilingual models like mBERT on sequence labeling tasks.  Huang et al. (2019) showed gains over XLM using cross-lingual multi-task learning, and Singh et al. (2019) demonstrated the efficiency of cross-lingual data augmentation for cross-lingual NLI. However, all of this work was at a relatively modest scale, in terms of the amount of training data, as compared to our approach.\nThe benefits of scaling language model pretraining by increasing the size of the model as well as the training data has been extensively studied in the literature. For the monolingual case, Jozefowicz et al. (2016) show how large-scale LSTM models can obtain much stronger performance on language modeling benchmarks when trained on billions of tokens. GPT (Radford et al., 2018) also highlights the importance of scaling the amount of data and RoBERTa (Liu et al., 2019) shows that training BERT longer on more data leads to significant boost in performance. Inspired by RoBERTa, we show that mBERT and XLM are undertuned, and that simple improvements in the learning procedure of unsupervised MLM leads to much better performance. We train on cleaned CommonCrawls (Wenzek et al., 2019), which increase the amount of data for low-resource languages by two orders of magnitude on average. Similar data has also been shown to be effective for learning high quality word embeddings in multiple languages (Grave et al., 2018).\nSeveral efforts have trained massively multilingual machine translation models from large parallel corpora. They uncover the high and low resource trade-off and the problem of capacity dilution (Johnson et al., 2017; Tan et al., 2019). The work most similar to ours is Arivazhagan et al. (2019), which trains a single model in 103 languages on over 25 billion parallel sentences.  Siddhant et al. (2019) further analyze the representations obtained by the encoder of a massively multilingual machine translation system and show that it obtains similar results to mBERT on cross-lingual NLI. Our work, in contrast, focuses on the unsupervised learning of cross-lingual representations and their transfer to discriminative tasks.\n\n3 Model and Data\nIn this section, we present the training objective, languages, and data we use. We follow the XLM approach (Lample and Conneau, 2019) as closely as possible, only introducing changes that improve performance at scale. Masked Language Models. We use a Transformer model (Vaswani et al., 2017) trained with the multilingual MLM objective (Devlin et al., 2018; Lample and Conneau, 2019) using only monolingual data. We sample streams of text from each language and train the model to predict the masked tokens in the input. We apply subword tok- Dataset size (in GB)\nCommonCrawl Wikipedia\nFigure 1 : Amount of data in GiB (log-scale) for the 88 languages that appear in both the Wiki-100 corpus used for mBERT and XLM-100, and the CC-100 used for XLM-R. CC-100 increases the amount of data by several orders of magnitude, in particular for low-resource languages.\nenization directly on raw text data using Sentence Piece (Kudo and Richardson, 2018) with a unigram language model (Kudo, 2018). We sample batches from different languages using the same sampling distribution as Lample and Conneau (2019), but with \u03b1 = 0.3. Unlike Lample and Conneau (2019), we do not use language embeddings, which allows our model to better deal with code-switching. We use a large vocabulary size of 250K with a full softmax and train two different models: XLM-R Base (L = 12, H = 768, A = 12, 270M params) and XLM-R (L = 24, H = 1024, A = 16, 550M params). For all of our ablation studies, we use a BERT Base architecture with a vocabulary of 150K tokens. Appendix B goes into more details about the architecture of the different models referenced in this paper.\nScaling to a hundred languages. XLM-R is trained on 100 languages; we provide a full list of languages and associated statistics in Appendix A.\nFigure 1 specifies the iso codes of 88 languages that are shared across XLM-R and XLM-100, the model from Lample and Conneau (2019) trained on Wikipedia text in 100 languages.\nCompared to previous work, we replace some languages with more commonly used ones such as romanized Hindi and traditional Chinese. In our ablation studies, we always include the 7 languages for which we have classification and sequence labeling evaluation benchmarks: English, French, German, Russian, Chinese, Swahili and Urdu. We chose this set as it covers a suitable range of language families and includes low-resource languages such as Swahili and Urdu. We also consider larger sets of 15, 30, 60 and all 100 languages. When reporting results on high-resource and lowresource, we refer to the average of English and French results, and the average of Swahili and Urdu results respectively.\nScaling the Amount of Training Data. Following Wenzek et al. ( 2019) 2, we build a clean Com-monCrawl Corpus in 100 languages. We use an internal language identification model in combination with the one from fastText (Joulin et al., 2017). We train language models in each language and use it to filter documents as described in Wenzek et al. (2019). We consider one CommonCrawl dump for English and twelve dumps for all other languages, which significantly increases dataset sizes, especially for low-resource languages like Burmese and Swahili.\nFigure 1 shows the difference in size between the Wikipedia Corpus used by mBERT and XLM-100, and the CommonCrawl Corpus we use. As we show in Section 5.3, monolingual Wikipedia corpora are too small to enable unsupervised representation learning. Based on our experiments, we found that a few hundred MiB of text data is usually a minimal size for learning a BERT model.\n\n4 Evaluation\nWe consider four evaluation benchmarks. For crosslingual understanding, we use cross-lingual natural language inference, named entity recognition, and question answering. We use the GLUE benchmark to evaluate the English performance of XLM-R and compare it to other state-of-the-art models.\nCross-lingual Natural Language Inference (XNLI). The XNLI dataset comes with groundtruth dev and test sets in 15 languages, and a ground-truth English training set. The training set has been machine-translated to the remaining 14 languages, providing synthetic training data for these languages as well. We evaluate our model on cross-lingual transfer from English to other lan-guages. We also consider three machine translation baselines: (i) translate-test: dev and test sets are machine-translated to English and a single English model is used (ii) translate-train (per-language): the English training set is machine-translated to each language and we fine-tune a multiligual model on each training set (iii) translate-train-all (multi-language): we fine-tune a multilingual model on the concatenation of all training sets from translate-train. For the translations, we use the official data provided by the XNLI project.\nNamed Entity Recognition. For NER, we consider the CoNLL-2002 (Sang, 2002) and CoNLL-2003 (Tjong Kim Sang and De Meulder, 2003) datasets in English, Dutch, Spanish and German. We fine-tune multilingual models either (1) on the English set to evaluate cross-lingual transfer, (2) on each set to evaluate per-language performance, or (3) on all sets to evaluate multilingual learning. We report the F1 score, and compare to baselines from Lample et al. (2016) and Akbik et al. (2018).\nCross-lingual Question Answering. We use the MLQA benchmark from Lewis et al. (2019), which extends the English SQuAD benchmark to Spanish, German, Arabic, Hindi, Vietnamese and Chinese. We report the F1 score as well as the exact match (EM) score for cross-lingual transfer from English. GLUE Benchmark. Finally, we evaluate the English performance of our model on the GLUE benchmark (Wang et al., 2018) which gathers multiple classification tasks, such as MNLI (Williams et al., 2017), SST-2 (Socher et al., 2013), or QNLI (Rajpurkar et al., 2018). We use BERT Large and RoBERTa as baselines.\n\n5 Analysis and Results\nIn this section, we perform a comprehensive analysis of multilingual masked language models. We conduct most of the analysis on XNLI, which we found to be representative of our findings on other tasks. We then present the results of XLM-R on cross-lingual understanding and GLUE. Finally, we compare multilingual and monolingual models, and present results on low-resource languages.\n\n5.1 Improving and Understanding Multilingual Masked Language Models\nMuch of the work done on understanding the crosslingual effectiveness of mBERT or XLM (Pires et al., 2019; Wu and Dredze, 2019; Lewis et al., 2019) has focused on analyzing the performance of fixed pretrained models on downstream tasks. In this section, we present a comprehensive study of different factors that are important to pretraining large scale multilingual models. We highlight the trade-offs and limitations of these models as we scale to one hundred languages.\nTransfer-dilution Trade-off and Curse of Multilinguality. Model capacity (i.e. the number of parameters in the model) is constrained due to practical considerations such as memory and speed during training and inference. For a fixed sized model, the per-language capacity decreases as we increase the number of languages. While low-resource language performance can be improved by adding similar higher-resource languages during pretraining, the overall downstream performance suffers from this capacity dilution (Arivazhagan et al., 2019).\nPositive transfer and capacity dilution have to be traded off against each other. We illustrate this trade-off in Figure 2, which shows XNLI performance vs the number of languages the model is pretrained on. Initially, as we go from 7 to 15 languages, the model is able to take advantage of positive transfer which improves performance, especially on low resource languages. Beyond this point the curse of multilinguality kicks in and degrades performance across all languages. Specifically, the overall XNLI accuracy decreases from 71.8% to 67.7% as we go from XLM-7 to XLM-100. The same trend can be observed for models trained on the larger CommonCrawl Corpus.\nThe issue is even more prominent when the capacity of the model is small. To show this, we pretrain models on Wikipedia Data in 7, 30 and 100 languages. As we add more languages, we make the Transformer wider by increasing the hidden size from 768 to 960 to 1152. In Figure 4, we show that the added capacity allows XLM-30 to be on par with XLM-7, thus overcoming the curse of multilinguality. The added capacity for XLM-100, however, is not enough and it still lags behind due to higher vocabulary dilution (recall from Section 3 that we used a fixed vocabulary size of 150K for all models). vocabulary, and the rate at which we sample training examples from each language. We study the effect of sampling on the performance of highresource (English and French) and low-resource (Swahili and Urdu) languages for an XLM-100 model trained on Wikipedia (we observe a similar trend for the construction of the subword vocab). Specifically, we investigate the impact of varying the \u03b1 parameter which controls the exponential smoothing of the language sampling rate. Similar to Lample and Conneau (2019), we use a sampling rate proportional to the number of sentences in each corpus. Models trained with higher values of \u03b1 see batches of high-resource languages more often. Figure 5 shows that the higher the value of \u03b1, the better the performance on high-resource languages, and vice-versa. When considering overall performance, we found 0.3 to be an optimal value for \u03b1, and use this for XLM-R.\n\nHigh-resource vs\nImportance of Capacity and Vocabulary. In previous sections and in Figure 4, we showed the importance of scaling the model size as we increase the number of languages. Similar to the overall model size, we argue that scaling the size of the shared vocabulary (the vocabulary capacity) can improve the performance of multilingual models on downstream tasks. To illustrate this effect, we train XLM-100 models on Wikipedia data with different vocabulary sizes. We keep the overall number of parameters constant by adjusting the width of the transformer. Figure 6 shows that even with a fixed capacity, we observe a 2.8% increase in XNLI average accuracy as we increase the vocabulary size from 32K to 256K. This suggests that multilingual models can benefit from allocating a higher proportion of the total number of parameters to the embedding layer even though this reduces the size of the Transformer. For simplicity and given the softmax computational constraints, we use a vocabulary of 250k for XLM-R.\nWe further illustrate the importance of this parameter, by training three models with the same transformer architecture (BERT Base ) but with different vocabulary sizes: 128K, 256K and 512K. We observe more than 3% gains in overall accuracy on XNLI by simply increasing the vocab size from 128k to 512k.\nLarger-scale Datasets and Training. As shown in Figure 1, the CommonCrawl Corpus that we collected has significantly more monolingual data than the previously used Wikipedia corpora. Figure 3 shows that for the same BERT Base architecture, all models trained on CommonCrawl obtain significantly better performance.\nApart from scaling the training data, Liu et al. ( 2019) also showed the benefits of training MLMs longer. In our experiments, we observed similar effects of large-scale training, such as increasing batch size (see Figure 7) and training time, on model performance. Specifically, we found that using validation perplexity as a stopping criterion for pretraining caused the multilingual MLM in Lample and Conneau (2019) to be under-tuned. In our experience, performance on downstream tasks continues to improve even after validation perplexity has plateaued. Combining this observation with our implementation of the unsupervised XLM-MLM objective, we were able to improve the performance of Lample and Conneau (2019) from 71.3% to more than 75% average accuracy on XNLI, which was on par with their supervised translation language modeling (TLM) objective. Based on these results, and given our focus on unsupervised learning, we decided to not use the supervised TLM objective for training our models.\n\nSimplifying Multilingual Tokenization with\nSentence Piece. The different language-specific tokenization tools used by mBERT and XLM-100 make these models more difficult to use on raw text. Instead, we train a Sentence Piece model (SPM) and apply it directly on raw text data for all languages. We did not observe any loss in performance for models trained with SPM when compared to models trained with language-specific preprocessing and byte-pair encoding (see Figure 7) and hence use SPM for XLM-R.\n\n5.2 Cross-lingual Understanding Results\nBased on these results, we adapt the setting of Lample and Conneau (2019) and use a large Transformer model with 24 layers and 1024 hidden states, with a 250k vocabulary. We use the multilingual MLM loss and train our XLM-R model for 1.5 Million updates on five-hundred 32GB Nvidia V100 GPUs with a batch size of 8192. We leverage the SPM-preprocessed text data from Common-Crawl in 100 languages and sample languages with \u03b1 = 0.3. In this section, we show that it out-performs all previous techniques on cross-lingual benchmarks while getting performance on par with RoBERTa on the GLUE benchmark.\n\nXNLI.\nTable 1 shows XNLI results and adds some additional details: (i) the number of models the approach induces (#M), (ii) the data on which the model was trained (D), and (iii) the number of languages the model was pretrained on (#lg). As we show in our results, these parameters significantly impact performance. Column #M specifies whether model selection was done separately on the dev set of each language (N models), or on the joint dev set of all the languages (single model). We observe a 0.6 decrease in overall accuracy when we go from N models to a single model -going from 71.3 to 70.7. We encourage the community to adopt this setting. For cross-lingual transfer, while this approach is not fully zero-shot transfer, we argue that in real applications, a small amount of supervised data is often available for validation in each language.\nXLM-R sets a new state of the art on XNLI. On cross-lingual transfer, XLM-R obtains 80.9% accuracy, outperforming the XLM-100 and mBERT open-source models by 10.2% and 14.6% average accuracy. On the Swahili and Urdu lowresource languages, XLM-R outperforms XLM-100 by 15.7% and 11.4%, and mBERT by 23.5% and 15.8%. While XLM-R handles 100 languages, we also show that it outperforms the former state of the art Unicoder (Huang et al., 2019) and XLM (MLM+TLM), which handle only 15 languages, by 5.5% and 5.8% average accuracy respectively. Using the multilingual training of translate-train-all, XLM-R further improves performance and reaches 83.6% accuracy, a new overall state of the art for XNLI, outperforming Unicoder by 5.1%. Multilingual training is similar to practical applications where training sets are available in various languages for the same task. In the case of XNLI, datasets have been translated, and translate-trainall can be seen as some form of cross-lingual data augmentation (Singh et al., 2019), similar to backtranslation (Xie et al., 2019).\nNamed Entity Recognition. In Table 2, we report results of XLM-R and mBERT on CoNLL-2002 and CoNLL-2003. We consider the LSTM + CRF approach from Lample et al. (2016) and the Flair model from Akbik et al. (2018) -2002 and CoNLL-2003 (F1 score). Results with \u2020 are from Wu and Dredze (2019). Note that mBERT and XLM-R do not use a linear-chain CRF, as opposed to Akbik et al. (2018) and Lample et al. (2016).\non each of the target languages in three different settings: (i) train on English data only (en) (ii) train on data in target language (each) (iii) train on data in all languages (all). Results of mBERT are reported from Wu and Dredze (2019). Note that we do not use a linear-chain CRF on top of XLM-R and mBERT representations, which gives an advantage to Akbik et al. (2018). Without the CRF, our XLM-R model still performs on par with the state of the art, outperforming Akbik et al. (2018) on Dutch by 2.09 points. On this task, XLM-R also outperforms mBERT by 2.42 F1 on average for cross-lingual transfer, and 1.86 F1 when trained on each language. Training on all languages leads to an average F1 score of 89.43%, outperforming cross-lingual transfer approach by 8.49%.\nQuestion Answering. We also obtain new state of the art results on the MLQA cross-lingual question answering benchmark, introduced by Lewis et al. (2019). We follow their procedure by training on the English training data and evaluating on the 7 languages of the dataset. We report results in Table 3. XLM-R obtains F1 and accuracy scores of 70.7% and 52.7% while the previous state of the art was 61.6% and 43.5%. XLM-R also outperforms mBERT by 13.0% F1-score and 11.1% accuracy. It even outperforms BERT-Large on English, confirming its strong monolingual performance.\n\n5.3 Multilingual versus Monolingual\nIn this section, we present results of multilingual XLM models against monolingual BERT models.\nGLUE: XLM-R versus RoBERTa. Our goal is to obtain a multilingual model with strong performance on both, cross-lingual understanding tasks as well as natural language understanding tasks for each language. To that end, we evaluate XLM-R on the GLUE benchmark. We show in XNLI: XLM versus BERT. A recurrent criticism against multilingual models is that they obtain worse performance than their monolingual counterparts. In addition to the comparison of XLM-R and RoBERTa, we provide the first comprehensive study to assess this claim on the XNLI benchmark. We extend our comparison between multilingual XLM models and monolingual BERT models on 7 languages and compare performance in Table 5. We train 14 monolingual BERT models on Wikipedia and CommonCrawl (capped at 60 GiB), and two XLM-7 models. We increase the vocabulary size of the multilingual model for a better comparison. We found that multilingual models can outperform their monolingual BERT counterparts. Specifically, in Table 5, we show that for cross-lingual transfer, monolingual baselines outperform XLM-7 for both Wikipedia and CC by 1.6% and 1.3% average accuracy. However, by making use of multilingual training (translate-trainall) and leveraging training sets coming from multiple languages, XLM-7 can outperform the BERT models: our XLM-7 trained on CC obtains 80.0% average accuracy on the 7 languages, while the average performance of BERT models trained on CC is 77.5%. This is a surprising result that shows that the capacity of multilingual models to leverage training data coming from multiple languages for a particular task can overcome the capacity dilution problem to obtain better overall performance. We compare the performance of monolingual models (BERT) versus multilingual models (XLM) on seven languages, using a BERT-BASE architecture. We choose a vocabulary size of 40k and 150k for monolingual and multilingual models.\n\n5.4 Representation Learning for Low-resource Languages\nWe observed in Table 5 that pretraining on Wikipedia for Swahili and Urdu performed similarly to a randomly initialized model; most likely due to the small size of the data for these languages.\nOn the other hand, pretraining on CC improved performance by up to 10 points. This confirms our assumption that mBERT and XLM-100 rely heavily on cross-lingual transfer but do not model the low-resource languages as well as XLM-R. Specifically, in the translate-train-all setting, we observe that the biggest gains for XLM models trained on CC, compared to their Wikipedia counterparts, are on low-resource languages; 7% and 4.8% improvement on Swahili and Urdu respectively.\n\n6 Conclusion\nIn this work, we introduced XLM-R, our new state of the art multilingual masked language model trained on 2.5 TB of newly created clean Com-monCrawl data in 100 languages. We show that it provides strong gains over previous multilingual models like mBERT and XLM on classification, sequence labeling and question answering. We exposed the limitations of multilingual MLMs, in particular by uncovering the high-resource versus low-resource trade-off, the curse of multilinguality and the importance of key hyperparameters. We also expose the surprising effectiveness of multilingual models over monolingual models, and show strong improvements on low-resource languages.\n\nFootnotes:\n2: https://github.com/facebookresearch/cc net\n\nReferences:\n\n- Alan Akbik, Duncan Blythe, and Roland Vollgraf. 2018. Contextual string embeddings for sequence labeling. In COLING, pages 1638-1649.- Naveen Arivazhagan, Ankur Bapna, Orhan Firat, Dmitry Lepikhin, Melvin Johnson, Maxim Krikun, Mia Xu Chen, Yuan Cao, George Foster, Colin Cherry, et al. 2019. Massively multilingual neural machine translation in the wild: Findings and chal- lenges. arXiv preprint arXiv:1907.05019.\n\n- Samuel R. Bowman, Gabor Angeli, Christopher Potts, and Christopher D. Manning. 2015. A large anno- tated corpus for learning natural language inference. In EMNLP.\n\n- Alexis Conneau, Ruty Rinott, Guillaume Lample, Ad- ina Williams, Samuel R. Bowman, Holger Schwenk, and Veselin Stoyanov. 2018. Xnli: Evaluating cross- lingual sentence representations. In EMNLP. Asso- ciation for Computational Linguistics.\n\n- Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. 2018. Bert: Pre-training of deep bidirectional transformers for language understand- ing. NAACL.\n\n- Edouard Grave, Piotr Bojanowski, Prakhar Gupta, Ar- mand Joulin, and Tomas Mikolov. 2018. Learning word vectors for 157 languages. In LREC.\n\n- Haoyang Huang, Yaobo Liang, Nan Duan, Ming Gong, Linjun Shou, Daxin Jiang, and Ming Zhou. 2019. Unicoder: A universal language encoder by pre- training with multiple cross-lingual tasks. ACL.\n\n- Melvin Johnson, Mike Schuster, Quoc V Le, Maxim Krikun, Yonghui Wu, Zhifeng Chen, Nikhil Thorat, Fernanda Vi\u00e9gas, Martin Wattenberg, Greg Corrado, et al. 2017. Googles multilingual neural machine translation system: Enabling zero-shot translation. TACL, 5:339-351.\n\n- Armand Joulin, Edouard Grave, and Piotr Bo- janowski Tomas Mikolov. 2017. Bag of tricks for efficient text classification. EACL 2017, page 427.\n\n- Rafal Jozefowicz, Oriol Vinyals, Mike Schuster, Noam Shazeer, and Yonghui Wu. 2016. Exploring the limits of language modeling. arXiv preprint arXiv:1602.02410. Taku Kudo. 2018. Subword regularization: Improving neural network translation models with multiple sub- word candidates. In ACL, pages 66-75.\n\n- Taku Kudo and John Richardson. 2018. Sentencepiece: A simple and language independent subword tok- enizer and detokenizer for neural text processing. EMNLP.\n\n- Guillaume Lample, Miguel Ballesteros, Sandeep Sub- ramanian, Kazuya Kawakami, and Chris Dyer. 2016. Neural architectures for named entity recognition. In NAACL, pages 260-270, San Diego, California. Association for Computational Linguistics.\n\n- Guillaume Lample and Alexis Conneau. 2019. Cross- lingual language model pretraining. NeurIPS.\n\n- Patrick Lewis, Barlas Oguz, Ruty Rinott, Sebastian Riedel, and Holger Schwenk. 2019. Mlqa: Eval- uating cross-lingual extractive question answering. arXiv preprint arXiv:1910.07475.\n\n- Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Man- dar Joshi, Danqi Chen, Omer Levy, Mike Lewis, Luke Zettlemoyer, and Veselin Stoyanov. 2019. Roberta: A robustly optimized BERT pretraining ap- proach. arXiv preprint arXiv:1907.11692.\n\n- Tomas Mikolov, Quoc V Le, and Ilya Sutskever. 2013a. Exploiting similarities among languages for ma- chine translation. arXiv preprint arXiv:1309.4168.\n\n- Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Cor- rado, and Jeff Dean. 2013b. Distributed representa- tions of words and phrases and their compositional- ity. In NIPS, pages 3111-3119.\n\n- Jeffrey Pennington, Richard Socher, and Christopher D. Manning. 2014. Glove: Global vectors for word rep- resentation. In EMNLP, pages 1532-1543.\n\n- Matthew E Peters, Mark Neumann, Mohit Iyyer, Matt Gardner, Christopher Clark, Kenton Lee, and Luke Zettlemoyer. 2018. Deep contextualized word repre- sentations. NAACL.\n\n- Telmo Pires, Eva Schlinger, and Dan Garrette. 2019. How multilingual is multilingual bert? In ACL.\n\n- Alec Radford, Karthik Narasimhan, Tim Salimans, and Ilya Sutskever. 2018. Improving language understanding by generative pre-training. URL https://s3-us-west-2.amazonaws.com/openai- assets/research-covers/language- unsupervised/language understanding paper.pdf.\n\n- Alec Radford, Jeffrey Wu, Rewon Child, David Luan, Dario Amodei, and Ilya Sutskever. 2019. Language models are unsupervised multitask learners. OpenAI Blog, 1(8).\n\n- Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, and Peter J. Liu. 2019. Exploring the limits of transfer learning with a unified text-to-text trans- former. arXiv preprint arXiv:1910.10683.\n\n- Pranav Rajpurkar, Robin Jia, and Percy Liang. 2018. Know what you don't know: Unanswerable ques- tions for squad. ACL.\n\n- Pranav Rajpurkar, Jian Zhang, Konstantin Lopyrev, and Percy Liang. 2016. SQuAD: 100,000+ questions for machine comprehension of text. In EMNLP, pages 2383-2392, Austin, Texas. Association for Compu- tational Linguistics.\n\n- Erik F Sang. 2002. Introduction to the conll-2002 shared task: Language-independent named entity recognition. CoNLL.\n\n- Tal Schuster, Ori Ram, Regina Barzilay, and Amir Globerson. 2019. Cross-lingual alignment of con- textual word embeddings, with applications to zero- shot dependency parsing. NAACL.\n\n- Aditya Siddhant, Melvin Johnson, Henry Tsai, Naveen Arivazhagan, Jason Riesa, Ankur Bapna, Orhan Fi- rat, and Karthik Raman. 2019. Evaluating the cross- lingual effectiveness of massively multilingual neu- ral machine translation. AAAI.\n\n- Jasdeep Singh, Bryan McCann, Nitish Shirish Keskar, Caiming Xiong, and Richard Socher. 2019. Xlda: Cross-lingual data augmentation for natural lan- guage inference and question answering. arXiv preprint arXiv:1905.11471.\n\n- Richard Socher, Alex Perelygin, Jean Wu, Jason Chuang, Christopher D Manning, Andrew Ng, and Christopher Potts. 2013. Recursive deep models for semantic compositionality over a sentiment tree- bank. In EMNLP, pages 1631-1642.\n\n- Xu Tan, Yi Ren, Di He, Tao Qin, Zhou Zhao, and Tie- Yan Liu. 2019. Multilingual neural machine transla- tion with knowledge distillation. ICLR.\n\n- Erik F Tjong Kim Sang and Fien De Meulder. 2003. In- troduction to the conll-2003 shared task: language- independent named entity recognition. In CoNLL, pages 142-147. Association for Computational Lin- guistics.\n\n- Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N. Gomez, Lukasz Kaiser, and Illia Polosukhin. 2017. Attention is all you need. In Advances in Neural Information Pro- cessing Systems, pages 6000-6010.\n\n- Alex Wang, Amapreet Singh, Julian Michael, Felix Hill, Omer Levy, and Samuel R Bowman. 2018. Glue: A multi-task benchmark and analysis platform for natural language understanding. arXiv preprint arXiv:1804.07461.\n\n- Guillaume Wenzek, Marie-Anne Lachaux, Alexis Con- neau, Vishrav Chaudhary, Francisco Guzman, Ar- mand Joulin, and Edouard Grave. 2019. Ccnet: Ex- tracting high quality monolingual datasets from web crawl data. arXiv preprint arXiv:1911.00359. Adina Williams, Nikita Nangia, and Samuel R Bow- man. 2017. A broad-coverage challenge corpus for sentence understanding through inference. Pro- ceedings of the 2nd Workshop on Evaluating Vector- Space Representations for NLP.\n\n- Shijie Wu, Alexis Conneau, Haoran Li, Luke Zettle- moyer, and Veselin Stoyanov. 2019. Emerging cross-lingual structure in pretrained language mod- els. ACL.\n\n- Shijie Wu and Mark Dredze. 2019. Beto, bentz, be- cas: The surprising cross-lingual effectiveness of bert. EMNLP.\n\n- Qizhe Xie, Zihang Dai, Eduard Hovy, Minh-Thang Lu- ong, and Quoc V Le. 2019. Unsupervised data aug- mentation for consistency training. arXiv preprint arXiv:1904.12848.\n\n", "annotations": {"Abstract": [{"begin": 61, "end": 1286, "idx": 0}], "Head": [{"begin": 1289, "end": 1303, "n": "1", "idx": 0}, {"begin": 4237, "end": 4251, "n": "2", "idx": 1}, {"begin": 7805, "end": 7821, "n": "3", "idx": 2}, {"begin": 11403, "end": 11415, "n": "4", "idx": 3}, {"begin": 13711, "end": 13733, "n": "5", "idx": 4}, {"begin": 14119, "end": 14186, "n": "5.1", "idx": 5}, {"begin": 17358, "end": 17374, "idx": 6}, {"begin": 20004, "end": 20046, "idx": 7}, {"begin": 20506, "end": 20545, "n": "5.2", "idx": 8}, {"begin": 21146, "end": 21151, "idx": 9}, {"begin": 24826, "end": 24861, "n": "5.3", "idx": 10}, {"begin": 26871, "end": 26925, "n": "5.4", "idx": 11}, {"begin": 27597, "end": 27609, "n": "6", "idx": 12}], "ReferenceToBib": [{"begin": 1777, "end": 1798, "target": "#b4", "idx": 0}, {"begin": 1819, "end": 1833, "idx": 1}, {"begin": 1951, "end": 1973, "target": "#b32", "idx": 2}, {"begin": 2135, "end": 2156, "target": "#b2", "idx": 3}, {"begin": 2157, "end": 2179, "target": "#b34", "idx": 4}, {"begin": 2180, "end": 2201, "target": "#b3", "idx": 5}, {"begin": 2222, "end": 2246, "target": "#b24", "idx": 6}, {"begin": 2247, "end": 2266, "target": "#b13", "idx": 7}, {"begin": 2297, "end": 2317, "target": "#b19", "idx": 8}, {"begin": 2318, "end": 2338, "target": "#b36", "idx": 9}, {"begin": 2657, "end": 2675, "target": "#b14", "idx": 10}, {"begin": 3892, "end": 3910, "target": "#b14", "idx": 11}, {"begin": 4284, "end": 4307, "target": "#b16", "idx": 12}, {"begin": 4308, "end": 4332, "target": "#b17", "idx": 13}, {"begin": 4378, "end": 4399, "target": "#b18", "idx": 14}, {"begin": 4400, "end": 4422, "target": "#b26", "idx": 15}, {"begin": 4461, "end": 4483, "target": "#b20", "idx": 16}, {"begin": 4484, "end": 4504, "target": "#b4", "idx": 17}, {"begin": 4671, "end": 4694, "target": "#b15", "idx": 18}, {"begin": 4695, "end": 4717, "target": "#b26", "idx": 19}, {"begin": 4718, "end": 4743, "target": "#b12", "idx": 20}, {"begin": 4908, "end": 4928, "target": "#b4", "idx": 21}, {"begin": 5079, "end": 5104, "target": "#b12", "idx": 22}, {"begin": 5283, "end": 5305, "target": "#b3", "idx": 23}, {"begin": 5423, "end": 5439, "idx": 24}, {"begin": 5615, "end": 5634, "target": "#b19", "idx": 25}, {"begin": 5729, "end": 5748, "target": "#b6", "idx": 26}, {"begin": 5816, "end": 5835, "target": "#b28", "idx": 27}, {"begin": 6242, "end": 6266, "target": "#b9", "idx": 28}, {"begin": 6409, "end": 6431, "target": "#b20", "idx": 29}, {"begin": 6505, "end": 6523, "target": "#b14", "idx": 30}, {"begin": 6818, "end": 6839, "target": "#b34", "idx": 31}, {"begin": 7054, "end": 7074, "target": "#b5", "idx": 32}, {"begin": 7270, "end": 7292, "target": "#b7", "idx": 33}, {"begin": 7293, "end": 7310, "target": "#b30", "idx": 34}, {"begin": 7345, "end": 7370, "target": "#b1", "idx": 35}, {"begin": 7457, "end": 7479, "target": "#b27", "idx": 36}, {"begin": 7929, "end": 7955, "target": "#b12", "idx": 37}, {"begin": 8091, "end": 8113, "target": "#b32", "idx": 38}, {"begin": 8158, "end": 8179, "target": "#b4", "idx": 39}, {"begin": 8180, "end": 8205, "target": "#b12", "idx": 40}, {"begin": 8740, "end": 8767, "target": "#b10", "idx": 41}, {"begin": 8798, "end": 8810, "target": "#b10", "idx": 42}, {"begin": 8895, "end": 8920, "target": "#b12", "idx": 43}, {"begin": 9716, "end": 9741, "target": "#b12", "idx": 44}, {"begin": 10700, "end": 10721, "target": "#b8", "idx": 45}, {"begin": 10812, "end": 10832, "target": "#b34", "idx": 46}, {"begin": 12683, "end": 12693, "idx": 47}, {"begin": 12694, "end": 12706, "target": "#b25", "idx": 48}, {"begin": 12711, "end": 12741, "idx": 49}, {"begin": 12742, "end": 12759, "target": "#b31", "idx": 50}, {"begin": 13069, "end": 13089, "target": "#b11", "idx": 51}, {"begin": 13094, "end": 13113, "target": "#b0", "idx": 52}, {"begin": 13180, "end": 13199, "target": "#b13", "idx": 53}, {"begin": 13500, "end": 13519, "target": "#b33", "idx": 54}, {"begin": 13578, "end": 13601, "target": "#b34", "idx": 55}, {"begin": 13609, "end": 13630, "target": "#b29", "idx": 56}, {"begin": 13640, "end": 13664, "target": "#b23", "idx": 57}, {"begin": 14273, "end": 14293, "target": "#b19", "idx": 58}, {"begin": 14294, "end": 14314, "target": "#b36", "idx": 59}, {"begin": 14315, "end": 14334, "target": "#b13", "idx": 60}, {"begin": 15173, "end": 15199, "target": "#b1", "idx": 61}, {"begin": 16938, "end": 16963, "target": "#b12", "idx": 62}, {"begin": 19393, "end": 19418, "target": "#b12", "idx": 63}, {"begin": 19691, "end": 19716, "target": "#b12", "idx": 64}, {"begin": 20605, "end": 20619, "idx": 65}, {"begin": 22419, "end": 22439, "target": "#b6", "idx": 66}, {"begin": 22999, "end": 23019, "target": "#b28", "idx": 67}, {"begin": 23048, "end": 23066, "target": "#b37", "idx": 68}, {"begin": 23146, "end": 23160, "idx": 69}, {"begin": 23161, "end": 23171, "idx": 70}, {"begin": 23214, "end": 23234, "target": "#b11", "idx": 71}, {"begin": 23260, "end": 23279, "target": "#b0", "idx": 72}, {"begin": 23280, "end": 23289, "target": "#b25", "idx": 73}, {"begin": 23290, "end": 23311, "idx": 74}, {"begin": 23337, "end": 23357, "target": "#b36", "idx": 75}, {"begin": 23430, "end": 23449, "target": "#b0", "idx": 76}, {"begin": 23454, "end": 23474, "target": "#b11", "idx": 77}, {"begin": 23697, "end": 23717, "target": "#b36", "idx": 78}, {"begin": 23833, "end": 23852, "target": "#b0", "idx": 79}, {"begin": 23950, "end": 23969, "target": "#b0", "idx": 80}, {"begin": 24387, "end": 24406, "target": "#b13", "idx": 81}], "ReferenceToFootnote": [{"begin": 10551, "end": 10552, "target": "#foot_0", "idx": 0}], "SectionFootnote": [{"begin": 28281, "end": 28337, "idx": 0}], "ReferenceString": [{"begin": 28354, "end": 28487, "id": "b0", "idx": 0}, {"begin": 28489, "end": 28769, "id": "b1", "idx": 1}, {"begin": 28773, "end": 28935, "id": "b2", "idx": 2}, {"begin": 28939, "end": 29178, "id": "b3", "idx": 3}, {"begin": 29182, "end": 29344, "id": "b4", "idx": 4}, {"begin": 29348, "end": 29487, "id": "b5", "idx": 5}, {"begin": 29491, "end": 29682, "id": "b6", "idx": 6}, {"begin": 29686, "end": 29950, "id": "b7", "idx": 7}, {"begin": 29954, "end": 30097, "id": "b8", "idx": 8}, {"begin": 30101, "end": 30402, "id": "b9", "idx": 9}, {"begin": 30406, "end": 30562, "id": "b10", "idx": 10}, {"begin": 30566, "end": 30807, "id": "b11", "idx": 11}, {"begin": 30811, "end": 30905, "id": "b12", "idx": 12}, {"begin": 30909, "end": 31090, "id": "b13", "idx": 13}, {"begin": 31094, "end": 31329, "id": "b14", "idx": 14}, {"begin": 31333, "end": 31484, "id": "b15", "idx": 15}, {"begin": 31488, "end": 31675, "id": "b16", "idx": 16}, {"begin": 31679, "end": 31824, "id": "b17", "idx": 17}, {"begin": 31828, "end": 31996, "id": "b18", "idx": 18}, {"begin": 32000, "end": 32098, "id": "b19", "idx": 19}, {"begin": 32102, "end": 32363, "id": "b20", "idx": 20}, {"begin": 32367, "end": 32529, "id": "b21", "idx": 21}, {"begin": 32533, "end": 32782, "id": "b22", "idx": 22}, {"begin": 32786, "end": 32904, "id": "b23", "idx": 23}, {"begin": 32908, "end": 33128, "id": "b24", "idx": 24}, {"begin": 33132, "end": 33248, "id": "b25", "idx": 25}, {"begin": 33252, "end": 33433, "id": "b26", "idx": 26}, {"begin": 33437, "end": 33673, "id": "b27", "idx": 27}, {"begin": 33677, "end": 33897, "id": "b28", "idx": 28}, {"begin": 33901, "end": 34126, "id": "b29", "idx": 29}, {"begin": 34130, "end": 34273, "id": "b30", "idx": 30}, {"begin": 34277, "end": 34489, "id": "b31", "idx": 31}, {"begin": 34493, "end": 34724, "id": "b32", "idx": 32}, {"begin": 34728, "end": 34940, "id": "b33", "idx": 33}, {"begin": 34944, "end": 35413, "id": "b34", "idx": 34}, {"begin": 35417, "end": 35573, "id": "b35", "idx": 35}, {"begin": 35577, "end": 35690, "id": "b36", "idx": 36}, {"begin": 35694, "end": 35862, "id": "b37", "idx": 37}], "ReferenceToTable": [{"begin": 21158, "end": 21159, "target": "#tab_1", "idx": 0}, {"begin": 23103, "end": 23104, "target": "#tab_2", "idx": 1}, {"begin": 24552, "end": 24553, "target": "#tab_4", "idx": 2}, {"begin": 25948, "end": 25949, "target": "#tab_6", "idx": 3}, {"begin": 26947, "end": 26948, "target": "#tab_6", "idx": 4}], "Footnote": [{"begin": 28292, "end": 28337, "id": "foot_0", "n": "2", "idx": 0}], "ReferenceToFormula": [{"begin": 10545, "end": 10549, "idx": 0}, {"begin": 19051, "end": 19055, "idx": 1}], "Paragraph": [{"begin": 71, "end": 1286, "idx": 0}, {"begin": 1304, "end": 1723, "idx": 1}, {"begin": 1724, "end": 2476, "idx": 2}, {"begin": 2477, "end": 3389, "idx": 3}, {"begin": 3390, "end": 4235, "idx": 4}, {"begin": 4252, "end": 4892, "idx": 5}, {"begin": 4893, "end": 6051, "idx": 6}, {"begin": 6052, "end": 7075, "idx": 7}, {"begin": 7076, "end": 7803, "idx": 8}, {"begin": 7822, "end": 8385, "idx": 9}, {"begin": 8386, "end": 8407, "idx": 10}, {"begin": 8408, "end": 8682, "idx": 11}, {"begin": 8683, "end": 9465, "idx": 12}, {"begin": 9466, "end": 9609, "idx": 13}, {"begin": 9610, "end": 9785, "idx": 14}, {"begin": 9786, "end": 10481, "idx": 15}, {"begin": 10482, "end": 11029, "idx": 16}, {"begin": 11030, "end": 11401, "idx": 17}, {"begin": 11416, "end": 11706, "idx": 18}, {"begin": 11707, "end": 12631, "idx": 19}, {"begin": 12632, "end": 13114, "idx": 20}, {"begin": 13115, "end": 13709, "idx": 21}, {"begin": 13734, "end": 14117, "idx": 22}, {"begin": 14187, "end": 14659, "idx": 23}, {"begin": 14660, "end": 15200, "idx": 24}, {"begin": 15201, "end": 15864, "idx": 25}, {"begin": 15865, "end": 17356, "idx": 26}, {"begin": 17375, "end": 18380, "idx": 27}, {"begin": 18381, "end": 18684, "idx": 28}, {"begin": 18685, "end": 18999, "idx": 29}, {"begin": 19000, "end": 20002, "idx": 30}, {"begin": 20047, "end": 20504, "idx": 31}, {"begin": 20546, "end": 21144, "idx": 32}, {"begin": 21152, "end": 21998, "idx": 33}, {"begin": 21999, "end": 23067, "idx": 34}, {"begin": 23068, "end": 23475, "idx": 35}, {"begin": 23476, "end": 24252, "idx": 36}, {"begin": 24253, "end": 24824, "idx": 37}, {"begin": 24862, "end": 24957, "idx": 38}, {"begin": 24958, "end": 26869, "idx": 39}, {"begin": 26926, "end": 27119, "idx": 40}, {"begin": 27120, "end": 27595, "idx": 41}, {"begin": 27610, "end": 28279, "idx": 42}], "SectionHeader": [{"begin": 0, "end": 1286, "idx": 0}], "SectionReference": [{"begin": 28339, "end": 35864, "idx": 0}], "Sentence": [{"begin": 71, "end": 230, "idx": 0}, {"begin": 231, "end": 366, "idx": 1}, {"begin": 367, "end": 586, "idx": 2}, {"begin": 587, "end": 736, "idx": 3}, {"begin": 737, "end": 989, "idx": 4}, {"begin": 990, "end": 1203, "idx": 5}, {"begin": 1204, "end": 1264, "idx": 6}, {"begin": 1265, "end": 1286, "idx": 7}, {"begin": 1304, "end": 1495, "idx": 8}, {"begin": 1496, "end": 1723, "idx": 9}, {"begin": 1724, "end": 1992, "idx": 10}, {"begin": 1993, "end": 2339, "idx": 11}, {"begin": 2340, "end": 2476, "idx": 12}, {"begin": 2477, "end": 2676, "idx": 13}, {"begin": 2677, "end": 2807, "idx": 14}, {"begin": 2808, "end": 3097, "idx": 15}, {"begin": 3098, "end": 3228, "idx": 16}, {"begin": 3229, "end": 3389, "idx": 17}, {"begin": 3390, "end": 3523, "idx": 18}, {"begin": 3524, "end": 3717, "idx": 19}, {"begin": 3718, "end": 3911, "idx": 20}, {"begin": 3912, "end": 4072, "idx": 21}, {"begin": 4073, "end": 4235, "idx": 22}, {"begin": 4252, "end": 4625, "idx": 23}, {"begin": 4626, "end": 4892, "idx": 24}, {"begin": 4893, "end": 5077, "idx": 25}, {"begin": 5078, "end": 5306, "idx": 26}, {"begin": 5307, "end": 5421, "idx": 27}, {"begin": 5422, "end": 5602, "idx": 28}, {"begin": 5603, "end": 5727, "idx": 29}, {"begin": 5728, "end": 5921, "idx": 30}, {"begin": 5922, "end": 6051, "idx": 31}, {"begin": 6052, "end": 6215, "idx": 32}, {"begin": 6216, "end": 6404, "idx": 33}, {"begin": 6405, "end": 6611, "idx": 34}, {"begin": 6612, "end": 6784, "idx": 35}, {"begin": 6785, "end": 6940, "idx": 36}, {"begin": 6941, "end": 7075, "idx": 37}, {"begin": 7076, "end": 7183, "idx": 38}, {"begin": 7184, "end": 7311, "idx": 39}, {"begin": 7312, "end": 7455, "idx": 40}, {"begin": 7456, "end": 7666, "idx": 41}, {"begin": 7667, "end": 7803, "idx": 42}, {"begin": 7822, "end": 7901, "idx": 43}, {"begin": 7902, "end": 8039, "idx": 44}, {"begin": 8040, "end": 8063, "idx": 45}, {"begin": 8064, "end": 8234, "idx": 46}, {"begin": 8235, "end": 8342, "idx": 47}, {"begin": 8343, "end": 8385, "idx": 48}, {"begin": 8386, "end": 8407, "idx": 49}, {"begin": 8408, "end": 8572, "idx": 50}, {"begin": 8573, "end": 8682, "idx": 51}, {"begin": 8683, "end": 8811, "idx": 52}, {"begin": 8812, "end": 8939, "idx": 53}, {"begin": 8940, "end": 9067, "idx": 54}, {"begin": 9068, "end": 9259, "idx": 55}, {"begin": 9260, "end": 9358, "idx": 56}, {"begin": 9359, "end": 9465, "idx": 57}, {"begin": 9466, "end": 9497, "idx": 58}, {"begin": 9498, "end": 9609, "idx": 59}, {"begin": 9610, "end": 9785, "idx": 60}, {"begin": 9786, "end": 9916, "idx": 61}, {"begin": 9917, "end": 10114, "idx": 62}, {"begin": 10115, "end": 10245, "idx": 63}, {"begin": 10246, "end": 10311, "idx": 64}, {"begin": 10312, "end": 10481, "idx": 65}, {"begin": 10482, "end": 10518, "idx": 66}, {"begin": 10519, "end": 10608, "idx": 67}, {"begin": 10609, "end": 10722, "idx": 68}, {"begin": 10723, "end": 10833, "idx": 69}, {"begin": 10834, "end": 11029, "idx": 70}, {"begin": 11030, "end": 11158, "idx": 71}, {"begin": 11159, "end": 11277, "idx": 72}, {"begin": 11278, "end": 11401, "idx": 73}, {"begin": 11416, "end": 11455, "idx": 74}, {"begin": 11456, "end": 11586, "idx": 75}, {"begin": 11587, "end": 11706, "idx": 76}, {"begin": 11707, "end": 11755, "idx": 77}, {"begin": 11756, "end": 11871, "idx": 78}, {"begin": 11872, "end": 12010, "idx": 79}, {"begin": 12011, "end": 12092, "idx": 80}, {"begin": 12093, "end": 12554, "idx": 81}, {"begin": 12555, "end": 12631, "idx": 82}, {"begin": 12632, "end": 12657, "idx": 83}, {"begin": 12658, "end": 12807, "idx": 84}, {"begin": 12808, "end": 13014, "idx": 85}, {"begin": 13015, "end": 13114, "idx": 86}, {"begin": 13115, "end": 13148, "idx": 87}, {"begin": 13149, "end": 13301, "idx": 88}, {"begin": 13302, "end": 13403, "idx": 89}, {"begin": 13404, "end": 13419, "idx": 90}, {"begin": 13420, "end": 13665, "idx": 91}, {"begin": 13666, "end": 13709, "idx": 92}, {"begin": 13734, "end": 13826, "idx": 93}, {"begin": 13827, "end": 13935, "idx": 94}, {"begin": 13936, "end": 14013, "idx": 95}, {"begin": 14014, "end": 14117, "idx": 96}, {"begin": 14187, "end": 14423, "idx": 97}, {"begin": 14424, "end": 14561, "idx": 98}, {"begin": 14562, "end": 14659, "idx": 99}, {"begin": 14660, "end": 14717, "idx": 100}, {"begin": 14718, "end": 14880, "idx": 101}, {"begin": 14881, "end": 14981, "idx": 102}, {"begin": 14982, "end": 15200, "idx": 103}, {"begin": 15201, "end": 15282, "idx": 104}, {"begin": 15283, "end": 15408, "idx": 105}, {"begin": 15409, "end": 15575, "idx": 106}, {"begin": 15576, "end": 15678, "idx": 107}, {"begin": 15679, "end": 15780, "idx": 108}, {"begin": 15781, "end": 15864, "idx": 109}, {"begin": 15865, "end": 15938, "idx": 110}, {"begin": 15939, "end": 16017, "idx": 111}, {"begin": 16018, "end": 16128, "idx": 112}, {"begin": 16129, "end": 16258, "idx": 113}, {"begin": 16259, "end": 16457, "idx": 114}, {"begin": 16458, "end": 16539, "idx": 115}, {"begin": 16540, "end": 16787, "idx": 116}, {"begin": 16788, "end": 16926, "idx": 117}, {"begin": 16927, "end": 17043, "idx": 118}, {"begin": 17044, "end": 17133, "idx": 119}, {"begin": 17134, "end": 17251, "idx": 120}, {"begin": 17252, "end": 17356, "idx": 121}, {"begin": 17375, "end": 17413, "idx": 122}, {"begin": 17414, "end": 17542, "idx": 123}, {"begin": 17543, "end": 17731, "idx": 124}, {"begin": 17732, "end": 17833, "idx": 125}, {"begin": 17834, "end": 17926, "idx": 126}, {"begin": 17927, "end": 18079, "idx": 127}, {"begin": 18080, "end": 18277, "idx": 128}, {"begin": 18278, "end": 18380, "idx": 129}, {"begin": 18381, "end": 18571, "idx": 130}, {"begin": 18572, "end": 18684, "idx": 131}, {"begin": 18685, "end": 18720, "idx": 132}, {"begin": 18721, "end": 18867, "idx": 133}, {"begin": 18868, "end": 18999, "idx": 134}, {"begin": 19000, "end": 19106, "idx": 135}, {"begin": 19107, "end": 19265, "idx": 136}, {"begin": 19266, "end": 19437, "idx": 137}, {"begin": 19438, "end": 19557, "idx": 138}, {"begin": 19558, "end": 19856, "idx": 139}, {"begin": 19857, "end": 20002, "idx": 140}, {"begin": 20047, "end": 20062, "idx": 141}, {"begin": 20063, "end": 20192, "idx": 142}, {"begin": 20193, "end": 20297, "idx": 143}, {"begin": 20298, "end": 20504, "idx": 144}, {"begin": 20546, "end": 20716, "idx": 145}, {"begin": 20717, "end": 20864, "idx": 146}, {"begin": 20865, "end": 20977, "idx": 147}, {"begin": 20978, "end": 21144, "idx": 148}, {"begin": 21152, "end": 21383, "idx": 149}, {"begin": 21384, "end": 21461, "idx": 150}, {"begin": 21462, "end": 21630, "idx": 151}, {"begin": 21631, "end": 21745, "idx": 152}, {"begin": 21746, "end": 21795, "idx": 153}, {"begin": 21796, "end": 21998, "idx": 154}, {"begin": 21999, "end": 22041, "idx": 155}, {"begin": 22042, "end": 22190, "idx": 156}, {"begin": 22191, "end": 22313, "idx": 157}, {"begin": 22314, "end": 22538, "idx": 158}, {"begin": 22539, "end": 22730, "idx": 159}, {"begin": 22731, "end": 22863, "idx": 160}, {"begin": 22864, "end": 23067, "idx": 161}, {"begin": 23068, "end": 23093, "idx": 162}, {"begin": 23094, "end": 23172, "idx": 163}, {"begin": 23173, "end": 23312, "idx": 164}, {"begin": 23313, "end": 23358, "idx": 165}, {"begin": 23359, "end": 23475, "idx": 166}, {"begin": 23476, "end": 23661, "idx": 167}, {"begin": 23662, "end": 23718, "idx": 168}, {"begin": 23719, "end": 23853, "idx": 169}, {"begin": 23854, "end": 23994, "idx": 170}, {"begin": 23995, "end": 24130, "idx": 171}, {"begin": 24131, "end": 24252, "idx": 172}, {"begin": 24253, "end": 24272, "idx": 173}, {"begin": 24273, "end": 24407, "idx": 174}, {"begin": 24408, "end": 24524, "idx": 175}, {"begin": 24525, "end": 24667, "idx": 176}, {"begin": 24668, "end": 24734, "idx": 177}, {"begin": 24735, "end": 24824, "idx": 178}, {"begin": 24862, "end": 24957, "idx": 179}, {"begin": 24958, "end": 24985, "idx": 180}, {"begin": 24986, "end": 25162, "idx": 181}, {"begin": 25163, "end": 25216, "idx": 182}, {"begin": 25217, "end": 25250, "idx": 183}, {"begin": 25251, "end": 25375, "idx": 184}, {"begin": 25376, "end": 25512, "idx": 185}, {"begin": 25513, "end": 25648, "idx": 186}, {"begin": 25649, "end": 25755, "idx": 187}, {"begin": 25756, "end": 25838, "idx": 188}, {"begin": 25839, "end": 25924, "idx": 189}, {"begin": 25925, "end": 26091, "idx": 190}, {"begin": 26092, "end": 26403, "idx": 191}, {"begin": 26404, "end": 26643, "idx": 192}, {"begin": 26644, "end": 26784, "idx": 193}, {"begin": 26785, "end": 26869, "idx": 194}, {"begin": 26926, "end": 27119, "idx": 195}, {"begin": 27120, "end": 27197, "idx": 196}, {"begin": 27198, "end": 27350, "idx": 197}, {"begin": 27351, "end": 27595, "idx": 198}, {"begin": 27610, "end": 27781, "idx": 199}, {"begin": 27782, "end": 27933, "idx": 200}, {"begin": 27934, "end": 28131, "idx": 201}, {"begin": 28132, "end": 28279, "idx": 202}], "ReferenceToFigure": [{"begin": 8415, "end": 8416, "idx": 0}, {"begin": 9617, "end": 9618, "idx": 1}, {"begin": 11037, "end": 11038, "idx": 2}, {"begin": 15322, "end": 15323, "idx": 3}, {"begin": 16139, "end": 16140, "idx": 4}, {"begin": 17141, "end": 17142, "idx": 5}, {"begin": 17449, "end": 17450, "idx": 6}, {"begin": 17934, "end": 17935, "idx": 7}, {"begin": 18740, "end": 18741, "idx": 8}, {"begin": 18875, "end": 18876, "idx": 9}, {"begin": 19222, "end": 19223, "target": "#fig_2", "idx": 10}, {"begin": 20473, "end": 20474, "target": "#fig_2", "idx": 11}], "Div": [{"begin": 71, "end": 1286, "idx": 0}, {"begin": 1289, "end": 4235, "idx": 1}, {"begin": 4237, "end": 7803, "idx": 2}, {"begin": 7805, "end": 11401, "idx": 3}, {"begin": 11403, "end": 13709, "idx": 4}, {"begin": 13711, "end": 14117, "idx": 5}, {"begin": 14119, "end": 17356, "idx": 6}, {"begin": 17358, "end": 20002, "idx": 7}, {"begin": 20004, "end": 20504, "idx": 8}, {"begin": 20506, "end": 21144, "idx": 9}, {"begin": 21146, "end": 24824, "idx": 10}, {"begin": 24826, "end": 26869, "idx": 11}, {"begin": 26871, "end": 27595, "idx": 12}, {"begin": 27597, "end": 28279, "idx": 13}], "SectionMain": [{"begin": 1286, "end": 28279, "idx": 0}]}}