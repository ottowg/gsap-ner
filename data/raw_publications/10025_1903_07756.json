{"text": "Hierarchical Routing Mixture of Experts\n\nAbstract:\nIn regression tasks the distribution of the data is often too complex to be fitted by a single model. In contrast, partition-based models are developed where data is divided and fitted by local models. These models partition the input space and do not leverage the input-output dependency of multimodal-distributed data, and strong local models are needed to make good predictions. Addressing these problems, we propose a binary tree-structured hierarchical routing mixture of experts (HRME) model that has classifiers as non-leaf node experts and simple regression models as leaf node experts. The classifier nodes jointly soft-partition the input-output space based on the natural separateness of multimodal data. This enables simple leaf experts to be effective for prediction. Further, we develop a probabilistic framework for the HRME model, and propose a recursive Expectation-Maximization (EM) based algorithm to learn both the tree structure and the expert models. Experiments on a collection of regression tasks validate the effectiveness of our method compared to a variety of other regression models.\n\nMain:\n\n\n\n1. Introduction\nOne of the challenges in modeling a regression task is that of dealing with data with complex distributions. The distribution can be multi-modal, rendering any single regression model highly biased. For instance, Figure 1a shows a synthetic data set uniformly sampled from three intersecting lines with different amount of noise. A single regression model would fail to capture the multi-modality of this data and yield poor performance. This necessitates another strategy, of divide and conquer, to partition the input space into simple sub-regions and assign a regression model to each 1 Department of Electrical and Computer Engineering, Carnegie Mellon University, Pittsburgh, PA, USA 2 School of Computer Science, Carnegie Mellon University, Pittsburgh, PA, USA. Correspondence to: Wenbo Zhao <wzhao1@andrew.cmu.edu>.\n\nPreliminary work. Copyright 2019 by the author(s).\nsub-region.\nMany models take this strategy. For example decision trees (Loh, 2014) and random forests (Breiman, 2001) divide the input space by hard-partition of feature dimensions, and make piece-wise linear predictions on each partition. Mixture models (Bailey et al., 1994) and mixtures-of-experts (Jacobs et al., 1991) perform soft-partition on the input space and assign regression models to each of the partitions. In particular, the mixture of experts models are tree-structured models with a gating mechanism to partition the input space and a collection of experts at the leaves to make local predictions.\nAlthough well-studied and have been proven effective, these models do not leverage the input-output dependency of the data distributions. For instance, as in our toy example, different regions of the output space (the y label) correspond to different modes of the data. Solely partitioning the input space would fit multiple modes of the data into each partition, still requiring complex regression models to capture the input-output relation in each of them. This problem can be avoided by jointly partitioning both the input and output spaces, such that each partition only requires a simpler local regression. This is the motivation behind our work.\nAddressing the above-mentioned issues of conventional partition-based regression methods, we propose a hierarchical routing mixture of experts (HRME) model, which separates output variables modes by jointly partitioning the input and output spaces, and makes probabilistic inferences by assigning simple regression models to each of the resultant partitions. Our HRME model can be viewed as a new member of the family of hierarchical mixture of experts (HME) (Jordan & Jacobs, 1994) models. It is binary-tree structured, and has two types of experts-the non-leaf node experts and leaf node experts. The non-leaf node experts function as a new gating mechanism to soft-partition the data based on their modes, defined on the joint distribution of input and output variables. The partitioning is performed by node-specific binary classifier. Together, the classifiers in the non-leaf nodes hierarchically partition the space into number of regions, each of which corresponds to a leaf in the tree, and within which the relationship between input and output variables is ideally unimodal. The leaf node experts make predictions on each resulting partition. If the data is well partitioned, these leaf node experts can now be relatively simple.\nHowever, the actual distribution of the data and its modes are unknown a priori. Consequently, the binary classes for each classifier (non-leaf) node are unknown. This effectively makes the partition of the output space itself a variable to be determined. To address this, we develop a probabilistic framework for our HRME model, and propose a recursive Expectation-Maximization (EM) based algorithm to optimize the joint input-output partition, the various expert models, as well as the tree structure. To the best of our knowledge, this new joint-partition based gating mechanism for HME models has not been studied yet. The closest relevant literature is by Memon et al. (2018) which partitions the space solely based on the output value to determine its optimal discretization. Our HRME model, on the other hand, uses a joint partition to determine the optimal data allocation to the leaf experts, and our model is globally optimized rather than locally optimized.\nWe test our model on a collection of standard regression tasks, and the results validate the effectiveness of our model compared to HME and other regression models. Our contributions are:\n(1) we propose a new gating mechanism via joint-partition of both input space and output space to separate the modes of complexly distributed data, making simple regression models effective for predictions;\n(2) we develop a recursive EM algorithm to jointly optimize the partition, the expert models, as well as the tree structure.\n\n2. Related Work\nDecision trees (Loh, 2014; Breiman, 2017; Quinlan, 1986) are a family of supervised learning methods that utilize a partition on the input feature space and make piece-wise linear predictions. Based on them, random forests (Breiman, 2001; Liaw et al., 2002) take an ensemble learning approach by aggregating a collection of decision trees to reduce the over-fitting tendency of a single decision tree. A pertaining issue with these tree-based methods is that they rely on hard partitions and piece-wise linear predictions, which can lead to discontinuities and high biases in predictions.\nOn the other hand, the mixture of experts (ME) models are a family of probabilistic tree-structured models with a gating mechanism and a collection of experts at the leaves. The gating mechanism is responsible for soft partitioning the input space into sub-regions such that a local expert models the distribution of each sub-region (Yuksel et al., 2012). The flexibility of the ME family embraces a rich variety of gating mechanisms and expert models. Examples include hierarchical mixture of experts (HME) (Jordan & Jacobs, 1994) which employs a binary tree structure, Bayesian HME (Bishop & Svenskn, 2002) with a Bayesian treatment, mixture of Gaussian processes (HME-GP) (Tresp, 2001; Rasmussen & Ghahramani, 2002; Yuan & Neubauer, 2009; Nguyen & Bonilla, 2014), mixture of support vector machines (HME-SVM) (Lima et al., 2007; Cao, 2003), to name only a few.\nThe ME models have three issues: (1) the gating mechanism does not explicitly leverage the input-output dependencies of the data. Rather, it performs probabilistic inputspace partitioning, based on assumed data distributions such as the multinomial distribution (Jordan & Jacobs, 1994), Gaussian distribution (Yuan & Neubauer, 2009), Dirichlet process (Rasmussen & Ghahramani, 2002), Gaussian process (Tresp, 2001), etc; (2) in ME models strong experts are often needed to gain good performance (Yuksel et al., 2012); (3) the structure of the ME models, namely the tree depth and the number of experts, is often optimized through extra procedures, such as pruning (Waterhouse & Robinson, 1995) and Bayesian model selection (Bishop & Svenskn, 2002; Kanaujia & Metaxas, 2006). This increases the complexity of model learning.\nWe address the issues with these conventional methods by (1) joint soft-partition of the input-output space based on the natural separability of the multi-modal data and (2) joint optimization on the tree structure and the expert models without extra pruning procedures.\n\n3. Hierarchical Routing Mixture of Experts\nIn this section, we present the specifications of the HRME model, formulate the optimization objective, and develop the optimization algorithm.\n\n3.1. Model Specification\nFigure 2 shows the structure of the tree model. It is a binary tree. Each non-leaf node is equipped with a classification expert, which is a binary classifier in this case. Each leaf node is equipped with a regression expert, which is a simple linear model. The basic assumption here is that the complexly distributed multi-modal data is nevertheless locally (and non-linearly) separable, and hence the non-leaf experts of the tree function as a routing mechanism to partition the data into subsets of simple (uni-modal) distributions, and route each subset to a simple leaf expert to make predictions.\nWe denote the input features as x \u2208 R d and the continuous output label as y \u2208 R. In order to route the data in such fashion, it requires to determine the optimal classifier at each non-leaf node. However, we do not have the data class information beforehand, i.e., we do not know how data can be locally separated. As a remedy, we adopt a thresholding strategy-setting a threshold t on y such that y = 0 if y < t and y = 1 otherwise. As a result, we assign binary classes to data via thresholding on y. However, note that by doing so we effectively make t a variable to be optimized, namely, we are not only partitioning on x, but also partitioning on y. We will explain optimization of this joint-partition in the later section.\nAt this point, let's assume we have known the optimal tree settings-that is, we know the tree structure (the depth and the number of nodes), and for each non-leaf node, the optimal splitting threshold t * and the classifier h \u03b2 * parameterized by the optimal parameter \u03b2 * , and for each leaf node, the regressor r \u03b8 * parameterized by the optimal parameter \u03b8 * . We then explain the prediction of y given an input x.\nSpecifically, for notation convenience, we assume the nodes are numbered such that for any two nodes n i and n j , if i < j, n i occurs either to the left of n j or above it in the tree. Each node n i carries a classifier h \u03b2 * n i\n: x \u2192 {n i+1 , n i+2 }, which assigns any instance with input x to one of the children nodes n i+1 or n i+2 . We introduce a binary-valued random variable z ni \u2208 {0, 1} to indicate x being assigned to n i or not. Then, the corresponding likelihood of x being assigned to node n i is estimated by the classifier on noden i\u22121 q(z ni | x) \u2261 q(z ni = 1 | x) \u2190\u2212 h \u03b2 * n i\u22121 (x).\n(1)\nNext, we would like to know the likelihood of a data point x being routed to a specific leaf. Denote the chain from root l 1 \u2261 n 0 to leaf l k as l 1 \u2192 . . . \u2192 l k , then the likelihood of x being assigned to leaf l k isq(z l k | x) = z l 1 . . . z l k\u22121 q(z l1 , . . . , z l k | x).\nApplying the sum-product rule and using the conditional dependency to (2) yieldq(z l k | x) = k\u22121 j=1 q(z lj+1 | z lj , x).\nFor leaf l k , it carries a regressor r \u03b8 * l k such that the predictiony l k = r \u03b8 * l k (x).\nThen, an estimate of y is given by the expectation of the predictions over all leavesy = l k \u2208leaves r \u03b8 * l k (x)q(z l k | x),\nand the corresponding conditional density for leaf l k isp(y | z l k , x) \u2190 r \u03b8 * l k (x).\n(5)\n\n3.2. Learning Algorithm\nFrom the previous section, we have shown that in order to make predictions using the tree, we need to determine the optimal tree settings, i.e., the tree structure {n i }, the nonleaf node thresholds {t ni }, the classifier parameters {\u03b2 ni }, and the leaf node regressor parameters {\u03b8 ni }.\nWe adopt a maximum-likelihood approach. Specifically, our objective is to maximize the log-likelihood for each xmax log p(y | x) (6) = log p(y | x) q(z | x) q(z | x) z q(z | x) = z q(z | x) log p(y, z | x) p(z | y, x) q(z | x) q(z | x) = z q(z | x) log p(y, z | x) q(z | x) + (7) z q(z | x) log q(z | x) p(z | y, x) ,\nwhere q(z | x) is an estimate for the true assignment mass p(z | x); (7) is commonly referred to as the evidence lower bound (ELBO) which need to be improved to maximize the log-likelihood ( 6); ( 8) is the Kullback-Leibler divergence which measures the distance of two probability masses and is always greater than or equal to zero.\nTherefore, it is natural to apply the expectationmaximization (EM) method to optimize (6). Specifically, in the E-step, we compute the ELBO (7) for all the training instancesQ(p, q) = x z q(z | x) log p(y, z | x) q(z | x) = x z q(z | x) log p(y | z, x)p(z | x) q(z | x) ,\nwhere q(z | x) is given by (3), and p(y | z, x) is given by (5) (for example, the leaf node gives a Gaussian distribution over y if we assume a linear model with Gaussian noise).\nThe true leaf node assignment mass p(z | x) is yet unknown. However, we can estimate it using the empirical frequency of the number of samples at the leaf node over the total number of training samples. This is a crude estimation, but we will provide a better strategy in the later part of this section.\nIn the M-step, we optimize the parameters to increase the ELBO (7). Specifically, we optimize the non-leaf node expert to maximize the classification accuracy, and optimize the leaf-node expert to minimize the regression error.\nHowever, as we mentioned in Section 3.1, the data classes are not available, and the non-leaf node threshold t is unknown. We provide an alternative approach to mitigate thisend if Q > Q * then Q * \u2190 Q data list \u2190 [D l , D r ] nodes per level \u2190 [node l, node r]\nGrowTree(data list, nodes per level) else Delete the subtree continue end end Algorithm 1: Recursive EM Learning of HRME difficulty. For each non-leaf node, we perform grid-search over the possible values of t, and for each t, we perform the M-step. The best t value is then obtained as the one with maximum Q-value. Although different sampling strategies can be used when searching for t, in practice we find grid-search works well.\nAs we mentioned earlier, it is difficult to estimate the true leaf node assignment mass p(z | x). Although variational approximation may be used, we propose an empirically simpler strategy. Instead of using the Q-value as a global indicator of the optimality of the tree, we propose to use the negative mean-square-errorQ alternative = \u2212mean(y \u2212 y) 2 , ()\nwhere y is given by (4).\nThe recursive EM algorithm is summarized in Algorithm 1. We start from the root node, and grow the tree recursively in a depth-first manner, i.e., from top to bottom, from left to right. Each time we grow a three-node subtree. We keep increasing the number of nodes until the lower bound Q stops increasing or the ratio of the number of samples at the leaf to the total number of samples is below some preset threshold.\n\n4. Experiments\nIn this section, we evaluate our HRME model and the recursive EM algorithm on a collection of standard regression datasets. We describe the experiment settings and present the results for our method and a wide range of baseline methods.\n\n4.1. Data\nFor demonstration purpose, we synthesize a 3-lines dataset (as shown in Figure 1a). For further evaluation, we select five other standard datasets that are commonly used in regression tasks. Four of these datasets are from the UCI machine learning repository (Dheeru & Karra Taniskidou, 2017) : the CCPP dataset (T\u00fcfekci, 2014; Kaya et al., 2012), the concrete dataset (Yeh, 1998), the Boston housing dataset (Belsley et al., 2005) and the energy dataset (Candanedo et al., 2017), and one kin40k dataset (Seeger et al., 2003; Deisenroth & Ng, 2015). The datasets range from small-sized to large-sized and from lowdimensional to high-dimensional. The statistics are shown in Table 1. The division of train and test sets are either using the default split or using 0.7 : 0.3 split.\n\n4.2. Models\nBaselines To promote a fair evaluation, we compare our method with a wide range of baselines: linear regression (LR), support vector regression (SVR), decision trees (DT), random forests (RF), hierarchical mixture of experts (HME) with strong Gaussian or Gaussian process experts, and multilayer perceptron (MLP). Each model carries a set of parameters to be estimated as well as hyperparameters (e.g., margin and kernels in SVR, depth and number of nodes in DT and RF, number of neurons and learning rate in MLP, etc.) to be tuned. We train the models on training sets, and fine-tune the hyperparameters using grid-search and three-fold cross validation on the training sets to obtain the best performance.\nThe models are implemented with scikit-learn toolkit (Buitinck et al., 2013) or PyTorch (Paszke et al., 2017). For HME models, we obtain the best available results from the literature under the same experiment settings.\nHRME For our HRME model, we train it following Algorithm 1. In our instantiation of the model, the non-leaf experts are support vector machines with radial basis function kernels (SVM-RBF). We choose two simple models for leaf experts, the linear regression model (referred to as HRME-LR) or the support vector regression model with radial basis function kernel (referred to as HRME-SVR). Similar to the training of baselines, our models are also trained and fine-tuned on the same training sets following the same strategy with the baseline methods. In addition, all non-leaf experts on the tree share the same hyperparameters, so are the leaf experts. Although it would be desirable to use different hyperparameters for nodes on different depth of the tree as the data size shrinks with the tree depth, in practice we find our model is robust to such variations.\n\n4.3. Results\nWe evaluate our methods and the baseline methods with two metrics: the mean absolute error (MAE) and the root mean squared error (RMSE).\nOn the synthetic 3-lines data, Figure 3 shows the fitting results on the test set for our methods and baseline methods.\nWe observe that our HRME models provide a more accurate prediction than the baselines. Specifically, the linear model is just predicting the mean of the three different distributions; the decision tree and random forest provide a better fit than linear regression, but discontinuities and higher variance occur due to the piece-wise linear nature of these two models. MLP achieves smaller prediction error than DT and RF, but it also shows discontinuities and failure to capture the data modality. In comparison, our HRME models provide much smoother fitting with lower bias and variance than the baselines. Note that even with linear leaf experts, the HRME-LR model is able to capture the nonlinear modality of the data and make regional predictions by soft-switching its experts among the three distributions. Further, by using non-linear leaf experts, the HRME-SVR model yields smoother predictions than the HRME-LR model with lower bias and variance. Additionally, we observe that all models here prefer the upper line to the lower line due to the higher noise level in the lower line.\nFigure 1b shows the predictions made by the experts in HRME-SVR model. We see that there are total fourteen experts (indicated by colored curves) being allocated to different regions of the data. Each expert is confident of making predictions within one data mode, as indicated by higher posterior probabilities (darker colors), and all data modes are successfully captured. Consequently, if we have prior knowledge of the data distribution, this could be used to select the experts for making the best predictions. Further, instead of using weighted-average over all experts, we 10.0 7.5 5.0 2.5 0.0 2.5 5.0 7.5 10.0 x select the top-1 expert to make predictions. Figure 1c shows the corresponding fitting results. We see a much better fit than that in Figure 3f -in the former all data modes are successfully predicted by our HRME-SVR model.\nWe further show the growth of the HRME tree on the training set. In Figure 4, the number in each circle node is the partition threshold t. The number besides each circle is the RMSE if growth stops at that node. Note the tree is grown recursively in a depth-first manner (top to bottom, left to right). We observe that the RMSE reduces as the tree grows. This validates our hypothesis that our algorithm can learn the optimal tree structure automatically without pruning afterwards, and the proposed Q-value is a good indicator of the global optimality of the tree. Further, we notice our HRME model also successfully partitions the output space based on separability of data modes by finding the thresholds like \u22121.9, 5.6, \u22126.4, etc.\nTable 2 shows comprehensive results for all the methods on all the datasets. We observe an overall improvement of our HRME methods over the baseline methods. Specifically, for large datasets like Engery and Kin40k, our methods outperform all other baselines in terms of both bias (MAE) and variance (RMSE) even for the HME models with strong Gaussian process experts and the MLP. For medium-sized datasets like CCPP and Concrete our methods generally outperform other baselines except RF. But as an ensemble method like RF, our method can also be boosted (now is averaged) to improve performance (Avnimelech & Intrator, 1999). For small dataset like Housing, our methods do not outperform DT and RF. But at a closer look we find that HRME-LR yields much smaller MAE and RMSE than HRME-SVR and is on a par with DT and RF. This obser- vation indicates the linear nature of data distributions, and hence a nonlinear regression expert would be inappropriate for this dataset. This observation is also confirmed by the poor performance of the nonlinear MLP model. Further, the data is small (506 samples) but has high dimension (13), making it difficult to separate the modes by SVM. Instead, other classifiers can be used to improve the performance of our model. We also observe that our methods can reduce the variance (low RMSE) on a majority of tasks. This shows that our methods are able to mitigate the problem of high variance of conventional tree models. In addition, we see even with simple linear leaf experts, our method can significantly outperform LR, and can compete with nonlinear models like SVR, RF and MLP. This validates our hypothesis that with our data modality-aware routing mechanism simple leaf experts can make good predictions. At last, The MLP performs poorly in most of the tasks even with fine-tuning. This shows that MLP is not able to capture the complex modality of data distributions.\nTo this point, comprehensive experiment results show that our HRME methods perform well on a wide range of regression tasks, especially on large, high-dimensional and difficult datasets. Our HRME methods can capture the complex data hierarchy, reduce variance, and make good predictions with simple leaf experts. We further explore some theoretical properties of our HRME model.  & Tanner (1999a) prove that the HME mean functions can approximate the true mean function at a rate of O(k \u22122/d ) in the L p norm.  Jiang & Tanner (1999b) also show that the HME probability density functions can approximate the data density at a rate of O(k \u22124/d ) in KL divergence. For our HRME model, since the general assumptions of these results hold, the uniform convergence also holds.\nComplexity: The complexity of EM based algorithms for HME models mainly lies in the M-step, where the reestimation of parameters involves solving a system of equations using the Newton (or Newton-like) update. In the HME models, a Newton iteration cost is O(n 3 ). In our case, the complexity of M-step is in solving the SVM. Specifically, for standard SVM solver with primal-dual interior point method, the complexity is in the Newton update and evaluation of the kernel, and hence the iteration cost is 2 using Gaussian experts; results taken from Ferrari & Milioni (2011) 3 using Gaussian process experts; results taken from Trapp et al. (2018) 4 using Gaussian process experts; results taken from Trapp et al. (2018) 5 using Gaussian process experts; results taken from Nguyen & Bonilla (2014) O(n 3 +n 2 d). As a result, to attain -error we need O( \u2212d/2 ) experts. For the HME models, we can assume uniform data partition among experts, and the total cost is O(n 3 d ). For our HRME model, the data for each node decreases with depth, and we can take the average among nodes. The resultant total cost is O(n 3 d + dn 2 d/2 ). Although the total complexity increases for our algorithm, however, the computation can be accelerated using dynamic programming at the price of storage cost. Moreover, the computation at each node can be done in parallel.\nConsistency: Zeevi et al. (1998) prove that under regularity conditions, least-squares estimators for the ME models are consistent. Further, Jiang & Tanner (2000) show that maximum likelihood estimators are consistent and asymptotically normal. Therefore, our HRME model also produces consistent estimators.\nIdentifiability: Jiang & Tanner (1999c) prove that the ME models are identifiable under regularity conditions that the experts are ordered and the model parameters are carefully initialized.\nIn the future work, we would like to provide more rigorous study on the theoretically behaviors of our HRME model.\n\n5. Conclusions\nIn this paper, we propose a hierarchical routing mixture of experts (HRME) model to address the difficulty of data partitioning and expert assigning in conventional regression models. By utilizing non-leaf classifier experts, our model is able to capture the natural data hierarchy and route the data to simple regressors for effective predictions. Furthermore,\n\nFootnotes:\n1: using Gaussian experts; results taken from Ferrari & Milioni (2011)\n\nReferences:\n\n- Avnimelech, R. and Intrator, N. Boosted mixture of experts: an ensemble learning scheme. Neural computation, 11 (2):483-497, 1999.- Bailey, T. L., Elkan, C., et al. Fitting a mixture model by ex- pectation maximization to discover motifs in bipolymers. 1994.\n\n- Belsley, D. A., Kuh, E., and Welsch, R. E. Regression diagnostics: Identifying influential data and sources of collinearity, volume 571. John Wiley & Sons, 2005.\n\n- Bishop, C. M. and Svenskn, M. Bayesian hierarchical mix- tures of experts. In Proceedings of the Nineteenth confer- ence on Uncertainty in Artificial Intelligence, pp. 57-64.\n\n- Breiman, L. Random forests. Machine learning, 45(1): 5-32, 2001.\n\n- Breiman, L. Classification and regression trees. Routledge, 2017.\n\n- Buitinck, L., Louppe, G., Blondel, M., Pedregosa, F., Mueller, A., Grisel, O., Niculae, V., Prettenhofer, P., Gramfort, A., Grobler, J., Layton, R., VanderPlas, J., Joly, A., Holt, B., and Varoquaux, G. API design for ma- chine learning software: experiences from the scikit-learn project. In ECML PKDD Workshop: Languages for Data Mining and Machine Learning, pp. 108-122, 2013.\n\n- Candanedo, L. M., Feldheim, V., and Deramaix, D. Data driven prediction models of energy use of appliances in a low-energy house. Energy and buildings, 140:81-97, 2017.\n\n- Cao, L. Support vector machines experts for time series forecasting. Neurocomputing, 51:321-339, 2003.\n\n- Deisenroth, M. P. and Ng, J. W. Distributed gaussian pro- cesses. arXiv preprint arXiv:1502.02843, 2015.\n\n- Dheeru, D. and Karra Taniskidou, E. UCI machine learning repository, 2017. URL http://archive.ics.uci. edu/ml.\n\n- Ferrari, D. B. and Milioni, A. Z. Choices and pitfalls con- cerning mixture-of-experts modeling. Pesquisa Opera- cional, 31(1):95-111, 2011.\n\n- Jacobs, R. A., Jordan, M. I., Nowlan, S. J., and Hinton, G. E. Adaptive mixtures of local experts. Neural computation, 3(1):79-87, 1991.\n\n- Jiang, W. and Tanner, M. A. On the approximation rate of hierarchical mixtures-of-experts for generalized linear models. Neural computation, 11(5):1183-1198, 1999a.\n\n- Jiang, W. and Tanner, M. A. Hierarchical mixtures-of- experts for generalized linear models: some results on denseness and consistency. In AISTATS. Citeseer, 1999b.\n\n- Jiang, W. and Tanner, M. A. On the identifiability of mixtures-of-experts. Neural Networks, 12(9):1253-1258, 1999c.\n\n- Jiang, W. and Tanner, M. A. On the asymptotic normality of hierarchical mixtures-of-experts for generalized linear models. IEEE Transactions on Information Theory, 46 (3):1005-1013, 2000.\n\n- Jordan, M. I. and Jacobs, R. A. Hierarchical mixtures of experts and the em algorithm. Neural computation, 6(2): 181-214, 1994.\n\n- Kanaujia, A. and Metaxas, D. Learning ambiguities us- ing bayesian mixture of experts. In Tools with Artificial Intelligence, 2006. ICTAI'06. 18th IEEE International Conference on, pp. 436-440. IEEE, 2006.\n\n- Kaya, H., T\u00fcfekci, P., and G\u00fcrgen, F. S. Local and global learning methods for predicting power of a combined gas & steam turbine. In Proceedings of the International Con- ference on Emerging Trends in Computer and Electronics Engineering ICETCEE, pp. 13-18, 2012.\n\n- Liaw, A., Wiener, M., et al. Classification and regression by randomforest. R news, 2(3):18-22, 2002.\n\n- Lima, C. A., Coelho, A. L., and Von Zuben, F. J. Hybridiz- ing mixtures of experts with support vector machines: Investigation into nonlinear dynamic systems identifica- tion. Information Sciences, 177(10):2049-2074, 2007.\n\n- Loh, W.-Y. Fifty years of classification and regression trees. International Statistical Review, 82(3):329-348, 2014.\n\n- Memon, S. A., Zhao, W., Raj, B., and Singh, R. Neural regression trees. arXiv preprint arXiv:1810.00974, 2018.\n\n- Nguyen, T. and Bonilla, E. Fast allocation of gaussian process experts. In International Conference on Machine Learning, pp. 145-153, 2014.\n\n- Paszke, A., Gross, S., Chintala, S., Chanan, G., Yang, E., DeVito, Z., Lin, Z., Desmaison, A., Antiga, L., and Lerer, A. Automatic differentiation in pytorch. 2017.\n\n- Quinlan, J. R. Induction of decision trees. Machine learning, 1(1):81-106, 1986.\n\n- Rasmussen, C. E. and Ghahramani, Z. Infinite mixtures of gaussian process experts. In Advances in neural informa- tion processing systems, pp. 881-888, 2002.\n\n- Seeger, M., Williams, C., and Lawrence, N. Fast forward selection to speed up sparse gaussian process regression. In Artificial Intelligence and Statistics 9, number EPFL- CONF-161318, 2003.\n\n- Trapp, M., Peharz, R., Rasmussen, C. E., and Pernkopf, F. Learning deep mixtures of gaussian process experts using sum-product networks. arXiv preprint arXiv:1809.04400, 2018.\n\n- Tresp, V. Mixtures of gaussian processes. In Advances in neural information processing systems, pp. 654-660, 2001.\n\n- T\u00fcfekci, P. Prediction of full load electrical power output of a base load operated combined cycle power plant us- ing machine learning methods. International Journal of Electrical Power & Energy Systems, 60:126-140, 2014.\n\n- Waterhouse, S. and Robinson, A. Pruning and growing hierachical mixtures of experts. 1995.\n\n- Yeh, I.-C. Modeling of strength of high-performance con- crete using artificial neural networks. Cement and Con- crete research, 28(12):1797-1808, 1998.\n\n- Yuan, C. and Neubauer, C. Variational mixture of gaus- sian process experts. In Advances in Neural Information Processing Systems, pp. 1897-1904, 2009.\n\n- Yuksel, S. E., Wilson, J. N., and Gader, P. D. Twenty years of mixture of experts. IEEE transactions on neural networks and learning systems, 23(8):1177-1193, 2012.\n\n- Zeevi, A. J., Meir, R., and Maiorov, V. Error bounds for functional approximation and estimation using mixtures of experts. IEEE Transactions on Information Theory, 44 (3):1010-1025, 1998.\n\n", "annotations": {"ReferenceToTable": [{"begin": 16322, "end": 16323, "idx": 0}, {"begin": 21174, "end": 21175, "target": "#tab_3", "idx": 1}], "SectionMain": [{"begin": 1170, "end": 26198, "idx": 0}], "ReferenceToFormula": [{"begin": 12755, "end": 12756, "idx": 0}, {"begin": 12761, "end": 12762, "target": "#formula_6", "idx": 1}], "SectionReference": [{"begin": 26283, "end": 32063, "idx": 0}], "SectionHeader": [{"begin": 0, "end": 1170, "idx": 0}], "Div": [{"begin": 51, "end": 1162, "idx": 0}, {"begin": 1173, "end": 2011, "idx": 1}, {"begin": 2013, "end": 6061, "idx": 2}, {"begin": 6063, "end": 8626, "idx": 3}, {"begin": 8628, "end": 8814, "idx": 4}, {"begin": 8816, "end": 11928, "idx": 5}, {"begin": 11930, "end": 15377, "idx": 6}, {"begin": 15379, "end": 15630, "idx": 7}, {"begin": 15632, "end": 16421, "idx": 8}, {"begin": 16423, "end": 18227, "idx": 9}, {"begin": 18229, "end": 25820, "idx": 10}, {"begin": 25822, "end": 26198, "idx": 11}], "Head": [{"begin": 1173, "end": 1188, "n": "1.", "idx": 0}, {"begin": 2013, "end": 2063, "idx": 1}, {"begin": 6063, "end": 6078, "n": "2.", "idx": 2}, {"begin": 8628, "end": 8670, "n": "3.", "idx": 3}, {"begin": 8816, "end": 8840, "n": "3.1.", "idx": 4}, {"begin": 11930, "end": 11953, "n": "3.2.", "idx": 5}, {"begin": 15379, "end": 15393, "n": "4.", "idx": 6}, {"begin": 15632, "end": 15641, "n": "4.1.", "idx": 7}, {"begin": 16423, "end": 16434, "n": "4.2.", "idx": 8}, {"begin": 18229, "end": 18241, "n": "4.3.", "idx": 9}, {"begin": 25822, "end": 25836, "n": "5.", "idx": 10}], "Paragraph": [{"begin": 51, "end": 1162, "idx": 0}, {"begin": 1189, "end": 2011, "idx": 1}, {"begin": 2064, "end": 2075, "idx": 2}, {"begin": 2076, "end": 2678, "idx": 3}, {"begin": 2679, "end": 3331, "idx": 4}, {"begin": 3332, "end": 4572, "idx": 5}, {"begin": 4573, "end": 5541, "idx": 6}, {"begin": 5542, "end": 5729, "idx": 7}, {"begin": 5730, "end": 5936, "idx": 8}, {"begin": 5937, "end": 6061, "idx": 9}, {"begin": 6079, "end": 6667, "idx": 10}, {"begin": 6668, "end": 7531, "idx": 11}, {"begin": 7532, "end": 8355, "idx": 12}, {"begin": 8356, "end": 8626, "idx": 13}, {"begin": 8671, "end": 8814, "idx": 14}, {"begin": 8841, "end": 9443, "idx": 15}, {"begin": 9444, "end": 10174, "idx": 16}, {"begin": 10175, "end": 10592, "idx": 17}, {"begin": 10593, "end": 10824, "idx": 18}, {"begin": 10825, "end": 11143, "idx": 19}, {"begin": 11199, "end": 11202, "idx": 20}, {"begin": 11203, "end": 11423, "idx": 21}, {"begin": 11487, "end": 11566, "idx": 22}, {"begin": 11611, "end": 11683, "idx": 23}, {"begin": 11706, "end": 11791, "idx": 24}, {"begin": 11834, "end": 11891, "idx": 25}, {"begin": 11925, "end": 11928, "idx": 26}, {"begin": 11954, "end": 12245, "idx": 27}, {"begin": 12246, "end": 12358, "idx": 28}, {"begin": 12564, "end": 12897, "idx": 29}, {"begin": 12898, "end": 13072, "idx": 30}, {"begin": 13170, "end": 13348, "idx": 31}, {"begin": 13349, "end": 13652, "idx": 32}, {"begin": 13653, "end": 13880, "idx": 33}, {"begin": 13881, "end": 14055, "idx": 34}, {"begin": 14143, "end": 14576, "idx": 35}, {"begin": 14577, "end": 14897, "idx": 36}, {"begin": 14933, "end": 14957, "idx": 37}, {"begin": 14958, "end": 15377, "idx": 38}, {"begin": 15394, "end": 15630, "idx": 39}, {"begin": 15642, "end": 16421, "idx": 40}, {"begin": 16435, "end": 17142, "idx": 41}, {"begin": 17143, "end": 17362, "idx": 42}, {"begin": 17363, "end": 18227, "idx": 43}, {"begin": 18242, "end": 18378, "idx": 44}, {"begin": 18379, "end": 18498, "idx": 45}, {"begin": 18499, "end": 19588, "idx": 46}, {"begin": 19589, "end": 20432, "idx": 47}, {"begin": 20433, "end": 21167, "idx": 48}, {"begin": 21168, "end": 23080, "idx": 49}, {"begin": 23081, "end": 23852, "idx": 50}, {"begin": 23853, "end": 25206, "idx": 51}, {"begin": 25207, "end": 25514, "idx": 52}, {"begin": 25515, "end": 25705, "idx": 53}, {"begin": 25706, "end": 25820, "idx": 54}, {"begin": 25837, "end": 26198, "idx": 55}], "ReferenceToBib": [{"begin": 2135, "end": 2146, "target": "#b22", "idx": 0}, {"begin": 2166, "end": 2181, "target": "#b4", "idx": 1}, {"begin": 2319, "end": 2340, "target": "#b1", "idx": 2}, {"begin": 2365, "end": 2386, "target": "#b12", "idx": 3}, {"begin": 3791, "end": 3813, "target": "#b17", "idx": 4}, {"begin": 5234, "end": 5253, "target": "#b23", "idx": 5}, {"begin": 6094, "end": 6105, "target": "#b22", "idx": 6}, {"begin": 6106, "end": 6120, "target": "#b5", "idx": 7}, {"begin": 6121, "end": 6135, "target": "#b26", "idx": 8}, {"begin": 6302, "end": 6317, "target": "#b4", "idx": 9}, {"begin": 6318, "end": 6336, "target": "#b20", "idx": 10}, {"begin": 7001, "end": 7022, "target": "#b35", "idx": 11}, {"begin": 7176, "end": 7199, "target": "#b17", "idx": 12}, {"begin": 7252, "end": 7276, "idx": 13}, {"begin": 7343, "end": 7356, "target": "#b30", "idx": 14}, {"begin": 7357, "end": 7386, "target": "#b27", "idx": 15}, {"begin": 7387, "end": 7409, "target": "#b34", "idx": 16}, {"begin": 7410, "end": 7433, "target": "#b24", "idx": 17}, {"begin": 7480, "end": 7499, "target": "#b21", "idx": 18}, {"begin": 7500, "end": 7510, "target": "#b8", "idx": 19}, {"begin": 7794, "end": 7817, "target": "#b17", "idx": 20}, {"begin": 7841, "end": 7864, "target": "#b34", "idx": 21}, {"begin": 7884, "end": 7914, "target": "#b27", "idx": 22}, {"begin": 7933, "end": 7946, "target": "#b30", "idx": 23}, {"begin": 8027, "end": 8048, "target": "#b35", "idx": 24}, {"begin": 8196, "end": 8225, "target": "#b32", "idx": 25}, {"begin": 8255, "end": 8279, "idx": 26}, {"begin": 8280, "end": 8305, "target": "#b18", "idx": 27}, {"begin": 15901, "end": 15934, "target": "#b10", "idx": 28}, {"begin": 15954, "end": 15969, "target": "#b31", "idx": 29}, {"begin": 15970, "end": 15988, "target": "#b19", "idx": 30}, {"begin": 16011, "end": 16022, "target": "#b33", "idx": 31}, {"begin": 16051, "end": 16073, "target": "#b2", "idx": 32}, {"begin": 16097, "end": 16121, "target": "#b7", "idx": 33}, {"begin": 16146, "end": 16167, "target": "#b28", "idx": 34}, {"begin": 16168, "end": 16190, "target": "#b9", "idx": 35}, {"begin": 17196, "end": 17219, "target": "#b6", "idx": 36}, {"begin": 17231, "end": 17252, "target": "#b25", "idx": 37}, {"begin": 21764, "end": 21793, "target": "#b0", "idx": 38}, {"begin": 23461, "end": 23477, "target": "#b13", "idx": 39}, {"begin": 23593, "end": 23615, "target": "#b14", "idx": 40}, {"begin": 24403, "end": 24427, "target": "#b11", "idx": 41}, {"begin": 24481, "end": 24500, "target": "#b29", "idx": 42}, {"begin": 24554, "end": 24573, "target": "#b29", "idx": 43}, {"begin": 24627, "end": 24650, "target": "#b24", "idx": 44}, {"begin": 25220, "end": 25239, "target": "#b36", "idx": 45}, {"begin": 25348, "end": 25369, "target": "#b16", "idx": 46}, {"begin": 25532, "end": 25554, "target": "#b15", "idx": 47}, {"begin": 26257, "end": 26281, "target": "#b11", "idx": 48}], "ReferenceString": [{"begin": 26298, "end": 26428, "id": "b0", "idx": 0}, {"begin": 26430, "end": 26556, "id": "b1", "idx": 1}, {"begin": 26560, "end": 26721, "id": "b2", "idx": 2}, {"begin": 26725, "end": 26899, "id": "b3", "idx": 3}, {"begin": 26903, "end": 26967, "id": "b4", "idx": 4}, {"begin": 26971, "end": 27036, "id": "b5", "idx": 5}, {"begin": 27040, "end": 27419, "id": "b6", "idx": 6}, {"begin": 27423, "end": 27591, "id": "b7", "idx": 7}, {"begin": 27595, "end": 27697, "id": "b8", "idx": 8}, {"begin": 27701, "end": 27805, "id": "b9", "idx": 9}, {"begin": 27809, "end": 27919, "id": "b10", "idx": 10}, {"begin": 27923, "end": 28063, "id": "b11", "idx": 11}, {"begin": 28067, "end": 28203, "id": "b12", "idx": 12}, {"begin": 28207, "end": 28371, "id": "b13", "idx": 13}, {"begin": 28375, "end": 28539, "id": "b14", "idx": 14}, {"begin": 28543, "end": 28658, "id": "b15", "idx": 15}, {"begin": 28662, "end": 28849, "id": "b16", "idx": 16}, {"begin": 28853, "end": 28980, "id": "b17", "idx": 17}, {"begin": 28984, "end": 29189, "id": "b18", "idx": 18}, {"begin": 29193, "end": 29457, "id": "b19", "idx": 19}, {"begin": 29461, "end": 29562, "id": "b20", "idx": 20}, {"begin": 29566, "end": 29788, "id": "b21", "idx": 21}, {"begin": 29792, "end": 29909, "id": "b22", "idx": 22}, {"begin": 29913, "end": 30023, "id": "b23", "idx": 23}, {"begin": 30027, "end": 30166, "id": "b24", "idx": 24}, {"begin": 30170, "end": 30334, "id": "b25", "idx": 25}, {"begin": 30338, "end": 30418, "id": "b26", "idx": 26}, {"begin": 30422, "end": 30579, "id": "b27", "idx": 27}, {"begin": 30583, "end": 30773, "id": "b28", "idx": 28}, {"begin": 30777, "end": 30952, "id": "b29", "idx": 29}, {"begin": 30956, "end": 31070, "id": "b30", "idx": 30}, {"begin": 31074, "end": 31296, "id": "b31", "idx": 31}, {"begin": 31300, "end": 31390, "id": "b32", "idx": 32}, {"begin": 31394, "end": 31546, "id": "b33", "idx": 33}, {"begin": 31550, "end": 31701, "id": "b34", "idx": 34}, {"begin": 31705, "end": 31869, "id": "b35", "idx": 35}, {"begin": 31873, "end": 32061, "id": "b36", "idx": 36}], "Sentence": [{"begin": 51, "end": 152, "idx": 0}, {"begin": 153, "end": 252, "idx": 1}, {"begin": 253, "end": 432, "idx": 2}, {"begin": 433, "end": 645, "idx": 3}, {"begin": 646, "end": 766, "idx": 4}, {"begin": 767, "end": 831, "idx": 5}, {"begin": 832, "end": 1023, "idx": 6}, {"begin": 1024, "end": 1162, "idx": 7}, {"begin": 1189, "end": 1297, "idx": 8}, {"begin": 1298, "end": 1387, "idx": 9}, {"begin": 1388, "end": 1518, "idx": 10}, {"begin": 1519, "end": 1626, "idx": 11}, {"begin": 1627, "end": 1956, "idx": 12}, {"begin": 1957, "end": 2011, "idx": 13}, {"begin": 2064, "end": 2075, "idx": 14}, {"begin": 2076, "end": 2107, "idx": 15}, {"begin": 2108, "end": 2303, "idx": 16}, {"begin": 2304, "end": 2484, "idx": 17}, {"begin": 2485, "end": 2678, "idx": 18}, {"begin": 2679, "end": 2816, "idx": 19}, {"begin": 2817, "end": 2948, "idx": 20}, {"begin": 2949, "end": 3138, "idx": 21}, {"begin": 3139, "end": 3291, "idx": 22}, {"begin": 3292, "end": 3331, "idx": 23}, {"begin": 3332, "end": 3690, "idx": 24}, {"begin": 3691, "end": 3822, "idx": 25}, {"begin": 3823, "end": 3930, "idx": 26}, {"begin": 3931, "end": 4105, "idx": 27}, {"begin": 4106, "end": 4171, "idx": 28}, {"begin": 4172, "end": 4417, "idx": 29}, {"begin": 4418, "end": 4485, "idx": 30}, {"begin": 4486, "end": 4572, "idx": 31}, {"begin": 4573, "end": 4653, "idx": 32}, {"begin": 4654, "end": 4735, "idx": 33}, {"begin": 4736, "end": 4828, "idx": 34}, {"begin": 4829, "end": 5076, "idx": 35}, {"begin": 5077, "end": 5195, "idx": 36}, {"begin": 5196, "end": 5354, "idx": 37}, {"begin": 5355, "end": 5541, "idx": 38}, {"begin": 5542, "end": 5706, "idx": 39}, {"begin": 5707, "end": 5729, "idx": 40}, {"begin": 5730, "end": 5936, "idx": 41}, {"begin": 5937, "end": 6061, "idx": 42}, {"begin": 6079, "end": 6271, "idx": 43}, {"begin": 6272, "end": 6480, "idx": 44}, {"begin": 6481, "end": 6667, "idx": 45}, {"begin": 6668, "end": 6841, "idx": 46}, {"begin": 6842, "end": 7023, "idx": 47}, {"begin": 7024, "end": 7120, "idx": 48}, {"begin": 7121, "end": 7531, "idx": 49}, {"begin": 7532, "end": 7661, "idx": 50}, {"begin": 7662, "end": 8306, "idx": 51}, {"begin": 8307, "end": 8355, "idx": 52}, {"begin": 8356, "end": 8626, "idx": 53}, {"begin": 8671, "end": 8814, "idx": 54}, {"begin": 8841, "end": 8888, "idx": 55}, {"begin": 8889, "end": 8909, "idx": 56}, {"begin": 8910, "end": 9013, "idx": 57}, {"begin": 9014, "end": 9098, "idx": 58}, {"begin": 9099, "end": 9443, "idx": 59}, {"begin": 9444, "end": 9640, "idx": 60}, {"begin": 9641, "end": 9759, "idx": 61}, {"begin": 9760, "end": 9878, "idx": 62}, {"begin": 9879, "end": 9947, "idx": 63}, {"begin": 9948, "end": 10099, "idx": 64}, {"begin": 10100, "end": 10174, "idx": 65}, {"begin": 10175, "end": 10538, "idx": 66}, {"begin": 10539, "end": 10592, "idx": 67}, {"begin": 10593, "end": 10779, "idx": 68}, {"begin": 10780, "end": 10824, "idx": 69}, {"begin": 10825, "end": 10934, "idx": 70}, {"begin": 10935, "end": 11037, "idx": 71}, {"begin": 11038, "end": 11143, "idx": 72}, {"begin": 11199, "end": 11202, "idx": 73}, {"begin": 11203, "end": 11296, "idx": 74}, {"begin": 11297, "end": 11360, "idx": 75}, {"begin": 11361, "end": 11423, "idx": 76}, {"begin": 11487, "end": 11566, "idx": 77}, {"begin": 11611, "end": 11683, "idx": 78}, {"begin": 11706, "end": 11791, "idx": 79}, {"begin": 11834, "end": 11891, "idx": 80}, {"begin": 11925, "end": 11928, "idx": 81}, {"begin": 11954, "end": 12245, "idx": 82}, {"begin": 12246, "end": 12285, "idx": 83}, {"begin": 12286, "end": 12358, "idx": 84}, {"begin": 12564, "end": 12897, "idx": 85}, {"begin": 12898, "end": 12988, "idx": 86}, {"begin": 12989, "end": 13072, "idx": 87}, {"begin": 13170, "end": 13348, "idx": 88}, {"begin": 13349, "end": 13408, "idx": 89}, {"begin": 13409, "end": 13551, "idx": 90}, {"begin": 13552, "end": 13652, "idx": 91}, {"begin": 13653, "end": 13720, "idx": 92}, {"begin": 13721, "end": 13880, "idx": 93}, {"begin": 13881, "end": 14003, "idx": 94}, {"begin": 14004, "end": 14055, "idx": 95}, {"begin": 14143, "end": 14275, "idx": 96}, {"begin": 14276, "end": 14392, "idx": 97}, {"begin": 14393, "end": 14459, "idx": 98}, {"begin": 14460, "end": 14576, "idx": 99}, {"begin": 14577, "end": 14674, "idx": 100}, {"begin": 14675, "end": 14766, "idx": 101}, {"begin": 14767, "end": 14897, "idx": 102}, {"begin": 14933, "end": 14957, "idx": 103}, {"begin": 14958, "end": 15014, "idx": 104}, {"begin": 15015, "end": 15144, "idx": 105}, {"begin": 15145, "end": 15184, "idx": 106}, {"begin": 15185, "end": 15377, "idx": 107}, {"begin": 15394, "end": 15517, "idx": 108}, {"begin": 15518, "end": 15630, "idx": 109}, {"begin": 15642, "end": 15725, "idx": 110}, {"begin": 15726, "end": 15832, "idx": 111}, {"begin": 15833, "end": 16191, "idx": 112}, {"begin": 16192, "end": 16287, "idx": 113}, {"begin": 16288, "end": 16324, "idx": 114}, {"begin": 16325, "end": 16421, "idx": 115}, {"begin": 16435, "end": 16748, "idx": 116}, {"begin": 16749, "end": 16967, "idx": 117}, {"begin": 16968, "end": 17142, "idx": 118}, {"begin": 17143, "end": 17253, "idx": 119}, {"begin": 17254, "end": 17362, "idx": 120}, {"begin": 17363, "end": 17422, "idx": 121}, {"begin": 17423, "end": 17552, "idx": 122}, {"begin": 17553, "end": 17751, "idx": 123}, {"begin": 17752, "end": 17913, "idx": 124}, {"begin": 17914, "end": 18016, "idx": 125}, {"begin": 18017, "end": 18227, "idx": 126}, {"begin": 18242, "end": 18378, "idx": 127}, {"begin": 18379, "end": 18498, "idx": 128}, {"begin": 18499, "end": 18585, "idx": 129}, {"begin": 18586, "end": 18866, "idx": 130}, {"begin": 18867, "end": 18996, "idx": 131}, {"begin": 18997, "end": 19106, "idx": 132}, {"begin": 19107, "end": 19310, "idx": 133}, {"begin": 19311, "end": 19453, "idx": 134}, {"begin": 19454, "end": 19588, "idx": 135}, {"begin": 19589, "end": 19659, "idx": 136}, {"begin": 19660, "end": 19784, "idx": 137}, {"begin": 19785, "end": 19963, "idx": 138}, {"begin": 19964, "end": 20104, "idx": 139}, {"begin": 20105, "end": 20253, "idx": 140}, {"begin": 20254, "end": 20304, "idx": 141}, {"begin": 20305, "end": 20432, "idx": 142}, {"begin": 20433, "end": 20497, "idx": 143}, {"begin": 20498, "end": 20571, "idx": 144}, {"begin": 20572, "end": 20644, "idx": 145}, {"begin": 20645, "end": 20735, "idx": 146}, {"begin": 20736, "end": 20787, "idx": 147}, {"begin": 20788, "end": 20998, "idx": 148}, {"begin": 20999, "end": 21162, "idx": 149}, {"begin": 21163, "end": 21167, "idx": 150}, {"begin": 21168, "end": 21244, "idx": 151}, {"begin": 21245, "end": 21325, "idx": 152}, {"begin": 21326, "end": 21547, "idx": 153}, {"begin": 21548, "end": 21656, "idx": 154}, {"begin": 21657, "end": 21794, "idx": 155}, {"begin": 21795, "end": 21867, "idx": 156}, {"begin": 21868, "end": 21988, "idx": 157}, {"begin": 21989, "end": 22139, "idx": 158}, {"begin": 22140, "end": 22226, "idx": 159}, {"begin": 22227, "end": 22346, "idx": 160}, {"begin": 22347, "end": 22426, "idx": 161}, {"begin": 22427, "end": 22518, "idx": 162}, {"begin": 22519, "end": 22625, "idx": 163}, {"begin": 22626, "end": 22787, "idx": 164}, {"begin": 22788, "end": 22916, "idx": 165}, {"begin": 22917, "end": 22993, "idx": 166}, {"begin": 22994, "end": 23080, "idx": 167}, {"begin": 23081, "end": 23267, "idx": 168}, {"begin": 23268, "end": 23393, "idx": 169}, {"begin": 23394, "end": 23459, "idx": 170}, {"begin": 23460, "end": 23591, "idx": 171}, {"begin": 23592, "end": 23743, "idx": 172}, {"begin": 23744, "end": 23852, "idx": 173}, {"begin": 23853, "end": 24062, "idx": 174}, {"begin": 24063, "end": 24117, "idx": 175}, {"begin": 24118, "end": 24178, "idx": 176}, {"begin": 24179, "end": 24665, "idx": 177}, {"begin": 24666, "end": 24722, "idx": 178}, {"begin": 24723, "end": 24827, "idx": 179}, {"begin": 24828, "end": 24933, "idx": 180}, {"begin": 24934, "end": 24983, "idx": 181}, {"begin": 24984, "end": 25142, "idx": 182}, {"begin": 25143, "end": 25206, "idx": 183}, {"begin": 25207, "end": 25338, "idx": 184}, {"begin": 25339, "end": 25451, "idx": 185}, {"begin": 25452, "end": 25514, "idx": 186}, {"begin": 25515, "end": 25705, "idx": 187}, {"begin": 25706, "end": 25820, "idx": 188}, {"begin": 25837, "end": 26020, "idx": 189}, {"begin": 26021, "end": 26185, "idx": 190}, {"begin": 26186, "end": 26198, "idx": 191}], "ReferenceToFigure": [{"begin": 1409, "end": 1411, "target": "#fig_0", "idx": 0}, {"begin": 8848, "end": 8849, "target": "#fig_1", "idx": 1}, {"begin": 15721, "end": 15723, "target": "#fig_0", "idx": 2}, {"begin": 18417, "end": 18418, "target": "#fig_2", "idx": 3}, {"begin": 19596, "end": 19598, "target": "#fig_0", "idx": 4}, {"begin": 20261, "end": 20263, "target": "#fig_0", "idx": 5}, {"begin": 20350, "end": 20352, "target": "#fig_2", "idx": 6}, {"begin": 20508, "end": 20509, "idx": 7}], "Abstract": [{"begin": 41, "end": 1162, "idx": 0}], "SectionFootnote": [{"begin": 26200, "end": 26281, "idx": 0}], "Footnote": [{"begin": 26211, "end": 26281, "id": "foot_0", "n": "1", "idx": 0}]}}